//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25971371
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_61, texmode_independent
.address_size 64

	// .globl	kernel_vblake

.entry kernel_vblake(
	.param .u64 .ptr .global .align 4 kernel_vblake_param_0,
	.param .u64 .ptr .global .align 4 kernel_vblake_param_1,
	.param .u64 .ptr .global .align 8 kernel_vblake_param_2,
	.param .u64 .ptr .global .align 8 kernel_vblake_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<2047>;
	.reg .b64 	%rd<4940>;


	ld.param.u64 	%rd4, [kernel_vblake_param_0];
	ld.param.u64 	%rd5, [kernel_vblake_param_3];
	ld.global.u32 	%r2, [%rd4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.b32	%r5, %envreg3;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %tid.x;
	add.s32 	%r8, %r6, %r7;
	add.s32 	%r1, %r8, %r2;
	ld.global.u32 	%rd6, [%rd5+56];
	cvt.u64.u32	%rd7, %r1;
	bfi.b64 	%rd8, %rd7, %rd6, 32, 32;
	ld.global.u64 	%rd9, [%rd5+8];
	xor.b64  	%rd10, %rd9, -3216926870969632768;
	add.s64 	%rd11, %rd10, 307811835297450971;
	xor.b64  	%rd12, %rd11, -5150342838838813162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9}, %rd12;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10,%dummy}, %rd12;
	}
	shf.l.wrap.b32 	%r11, %r10, %r9, 4;
	shf.l.wrap.b32 	%r12, %r9, %r10, 4;
	mov.b64 	%rd13, {%r12, %r11};
	add.s64 	%rd14, %rd13, 5458154674119421341;
	xor.b64  	%rd15, %rd14, -5150342838838813098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13}, %rd15;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14,%dummy}, %rd15;
	}
	shf.l.wrap.b32 	%r15, %r14, %r13, 21;
	shf.l.wrap.b32 	%r16, %r13, %r14, 21;
	mov.b64 	%rd16, {%r16, %r15};
	ld.global.u64 	%rd17, [%rd5];
	xor.b64  	%rd18, %rd17, -6549524092871383040;
	add.s64 	%rd19, %rd18, %rd16;
	add.s64 	%rd20, %rd19, %rd11;
	xor.b64  	%rd21, %rd20, %rd13;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r17,%dummy}, %rd21;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r18}, %rd21;
	}
	shf.r.wrap.b32 	%r19, %r18, %r17, 5;
	shf.r.wrap.b32 	%r20, %r17, %r18, 5;
	mov.b64 	%rd22, {%r20, %r19};
	add.s64 	%rd23, %rd14, %rd22;
	xor.b64  	%rd24, %rd16, %rd23;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r21,%dummy}, %rd24;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r22}, %rd24;
	}
	shf.r.wrap.b32 	%r23, %r22, %r21, 18;
	shf.r.wrap.b32 	%r24, %r21, %r22, 18;
	mov.b64 	%rd25, {%r24, %r23};
	not.b64 	%rd26, %rd20;
	not.b64 	%rd27, %rd25;
	and.b64  	%rd28, %rd26, %rd27;
	not.b64 	%rd29, %rd23;
	and.b64  	%rd30, %rd28, %rd29;
	and.b64  	%rd31, %rd25, %rd26;
	and.b64  	%rd32, %rd31, %rd23;
	or.b64  	%rd33, %rd32, %rd30;
	and.b64  	%rd34, %rd23, %rd27;
	and.b64  	%rd35, %rd34, %rd20;
	or.b64  	%rd36, %rd33, %rd35;
	and.b64  	%rd37, %rd25, %rd20;
	and.b64  	%rd38, %rd37, %rd29;
	or.b64  	%rd39, %rd36, %rd38;
	xor.b64  	%rd40, %rd39, %rd22;
	and.b64  	%rd41, %rd28, %rd23;
	and.b64  	%rd42, %rd26, %rd29;
	and.b64  	%rd43, %rd42, %rd25;
	or.b64  	%rd44, %rd43, %rd41;
	and.b64  	%rd45, %rd20, %rd27;
	and.b64  	%rd46, %rd45, %rd29;
	or.b64  	%rd47, %rd44, %rd46;
	and.b64  	%rd48, %rd37, %rd23;
	or.b64  	%rd49, %rd47, %rd48;
	xor.b64  	%rd50, %rd49, %rd40;
	ld.global.u64 	%rd51, [%rd5+24];
	xor.b64  	%rd52, %rd51, 868906878963180680;
	add.s64 	%rd53, %rd52, 8070171264341897935;
	xor.b64  	%rd54, %rd53, 1363844385690304929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r25}, %rd54;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r26,%dummy}, %rd54;
	}
	shf.l.wrap.b32 	%r27, %r26, %r25, 4;
	shf.l.wrap.b32 	%r28, %r25, %r26, 4;
	mov.b64 	%rd55, {%r28, %r27};
	add.s64 	%rd56, %rd55, 6706326878651593006;
	xor.b64  	%rd57, %rd56, 1363844385690304929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r29}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r30,%dummy}, %rd57;
	}
	shf.l.wrap.b32 	%r31, %r30, %r29, 21;
	shf.l.wrap.b32 	%r32, %r29, %r30, 21;
	mov.b64 	%rd58, {%r32, %r31};
	ld.global.u64 	%rd59, [%rd5+16];
	xor.b64  	%rd60, %rd59, -6594613858476781568;
	add.s64 	%rd61, %rd60, %rd58;
	add.s64 	%rd62, %rd61, %rd53;
	xor.b64  	%rd63, %rd62, %rd55;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r33,%dummy}, %rd63;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r34}, %rd63;
	}
	shf.r.wrap.b32 	%r35, %r34, %r33, 5;
	shf.r.wrap.b32 	%r36, %r33, %r34, 5;
	mov.b64 	%rd64, {%r36, %r35};
	add.s64 	%rd65, %rd56, %rd64;
	xor.b64  	%rd66, %rd58, %rd65;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r37,%dummy}, %rd66;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r38}, %rd66;
	}
	shf.r.wrap.b32 	%r39, %r38, %r37, 18;
	shf.r.wrap.b32 	%r40, %r37, %r38, 18;
	mov.b64 	%rd67, {%r40, %r39};
	not.b64 	%rd68, %rd62;
	not.b64 	%rd69, %rd67;
	and.b64  	%rd70, %rd68, %rd69;
	not.b64 	%rd71, %rd65;
	and.b64  	%rd72, %rd70, %rd71;
	and.b64  	%rd73, %rd67, %rd68;
	and.b64  	%rd74, %rd73, %rd65;
	or.b64  	%rd75, %rd74, %rd72;
	and.b64  	%rd76, %rd65, %rd69;
	and.b64  	%rd77, %rd76, %rd62;
	or.b64  	%rd78, %rd75, %rd77;
	and.b64  	%rd79, %rd67, %rd62;
	and.b64  	%rd80, %rd79, %rd71;
	or.b64  	%rd81, %rd78, %rd80;
	xor.b64  	%rd82, %rd81, %rd64;
	and.b64  	%rd83, %rd70, %rd65;
	and.b64  	%rd84, %rd68, %rd71;
	and.b64  	%rd85, %rd84, %rd67;
	or.b64  	%rd86, %rd85, %rd83;
	and.b64  	%rd87, %rd62, %rd69;
	and.b64  	%rd88, %rd87, %rd71;
	or.b64  	%rd89, %rd86, %rd88;
	and.b64  	%rd90, %rd79, %rd65;
	or.b64  	%rd91, %rd89, %rd90;
	xor.b64  	%rd92, %rd91, %rd82;
	ld.global.u64 	%rd93, [%rd5+40];
	xor.b64  	%rd94, %rd93, 4394605518411334188;
	add.s64 	%rd95, %rd94, 6351467748351541498;
	xor.b64  	%rd96, %rd95, 5631123829701952855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r41}, %rd96;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r42,%dummy}, %rd96;
	}
	shf.l.wrap.b32 	%r43, %r42, %r41, 4;
	shf.l.wrap.b32 	%r44, %r41, %r42, 4;
	mov.b64 	%rd97, {%r44, %r43};
	add.s64 	%rd98, %rd97, -6464152495656057262;
	xor.b64  	%rd99, %rd98, -5631123829701952856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r45}, %rd99;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r46,%dummy}, %rd99;
	}
	shf.l.wrap.b32 	%r47, %r46, %r45, 21;
	shf.l.wrap.b32 	%r48, %r45, %r46, 21;
	mov.b64 	%rd100, {%r48, %r47};
	ld.global.u64 	%rd101, [%rd5+32];
	xor.b64  	%rd102, %rd101, 5712024393863467499;
	add.s64 	%rd103, %rd102, %rd100;
	add.s64 	%rd104, %rd103, %rd95;
	xor.b64  	%rd105, %rd104, %rd97;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r49,%dummy}, %rd105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r50}, %rd105;
	}
	shf.r.wrap.b32 	%r51, %r50, %r49, 5;
	shf.r.wrap.b32 	%r52, %r49, %r50, 5;
	mov.b64 	%rd106, {%r52, %r51};
	add.s64 	%rd107, %rd98, %rd106;
	xor.b64  	%rd108, %rd100, %rd107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r53,%dummy}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r54}, %rd108;
	}
	shf.r.wrap.b32 	%r55, %r54, %r53, 18;
	shf.r.wrap.b32 	%r56, %r53, %r54, 18;
	mov.b64 	%rd109, {%r56, %r55};
	not.b64 	%rd110, %rd104;
	not.b64 	%rd111, %rd109;
	and.b64  	%rd112, %rd110, %rd111;
	not.b64 	%rd113, %rd107;
	and.b64  	%rd114, %rd112, %rd113;
	and.b64  	%rd115, %rd109, %rd110;
	and.b64  	%rd116, %rd115, %rd107;
	or.b64  	%rd117, %rd116, %rd114;
	and.b64  	%rd118, %rd107, %rd111;
	and.b64  	%rd119, %rd118, %rd104;
	or.b64  	%rd120, %rd117, %rd119;
	and.b64  	%rd121, %rd109, %rd104;
	and.b64  	%rd122, %rd121, %rd113;
	or.b64  	%rd123, %rd120, %rd122;
	xor.b64  	%rd124, %rd123, %rd106;
	and.b64  	%rd125, %rd112, %rd107;
	and.b64  	%rd126, %rd110, %rd113;
	and.b64  	%rd127, %rd126, %rd109;
	or.b64  	%rd128, %rd127, %rd125;
	and.b64  	%rd129, %rd104, %rd111;
	and.b64  	%rd130, %rd129, %rd113;
	or.b64  	%rd131, %rd128, %rd130;
	and.b64  	%rd132, %rd121, %rd107;
	or.b64  	%rd133, %rd131, %rd132;
	xor.b64  	%rd134, %rd133, %rd124;
	xor.b64  	%rd135, %rd8, -4926843755437766656;
	add.s64 	%rd136, %rd135, 3717293225735503936;
	xor.b64  	%rd137, %rd136, 7863536789621132781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r57}, %rd137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r58,%dummy}, %rd137;
	}
	shf.l.wrap.b32 	%r59, %r58, %r57, 4;
	shf.l.wrap.b32 	%r60, %r57, %r58, 4;
	mov.b64 	%rd138, {%r60, %r59};
	add.s64 	%rd139, %rd138, -4146243563885628845;
	xor.b64  	%rd140, %rd139, 7863536789621132781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r61}, %rd140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r62,%dummy}, %rd140;
	}
	shf.l.wrap.b32 	%r63, %r62, %r61, 21;
	shf.l.wrap.b32 	%r64, %r61, %r62, 21;
	mov.b64 	%rd141, {%r64, %r63};
	ld.global.u64 	%rd142, [%rd5+48];
	xor.b64  	%rd143, %rd142, 5045910881260042717;
	add.s64 	%rd144, %rd143, %rd141;
	add.s64 	%rd145, %rd144, %rd136;
	xor.b64  	%rd146, %rd145, %rd138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r65,%dummy}, %rd146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r66}, %rd146;
	}
	shf.r.wrap.b32 	%r67, %r66, %r65, 5;
	shf.r.wrap.b32 	%r68, %r65, %r66, 5;
	mov.b64 	%rd147, {%r68, %r67};
	add.s64 	%rd148, %rd139, %rd147;
	xor.b64  	%rd149, %rd141, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r69,%dummy}, %rd149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r70}, %rd149;
	}
	shf.r.wrap.b32 	%r71, %r70, %r69, 18;
	shf.r.wrap.b32 	%r72, %r69, %r70, 18;
	mov.b64 	%rd150, {%r72, %r71};
	not.b64 	%rd151, %rd145;
	not.b64 	%rd152, %rd150;
	and.b64  	%rd153, %rd151, %rd152;
	not.b64 	%rd154, %rd148;
	and.b64  	%rd155, %rd153, %rd154;
	and.b64  	%rd156, %rd150, %rd151;
	and.b64  	%rd157, %rd156, %rd148;
	or.b64  	%rd158, %rd157, %rd155;
	and.b64  	%rd159, %rd148, %rd152;
	and.b64  	%rd160, %rd159, %rd145;
	or.b64  	%rd161, %rd158, %rd160;
	and.b64  	%rd162, %rd150, %rd145;
	and.b64  	%rd163, %rd162, %rd154;
	or.b64  	%rd164, %rd161, %rd163;
	xor.b64  	%rd165, %rd164, %rd147;
	and.b64  	%rd166, %rd153, %rd148;
	and.b64  	%rd167, %rd151, %rd154;
	and.b64  	%rd168, %rd167, %rd150;
	or.b64  	%rd169, %rd168, %rd166;
	and.b64  	%rd170, %rd145, %rd152;
	and.b64  	%rd171, %rd170, %rd154;
	or.b64  	%rd172, %rd169, %rd171;
	and.b64  	%rd173, %rd162, %rd148;
	or.b64  	%rd174, %rd172, %rd173;
	xor.b64  	%rd175, %rd174, %rd165;
	add.s64 	%rd176, %rd67, %rd20;
	add.s64 	%rd177, %rd176, -3341658112243943424;
	xor.b64  	%rd178, %rd177, %rd175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r73}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r74,%dummy}, %rd178;
	}
	shf.l.wrap.b32 	%r75, %r74, %r73, 4;
	shf.l.wrap.b32 	%r76, %r73, %r74, 4;
	mov.b64 	%rd179, {%r76, %r75};
	add.s64 	%rd180, %rd107, %rd179;
	xor.b64  	%rd181, %rd67, %rd180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r77}, %rd181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r78,%dummy}, %rd181;
	}
	shf.l.wrap.b32 	%r79, %r78, %r77, 21;
	shf.l.wrap.b32 	%r80, %r77, %r78, 21;
	mov.b64 	%rd182, {%r80, %r79};
	add.s64 	%rd183, %rd182, %rd177;
	add.s64 	%rd184, %rd183, 5987067145339136795;
	xor.b64  	%rd185, %rd184, %rd179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r81,%dummy}, %rd185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r82}, %rd185;
	}
	shf.r.wrap.b32 	%r83, %r82, %r81, 5;
	shf.r.wrap.b32 	%r84, %r81, %r82, 5;
	mov.b64 	%rd186, {%r84, %r83};
	add.s64 	%rd187, %rd180, %rd186;
	xor.b64  	%rd188, %rd182, %rd187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r85,%dummy}, %rd188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r86}, %rd188;
	}
	shf.r.wrap.b32 	%r87, %r86, %r85, 18;
	shf.r.wrap.b32 	%r88, %r85, %r86, 18;
	mov.b64 	%rd189, {%r88, %r87};
	not.b64 	%rd190, %rd184;
	not.b64 	%rd191, %rd189;
	and.b64  	%rd192, %rd190, %rd191;
	not.b64 	%rd193, %rd187;
	and.b64  	%rd194, %rd192, %rd193;
	and.b64  	%rd195, %rd189, %rd190;
	and.b64  	%rd196, %rd195, %rd187;
	or.b64  	%rd197, %rd196, %rd194;
	and.b64  	%rd198, %rd187, %rd191;
	and.b64  	%rd199, %rd198, %rd184;
	or.b64  	%rd200, %rd197, %rd199;
	and.b64  	%rd201, %rd189, %rd184;
	and.b64  	%rd202, %rd201, %rd193;
	or.b64  	%rd203, %rd200, %rd202;
	xor.b64  	%rd204, %rd203, %rd186;
	and.b64  	%rd205, %rd192, %rd187;
	and.b64  	%rd206, %rd190, %rd193;
	and.b64  	%rd207, %rd206, %rd189;
	or.b64  	%rd208, %rd207, %rd205;
	and.b64  	%rd209, %rd184, %rd191;
	and.b64  	%rd210, %rd209, %rd193;
	or.b64  	%rd211, %rd208, %rd210;
	and.b64  	%rd212, %rd201, %rd187;
	or.b64  	%rd213, %rd211, %rd212;
	xor.b64  	%rd214, %rd213, %rd204;
	add.s64 	%rd215, %rd109, %rd62;
	add.s64 	%rd216, %rd215, -7446784132049864704;
	xor.b64  	%rd217, %rd216, %rd50;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r89}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r90,%dummy}, %rd217;
	}
	shf.l.wrap.b32 	%r91, %r90, %r89, 4;
	shf.l.wrap.b32 	%r92, %r89, %r90, 4;
	mov.b64 	%rd218, {%r92, %r91};
	add.s64 	%rd219, %rd148, %rd218;
	xor.b64  	%rd220, %rd109, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r93}, %rd220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r94,%dummy}, %rd220;
	}
	shf.l.wrap.b32 	%r95, %r94, %r93, 21;
	shf.l.wrap.b32 	%r96, %r93, %r94, 21;
	mov.b64 	%rd221, {%r96, %r95};
	add.s64 	%rd222, %rd221, %rd216;
	add.s64 	%rd223, %rd222, 3450974313248867902;
	xor.b64  	%rd224, %rd223, %rd218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r97,%dummy}, %rd224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r98}, %rd224;
	}
	shf.r.wrap.b32 	%r99, %r98, %r97, 5;
	shf.r.wrap.b32 	%r100, %r97, %r98, 5;
	mov.b64 	%rd225, {%r100, %r99};
	add.s64 	%rd226, %rd219, %rd225;
	xor.b64  	%rd227, %rd221, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r101,%dummy}, %rd227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r102}, %rd227;
	}
	shf.r.wrap.b32 	%r103, %r102, %r101, 18;
	shf.r.wrap.b32 	%r104, %r101, %r102, 18;
	mov.b64 	%rd228, {%r104, %r103};
	not.b64 	%rd229, %rd223;
	not.b64 	%rd230, %rd228;
	and.b64  	%rd231, %rd229, %rd230;
	not.b64 	%rd232, %rd226;
	and.b64  	%rd233, %rd231, %rd232;
	and.b64  	%rd234, %rd228, %rd229;
	and.b64  	%rd235, %rd234, %rd226;
	or.b64  	%rd236, %rd235, %rd233;
	and.b64  	%rd237, %rd226, %rd230;
	and.b64  	%rd238, %rd237, %rd223;
	or.b64  	%rd239, %rd236, %rd238;
	and.b64  	%rd240, %rd228, %rd223;
	and.b64  	%rd241, %rd240, %rd232;
	or.b64  	%rd242, %rd239, %rd241;
	xor.b64  	%rd243, %rd242, %rd225;
	and.b64  	%rd244, %rd231, %rd226;
	and.b64  	%rd245, %rd229, %rd232;
	and.b64  	%rd246, %rd245, %rd228;
	or.b64  	%rd247, %rd246, %rd244;
	and.b64  	%rd248, %rd223, %rd230;
	and.b64  	%rd249, %rd248, %rd232;
	or.b64  	%rd250, %rd247, %rd249;
	and.b64  	%rd251, %rd240, %rd226;
	or.b64  	%rd252, %rd250, %rd251;
	xor.b64  	%rd253, %rd252, %rd243;
	add.s64 	%rd254, %rd150, %rd104;
	add.s64 	%rd255, %rd254, 7251808426145424871;
	xor.b64  	%rd256, %rd255, %rd92;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r105}, %rd256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r106,%dummy}, %rd256;
	}
	shf.l.wrap.b32 	%r107, %r106, %r105, 4;
	shf.l.wrap.b32 	%r108, %r105, %r106, 4;
	mov.b64 	%rd257, {%r108, %r107};
	add.s64 	%rd258, %rd23, %rd257;
	xor.b64  	%rd259, %rd150, %rd258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r109}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r110,%dummy}, %rd259;
	}
	shf.l.wrap.b32 	%r111, %r110, %r109, 21;
	shf.l.wrap.b32 	%r112, %r109, %r110, 21;
	mov.b64 	%rd260, {%r112, %r111};
	add.s64 	%rd261, %rd260, %rd255;
	add.s64 	%rd262, %rd261, -4972871168744972288;
	xor.b64  	%rd263, %rd262, %rd257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r113,%dummy}, %rd263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r114}, %rd263;
	}
	shf.r.wrap.b32 	%r115, %r114, %r113, 5;
	shf.r.wrap.b32 	%r116, %r113, %r114, 5;
	mov.b64 	%rd264, {%r116, %r115};
	add.s64 	%rd265, %rd258, %rd264;
	xor.b64  	%rd266, %rd260, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r117,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r118}, %rd266;
	}
	shf.r.wrap.b32 	%r119, %r118, %r117, 18;
	shf.r.wrap.b32 	%r120, %r117, %r118, 18;
	mov.b64 	%rd267, {%r120, %r119};
	not.b64 	%rd268, %rd262;
	not.b64 	%rd269, %rd267;
	and.b64  	%rd270, %rd268, %rd269;
	not.b64 	%rd271, %rd265;
	and.b64  	%rd272, %rd270, %rd271;
	and.b64  	%rd273, %rd267, %rd268;
	and.b64  	%rd274, %rd273, %rd265;
	or.b64  	%rd275, %rd274, %rd272;
	and.b64  	%rd276, %rd265, %rd269;
	and.b64  	%rd277, %rd276, %rd262;
	or.b64  	%rd278, %rd275, %rd277;
	and.b64  	%rd279, %rd267, %rd262;
	and.b64  	%rd280, %rd279, %rd271;
	or.b64  	%rd281, %rd278, %rd280;
	xor.b64  	%rd282, %rd281, %rd264;
	and.b64  	%rd283, %rd270, %rd265;
	and.b64  	%rd284, %rd268, %rd271;
	and.b64  	%rd285, %rd284, %rd267;
	or.b64  	%rd286, %rd285, %rd283;
	and.b64  	%rd287, %rd262, %rd269;
	and.b64  	%rd288, %rd287, %rd271;
	or.b64  	%rd289, %rd286, %rd288;
	and.b64  	%rd290, %rd279, %rd265;
	or.b64  	%rd291, %rd289, %rd290;
	xor.b64  	%rd292, %rd291, %rd282;
	add.s64 	%rd293, %rd25, %rd145;
	add.s64 	%rd294, %rd293, 7194923001510760043;
	xor.b64  	%rd295, %rd294, %rd134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r121}, %rd295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r122,%dummy}, %rd295;
	}
	shf.l.wrap.b32 	%r123, %r122, %r121, 4;
	shf.l.wrap.b32 	%r124, %r121, %r122, 4;
	mov.b64 	%rd296, {%r124, %r123};
	add.s64 	%rd297, %rd65, %rd296;
	xor.b64  	%rd298, %rd25, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r125}, %rd298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r126,%dummy}, %rd298;
	}
	shf.l.wrap.b32 	%r127, %r126, %r125, 21;
	shf.l.wrap.b32 	%r128, %r125, %r126, 21;
	mov.b64 	%rd299, {%r128, %r127};
	add.s64 	%rd300, %rd299, %rd294;
	add.s64 	%rd301, %rd300, -2856998567947870208;
	xor.b64  	%rd302, %rd301, %rd296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r129,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r130}, %rd302;
	}
	shf.r.wrap.b32 	%r131, %r130, %r129, 5;
	shf.r.wrap.b32 	%r132, %r129, %r130, 5;
	mov.b64 	%rd303, {%r132, %r131};
	add.s64 	%rd304, %rd297, %rd303;
	xor.b64  	%rd305, %rd299, %rd304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r133,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r134}, %rd305;
	}
	shf.r.wrap.b32 	%r135, %r134, %r133, 18;
	shf.r.wrap.b32 	%r136, %r133, %r134, 18;
	mov.b64 	%rd306, {%r136, %r135};
	not.b64 	%rd307, %rd301;
	not.b64 	%rd308, %rd306;
	and.b64  	%rd309, %rd307, %rd308;
	not.b64 	%rd310, %rd304;
	and.b64  	%rd311, %rd309, %rd310;
	and.b64  	%rd312, %rd306, %rd307;
	and.b64  	%rd313, %rd312, %rd304;
	or.b64  	%rd314, %rd313, %rd311;
	and.b64  	%rd315, %rd304, %rd308;
	and.b64  	%rd316, %rd315, %rd301;
	or.b64  	%rd317, %rd314, %rd316;
	and.b64  	%rd318, %rd306, %rd301;
	and.b64  	%rd319, %rd318, %rd310;
	or.b64  	%rd320, %rd317, %rd319;
	xor.b64  	%rd321, %rd320, %rd303;
	and.b64  	%rd322, %rd309, %rd304;
	and.b64  	%rd323, %rd307, %rd310;
	and.b64  	%rd324, %rd323, %rd306;
	or.b64  	%rd325, %rd324, %rd322;
	and.b64  	%rd326, %rd301, %rd308;
	and.b64  	%rd327, %rd326, %rd310;
	or.b64  	%rd328, %rd325, %rd327;
	and.b64  	%rd329, %rd318, %rd304;
	or.b64  	%rd330, %rd328, %rd329;
	xor.b64  	%rd331, %rd330, %rd321;
	add.s64 	%rd332, %rd306, %rd184;
	add.s64 	%rd333, %rd332, 3450974313248867902;
	xor.b64  	%rd334, %rd333, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r137}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r138,%dummy}, %rd334;
	}
	shf.l.wrap.b32 	%r139, %r138, %r137, 4;
	shf.l.wrap.b32 	%r140, %r137, %r138, 4;
	mov.b64 	%rd335, {%r140, %r139};
	add.s64 	%rd336, %rd265, %rd335;
	xor.b64  	%rd337, %rd306, %rd336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r141}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r142,%dummy}, %rd337;
	}
	shf.l.wrap.b32 	%r143, %r142, %r141, 21;
	shf.l.wrap.b32 	%r144, %r141, %r142, 21;
	mov.b64 	%rd338, {%r144, %r143};
	add.s64 	%rd339, %rd338, %rd333;
	add.s64 	%rd340, %rd339, -2856998567947870208;
	xor.b64  	%rd341, %rd340, %rd335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r145,%dummy}, %rd341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r146}, %rd341;
	}
	shf.r.wrap.b32 	%r147, %r146, %r145, 5;
	shf.r.wrap.b32 	%r148, %r145, %r146, 5;
	mov.b64 	%rd342, {%r148, %r147};
	add.s64 	%rd343, %rd336, %rd342;
	xor.b64  	%rd344, %rd338, %rd343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r149,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r150}, %rd344;
	}
	shf.r.wrap.b32 	%r151, %r150, %r149, 18;
	shf.r.wrap.b32 	%r152, %r149, %r150, 18;
	mov.b64 	%rd345, {%r152, %r151};
	not.b64 	%rd346, %rd340;
	not.b64 	%rd347, %rd345;
	and.b64  	%rd348, %rd346, %rd347;
	not.b64 	%rd349, %rd343;
	and.b64  	%rd350, %rd348, %rd349;
	and.b64  	%rd351, %rd345, %rd346;
	and.b64  	%rd352, %rd351, %rd343;
	or.b64  	%rd353, %rd352, %rd350;
	and.b64  	%rd354, %rd343, %rd347;
	and.b64  	%rd355, %rd354, %rd340;
	or.b64  	%rd356, %rd353, %rd355;
	and.b64  	%rd357, %rd345, %rd340;
	and.b64  	%rd358, %rd357, %rd349;
	or.b64  	%rd359, %rd356, %rd358;
	xor.b64  	%rd360, %rd359, %rd342;
	and.b64  	%rd361, %rd348, %rd343;
	and.b64  	%rd362, %rd346, %rd349;
	and.b64  	%rd363, %rd362, %rd345;
	or.b64  	%rd364, %rd363, %rd361;
	and.b64  	%rd365, %rd340, %rd347;
	and.b64  	%rd366, %rd365, %rd349;
	or.b64  	%rd367, %rd364, %rd366;
	and.b64  	%rd368, %rd357, %rd343;
	or.b64  	%rd369, %rd367, %rd368;
	xor.b64  	%rd370, %rd369, %rd360;
	add.s64 	%rd371, %rd189, %rd223;
	add.s64 	%rd372, %rd371, 5987067145339136795;
	xor.b64  	%rd373, %rd372, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r153}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r154,%dummy}, %rd373;
	}
	shf.l.wrap.b32 	%r155, %r154, %r153, 4;
	shf.l.wrap.b32 	%r156, %r153, %r154, 4;
	mov.b64 	%rd374, {%r156, %r155};
	add.s64 	%rd375, %rd304, %rd374;
	xor.b64  	%rd376, %rd189, %rd375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r157}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r158,%dummy}, %rd376;
	}
	shf.l.wrap.b32 	%r159, %r158, %r157, 21;
	shf.l.wrap.b32 	%r160, %r157, %r158, 21;
	mov.b64 	%rd377, {%r160, %r159};
	add.s64 	%rd378, %rd102, %rd377;
	add.s64 	%rd379, %rd378, %rd372;
	xor.b64  	%rd380, %rd379, %rd374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r161,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r162}, %rd380;
	}
	shf.r.wrap.b32 	%r163, %r162, %r161, 5;
	shf.r.wrap.b32 	%r164, %r161, %r162, 5;
	mov.b64 	%rd381, {%r164, %r163};
	add.s64 	%rd382, %rd375, %rd381;
	xor.b64  	%rd383, %rd377, %rd382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r165,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r166}, %rd383;
	}
	shf.r.wrap.b32 	%r167, %r166, %r165, 18;
	shf.r.wrap.b32 	%r168, %r165, %r166, 18;
	mov.b64 	%rd384, {%r168, %r167};
	not.b64 	%rd385, %rd379;
	not.b64 	%rd386, %rd384;
	and.b64  	%rd387, %rd385, %rd386;
	not.b64 	%rd388, %rd382;
	and.b64  	%rd389, %rd387, %rd388;
	and.b64  	%rd390, %rd384, %rd385;
	and.b64  	%rd391, %rd390, %rd382;
	or.b64  	%rd392, %rd391, %rd389;
	and.b64  	%rd393, %rd382, %rd386;
	and.b64  	%rd394, %rd393, %rd379;
	or.b64  	%rd395, %rd392, %rd394;
	and.b64  	%rd396, %rd384, %rd379;
	and.b64  	%rd397, %rd396, %rd388;
	or.b64  	%rd398, %rd395, %rd397;
	xor.b64  	%rd399, %rd398, %rd381;
	and.b64  	%rd400, %rd387, %rd382;
	and.b64  	%rd401, %rd385, %rd388;
	and.b64  	%rd402, %rd401, %rd384;
	or.b64  	%rd403, %rd402, %rd400;
	and.b64  	%rd404, %rd379, %rd386;
	and.b64  	%rd405, %rd404, %rd388;
	or.b64  	%rd406, %rd403, %rd405;
	and.b64  	%rd407, %rd396, %rd382;
	or.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd408, %rd399;
	add.s64 	%rd410, %rd228, %rd262;
	add.s64 	%rd411, %rd410, 7194923001510760043;
	xor.b64  	%rd412, %rd411, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r169}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r170,%dummy}, %rd412;
	}
	shf.l.wrap.b32 	%r171, %r170, %r169, 4;
	shf.l.wrap.b32 	%r172, %r169, %r170, 4;
	mov.b64 	%rd413, {%r172, %r171};
	add.s64 	%rd414, %rd187, %rd413;
	xor.b64  	%rd415, %rd228, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r173}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r174,%dummy}, %rd415;
	}
	shf.l.wrap.b32 	%r175, %r174, %r173, 21;
	shf.l.wrap.b32 	%r176, %r173, %r174, 21;
	mov.b64 	%rd416, {%r176, %r175};
	add.s64 	%rd417, %rd416, %rd411;
	add.s64 	%rd418, %rd417, -3341658112243943424;
	xor.b64  	%rd419, %rd418, %rd413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r177,%dummy}, %rd419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r178}, %rd419;
	}
	shf.r.wrap.b32 	%r179, %r178, %r177, 5;
	shf.r.wrap.b32 	%r180, %r177, %r178, 5;
	mov.b64 	%rd420, {%r180, %r179};
	add.s64 	%rd421, %rd414, %rd420;
	xor.b64  	%rd422, %rd416, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r181,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r182}, %rd422;
	}
	shf.r.wrap.b32 	%r183, %r182, %r181, 18;
	shf.r.wrap.b32 	%r184, %r181, %r182, 18;
	mov.b64 	%rd423, {%r184, %r183};
	not.b64 	%rd424, %rd418;
	not.b64 	%rd425, %rd423;
	and.b64  	%rd426, %rd424, %rd425;
	not.b64 	%rd427, %rd421;
	and.b64  	%rd428, %rd426, %rd427;
	and.b64  	%rd429, %rd423, %rd424;
	and.b64  	%rd430, %rd429, %rd421;
	or.b64  	%rd431, %rd430, %rd428;
	and.b64  	%rd432, %rd421, %rd425;
	and.b64  	%rd433, %rd432, %rd418;
	or.b64  	%rd434, %rd431, %rd433;
	and.b64  	%rd435, %rd423, %rd418;
	and.b64  	%rd436, %rd435, %rd427;
	or.b64  	%rd437, %rd434, %rd436;
	xor.b64  	%rd438, %rd437, %rd420;
	and.b64  	%rd439, %rd426, %rd421;
	and.b64  	%rd440, %rd424, %rd427;
	and.b64  	%rd441, %rd440, %rd423;
	or.b64  	%rd442, %rd441, %rd439;
	and.b64  	%rd443, %rd418, %rd425;
	and.b64  	%rd444, %rd443, %rd427;
	or.b64  	%rd445, %rd442, %rd444;
	and.b64  	%rd446, %rd435, %rd421;
	or.b64  	%rd447, %rd445, %rd446;
	xor.b64  	%rd448, %rd447, %rd438;
	add.s64 	%rd449, %rd143, %rd267;
	add.s64 	%rd450, %rd449, %rd301;
	xor.b64  	%rd451, %rd450, %rd214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r185}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r186,%dummy}, %rd451;
	}
	shf.l.wrap.b32 	%r187, %r186, %r185, 4;
	shf.l.wrap.b32 	%r188, %r185, %r186, 4;
	mov.b64 	%rd452, {%r188, %r187};
	add.s64 	%rd453, %rd226, %rd452;
	xor.b64  	%rd454, %rd267, %rd453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r189}, %rd454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r190,%dummy}, %rd454;
	}
	shf.l.wrap.b32 	%r191, %r190, %r189, 21;
	shf.l.wrap.b32 	%r192, %r189, %r190, 21;
	mov.b64 	%rd455, {%r192, %r191};
	add.s64 	%rd456, %rd455, %rd450;
	add.s64 	%rd457, %rd456, 7251808426145424871;
	xor.b64  	%rd458, %rd457, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r193,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r194}, %rd458;
	}
	shf.r.wrap.b32 	%r195, %r194, %r193, 5;
	shf.r.wrap.b32 	%r196, %r193, %r194, 5;
	mov.b64 	%rd459, {%r196, %r195};
	add.s64 	%rd460, %rd453, %rd459;
	xor.b64  	%rd461, %rd455, %rd460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r197,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r198}, %rd461;
	}
	shf.r.wrap.b32 	%r199, %r198, %r197, 18;
	shf.r.wrap.b32 	%r200, %r197, %r198, 18;
	mov.b64 	%rd462, {%r200, %r199};
	not.b64 	%rd463, %rd457;
	not.b64 	%rd464, %rd462;
	and.b64  	%rd465, %rd463, %rd464;
	not.b64 	%rd466, %rd460;
	and.b64  	%rd467, %rd465, %rd466;
	and.b64  	%rd468, %rd462, %rd463;
	and.b64  	%rd469, %rd468, %rd460;
	or.b64  	%rd470, %rd469, %rd467;
	and.b64  	%rd471, %rd460, %rd464;
	and.b64  	%rd472, %rd471, %rd457;
	or.b64  	%rd473, %rd470, %rd472;
	and.b64  	%rd474, %rd462, %rd457;
	and.b64  	%rd475, %rd474, %rd466;
	or.b64  	%rd476, %rd473, %rd475;
	xor.b64  	%rd477, %rd476, %rd459;
	and.b64  	%rd478, %rd465, %rd460;
	and.b64  	%rd479, %rd463, %rd466;
	and.b64  	%rd480, %rd479, %rd462;
	or.b64  	%rd481, %rd480, %rd478;
	and.b64  	%rd482, %rd457, %rd464;
	and.b64  	%rd483, %rd482, %rd466;
	or.b64  	%rd484, %rd481, %rd483;
	and.b64  	%rd485, %rd474, %rd460;
	or.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd486, %rd477;
	add.s64 	%rd488, %rd384, %rd340;
	add.s64 	%rd489, %rd488, -4972871168744972288;
	xor.b64  	%rd490, %rd489, %rd487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r201}, %rd490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r202,%dummy}, %rd490;
	}
	shf.l.wrap.b32 	%r203, %r202, %r201, 4;
	shf.l.wrap.b32 	%r204, %r201, %r202, 4;
	mov.b64 	%rd491, {%r204, %r203};
	add.s64 	%rd492, %rd421, %rd491;
	xor.b64  	%rd493, %rd384, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r205}, %rd493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r206,%dummy}, %rd493;
	}
	shf.l.wrap.b32 	%r207, %r206, %r205, 21;
	shf.l.wrap.b32 	%r208, %r205, %r206, 21;
	mov.b64 	%rd494, {%r208, %r207};
	add.s64 	%rd495, %rd10, %rd494;
	add.s64 	%rd496, %rd495, %rd489;
	xor.b64  	%rd497, %rd496, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r209,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r210}, %rd497;
	}
	shf.r.wrap.b32 	%r211, %r210, %r209, 5;
	shf.r.wrap.b32 	%r212, %r209, %r210, 5;
	mov.b64 	%rd498, {%r212, %r211};
	add.s64 	%rd499, %rd492, %rd498;
	xor.b64  	%rd500, %rd494, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r213,%dummy}, %rd500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r214}, %rd500;
	}
	shf.r.wrap.b32 	%r215, %r214, %r213, 18;
	shf.r.wrap.b32 	%r216, %r213, %r214, 18;
	mov.b64 	%rd501, {%r216, %r215};
	not.b64 	%rd502, %rd496;
	not.b64 	%rd503, %rd501;
	and.b64  	%rd504, %rd502, %rd503;
	not.b64 	%rd505, %rd499;
	and.b64  	%rd506, %rd504, %rd505;
	and.b64  	%rd507, %rd501, %rd502;
	and.b64  	%rd508, %rd507, %rd499;
	or.b64  	%rd509, %rd508, %rd506;
	and.b64  	%rd510, %rd499, %rd503;
	and.b64  	%rd511, %rd510, %rd496;
	or.b64  	%rd512, %rd509, %rd511;
	and.b64  	%rd513, %rd501, %rd496;
	and.b64  	%rd514, %rd513, %rd505;
	or.b64  	%rd515, %rd512, %rd514;
	xor.b64  	%rd516, %rd515, %rd498;
	and.b64  	%rd517, %rd504, %rd499;
	and.b64  	%rd518, %rd502, %rd505;
	and.b64  	%rd519, %rd518, %rd501;
	or.b64  	%rd520, %rd519, %rd517;
	and.b64  	%rd521, %rd496, %rd503;
	and.b64  	%rd522, %rd521, %rd505;
	or.b64  	%rd523, %rd520, %rd522;
	and.b64  	%rd524, %rd513, %rd499;
	or.b64  	%rd525, %rd523, %rd524;
	xor.b64  	%rd526, %rd525, %rd516;
	add.s64 	%rd527, %rd60, %rd423;
	add.s64 	%rd528, %rd527, %rd379;
	xor.b64  	%rd529, %rd528, %rd370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r217}, %rd529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r218,%dummy}, %rd529;
	}
	shf.l.wrap.b32 	%r219, %r218, %r217, 4;
	shf.l.wrap.b32 	%r220, %r217, %r218, 4;
	mov.b64 	%rd530, {%r220, %r219};
	add.s64 	%rd531, %rd460, %rd530;
	xor.b64  	%rd532, %rd423, %rd531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r221}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r222,%dummy}, %rd532;
	}
	shf.l.wrap.b32 	%r223, %r222, %r221, 21;
	shf.l.wrap.b32 	%r224, %r221, %r222, 21;
	mov.b64 	%rd533, {%r224, %r223};
	add.s64 	%rd534, %rd18, %rd533;
	add.s64 	%rd535, %rd534, %rd528;
	xor.b64  	%rd536, %rd535, %rd530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r225,%dummy}, %rd536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r226}, %rd536;
	}
	shf.r.wrap.b32 	%r227, %r226, %r225, 5;
	shf.r.wrap.b32 	%r228, %r225, %r226, 5;
	mov.b64 	%rd537, {%r228, %r227};
	add.s64 	%rd538, %rd531, %rd537;
	xor.b64  	%rd539, %rd533, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r229,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r230}, %rd539;
	}
	shf.r.wrap.b32 	%r231, %r230, %r229, 18;
	shf.r.wrap.b32 	%r232, %r229, %r230, 18;
	mov.b64 	%rd540, {%r232, %r231};
	not.b64 	%rd541, %rd535;
	not.b64 	%rd542, %rd540;
	and.b64  	%rd543, %rd541, %rd542;
	not.b64 	%rd544, %rd538;
	and.b64  	%rd545, %rd543, %rd544;
	and.b64  	%rd546, %rd540, %rd541;
	and.b64  	%rd547, %rd546, %rd538;
	or.b64  	%rd548, %rd547, %rd545;
	and.b64  	%rd549, %rd538, %rd542;
	and.b64  	%rd550, %rd549, %rd535;
	or.b64  	%rd551, %rd548, %rd550;
	and.b64  	%rd552, %rd540, %rd535;
	and.b64  	%rd553, %rd552, %rd544;
	or.b64  	%rd554, %rd551, %rd553;
	xor.b64  	%rd555, %rd554, %rd537;
	and.b64  	%rd556, %rd543, %rd538;
	and.b64  	%rd557, %rd541, %rd544;
	and.b64  	%rd558, %rd557, %rd540;
	or.b64  	%rd559, %rd558, %rd556;
	and.b64  	%rd560, %rd535, %rd542;
	and.b64  	%rd561, %rd560, %rd544;
	or.b64  	%rd562, %rd559, %rd561;
	and.b64  	%rd563, %rd552, %rd538;
	or.b64  	%rd564, %rd562, %rd563;
	xor.b64  	%rd565, %rd564, %rd555;
	add.s64 	%rd566, %rd135, %rd462;
	add.s64 	%rd567, %rd566, %rd418;
	xor.b64  	%rd568, %rd567, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r233}, %rd568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r234,%dummy}, %rd568;
	}
	shf.l.wrap.b32 	%r235, %r234, %r233, 4;
	shf.l.wrap.b32 	%r236, %r233, %r234, 4;
	mov.b64 	%rd569, {%r236, %r235};
	add.s64 	%rd570, %rd343, %rd569;
	xor.b64  	%rd571, %rd462, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r237}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r238,%dummy}, %rd571;
	}
	shf.l.wrap.b32 	%r239, %r238, %r237, 21;
	shf.l.wrap.b32 	%r240, %r237, %r238, 21;
	mov.b64 	%rd572, {%r240, %r239};
	add.s64 	%rd573, %rd572, %rd567;
	add.s64 	%rd574, %rd573, -7446784132049864704;
	xor.b64  	%rd575, %rd574, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r241,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r242}, %rd575;
	}
	shf.r.wrap.b32 	%r243, %r242, %r241, 5;
	shf.r.wrap.b32 	%r244, %r241, %r242, 5;
	mov.b64 	%rd576, {%r244, %r243};
	add.s64 	%rd577, %rd570, %rd576;
	xor.b64  	%rd578, %rd572, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r245,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r246}, %rd578;
	}
	shf.r.wrap.b32 	%r247, %r246, %r245, 18;
	shf.r.wrap.b32 	%r248, %r245, %r246, 18;
	mov.b64 	%rd579, {%r248, %r247};
	not.b64 	%rd580, %rd574;
	not.b64 	%rd581, %rd579;
	and.b64  	%rd582, %rd580, %rd581;
	not.b64 	%rd583, %rd577;
	and.b64  	%rd584, %rd582, %rd583;
	and.b64  	%rd585, %rd579, %rd580;
	and.b64  	%rd586, %rd585, %rd577;
	or.b64  	%rd587, %rd586, %rd584;
	and.b64  	%rd588, %rd577, %rd581;
	and.b64  	%rd589, %rd588, %rd574;
	or.b64  	%rd590, %rd587, %rd589;
	and.b64  	%rd591, %rd579, %rd574;
	and.b64  	%rd592, %rd591, %rd583;
	or.b64  	%rd593, %rd590, %rd592;
	xor.b64  	%rd594, %rd593, %rd576;
	and.b64  	%rd595, %rd582, %rd577;
	and.b64  	%rd596, %rd580, %rd583;
	and.b64  	%rd597, %rd596, %rd579;
	or.b64  	%rd598, %rd597, %rd595;
	and.b64  	%rd599, %rd574, %rd581;
	and.b64  	%rd600, %rd599, %rd583;
	or.b64  	%rd601, %rd598, %rd600;
	and.b64  	%rd602, %rd591, %rd577;
	or.b64  	%rd603, %rd601, %rd602;
	xor.b64  	%rd604, %rd603, %rd594;
	add.s64 	%rd605, %rd52, %rd345;
	add.s64 	%rd606, %rd605, %rd457;
	xor.b64  	%rd607, %rd606, %rd448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r249}, %rd607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r250,%dummy}, %rd607;
	}
	shf.l.wrap.b32 	%r251, %r250, %r249, 4;
	shf.l.wrap.b32 	%r252, %r249, %r250, 4;
	mov.b64 	%rd608, {%r252, %r251};
	add.s64 	%rd609, %rd382, %rd608;
	xor.b64  	%rd610, %rd345, %rd609;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r253}, %rd610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r254,%dummy}, %rd610;
	}
	shf.l.wrap.b32 	%r255, %r254, %r253, 21;
	shf.l.wrap.b32 	%r256, %r253, %r254, 21;
	mov.b64 	%rd611, {%r256, %r255};
	add.s64 	%rd612, %rd94, %rd611;
	add.s64 	%rd613, %rd612, %rd606;
	xor.b64  	%rd614, %rd613, %rd608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r257,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r258}, %rd614;
	}
	shf.r.wrap.b32 	%r259, %r258, %r257, 5;
	shf.r.wrap.b32 	%r260, %r257, %r258, 5;
	mov.b64 	%rd615, {%r260, %r259};
	add.s64 	%rd616, %rd609, %rd615;
	xor.b64  	%rd617, %rd611, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r261,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r262}, %rd617;
	}
	shf.r.wrap.b32 	%r263, %r262, %r261, 18;
	shf.r.wrap.b32 	%r264, %r261, %r262, 18;
	mov.b64 	%rd618, {%r264, %r263};
	not.b64 	%rd619, %rd613;
	not.b64 	%rd620, %rd618;
	and.b64  	%rd621, %rd619, %rd620;
	not.b64 	%rd622, %rd616;
	and.b64  	%rd623, %rd621, %rd622;
	and.b64  	%rd624, %rd618, %rd619;
	and.b64  	%rd625, %rd624, %rd616;
	or.b64  	%rd626, %rd625, %rd623;
	and.b64  	%rd627, %rd616, %rd620;
	and.b64  	%rd628, %rd627, %rd613;
	or.b64  	%rd629, %rd626, %rd628;
	and.b64  	%rd630, %rd618, %rd613;
	and.b64  	%rd631, %rd630, %rd622;
	or.b64  	%rd632, %rd629, %rd631;
	xor.b64  	%rd633, %rd632, %rd615;
	and.b64  	%rd634, %rd621, %rd616;
	and.b64  	%rd635, %rd619, %rd622;
	and.b64  	%rd636, %rd635, %rd618;
	or.b64  	%rd637, %rd636, %rd634;
	and.b64  	%rd638, %rd613, %rd620;
	and.b64  	%rd639, %rd638, %rd622;
	or.b64  	%rd640, %rd637, %rd639;
	and.b64  	%rd641, %rd630, %rd616;
	or.b64  	%rd642, %rd640, %rd641;
	xor.b64  	%rd643, %rd642, %rd633;
	add.s64 	%rd644, %rd618, %rd496;
	add.s64 	%rd645, %rd644, 5987067145339136795;
	xor.b64  	%rd646, %rd645, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r265}, %rd646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r266,%dummy}, %rd646;
	}
	shf.l.wrap.b32 	%r267, %r266, %r265, 4;
	shf.l.wrap.b32 	%r268, %r265, %r266, 4;
	mov.b64 	%rd647, {%r268, %r267};
	add.s64 	%rd648, %rd577, %rd647;
	xor.b64  	%rd649, %rd618, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r269}, %rd649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r270,%dummy}, %rd649;
	}
	shf.l.wrap.b32 	%r271, %r270, %r269, 21;
	shf.l.wrap.b32 	%r272, %r269, %r270, 21;
	mov.b64 	%rd650, {%r272, %r271};
	add.s64 	%rd651, %rd650, %rd645;
	add.s64 	%rd652, %rd651, -7446784132049864704;
	xor.b64  	%rd653, %rd652, %rd647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r273,%dummy}, %rd653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r274}, %rd653;
	}
	shf.r.wrap.b32 	%r275, %r274, %r273, 5;
	shf.r.wrap.b32 	%r276, %r273, %r274, 5;
	mov.b64 	%rd654, {%r276, %r275};
	add.s64 	%rd655, %rd648, %rd654;
	xor.b64  	%rd656, %rd650, %rd655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r277,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r278}, %rd656;
	}
	shf.r.wrap.b32 	%r279, %r278, %r277, 18;
	shf.r.wrap.b32 	%r280, %r277, %r278, 18;
	mov.b64 	%rd657, {%r280, %r279};
	not.b64 	%rd658, %rd652;
	not.b64 	%rd659, %rd657;
	and.b64  	%rd660, %rd658, %rd659;
	not.b64 	%rd661, %rd655;
	and.b64  	%rd662, %rd660, %rd661;
	and.b64  	%rd663, %rd657, %rd658;
	and.b64  	%rd664, %rd663, %rd655;
	or.b64  	%rd665, %rd664, %rd662;
	and.b64  	%rd666, %rd655, %rd659;
	and.b64  	%rd667, %rd666, %rd652;
	or.b64  	%rd668, %rd665, %rd667;
	and.b64  	%rd669, %rd657, %rd652;
	and.b64  	%rd670, %rd669, %rd661;
	or.b64  	%rd671, %rd668, %rd670;
	xor.b64  	%rd672, %rd671, %rd654;
	and.b64  	%rd673, %rd660, %rd655;
	and.b64  	%rd674, %rd658, %rd661;
	and.b64  	%rd675, %rd674, %rd657;
	or.b64  	%rd676, %rd675, %rd673;
	and.b64  	%rd677, %rd652, %rd659;
	and.b64  	%rd678, %rd677, %rd661;
	or.b64  	%rd679, %rd676, %rd678;
	and.b64  	%rd680, %rd669, %rd655;
	or.b64  	%rd681, %rd679, %rd680;
	xor.b64  	%rd682, %rd681, %rd672;
	add.s64 	%rd683, %rd18, %rd501;
	add.s64 	%rd684, %rd683, %rd535;
	xor.b64  	%rd685, %rd684, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r281}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r282,%dummy}, %rd685;
	}
	shf.l.wrap.b32 	%r283, %r282, %r281, 4;
	shf.l.wrap.b32 	%r284, %r281, %r282, 4;
	mov.b64 	%rd686, {%r284, %r283};
	add.s64 	%rd687, %rd616, %rd686;
	xor.b64  	%rd688, %rd501, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r285}, %rd688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r286,%dummy}, %rd688;
	}
	shf.l.wrap.b32 	%r287, %r286, %r285, 21;
	shf.l.wrap.b32 	%r288, %r285, %r286, 21;
	mov.b64 	%rd689, {%r288, %r287};
	add.s64 	%rd690, %rd689, %rd684;
	add.s64 	%rd691, %rd690, -4972871168744972288;
	xor.b64  	%rd692, %rd691, %rd686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r289,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r290}, %rd692;
	}
	shf.r.wrap.b32 	%r291, %r290, %r289, 5;
	shf.r.wrap.b32 	%r292, %r289, %r290, 5;
	mov.b64 	%rd693, {%r292, %r291};
	add.s64 	%rd694, %rd687, %rd693;
	xor.b64  	%rd695, %rd689, %rd694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r293,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r294}, %rd695;
	}
	shf.r.wrap.b32 	%r295, %r294, %r293, 18;
	shf.r.wrap.b32 	%r296, %r293, %r294, 18;
	mov.b64 	%rd696, {%r296, %r295};
	not.b64 	%rd697, %rd691;
	not.b64 	%rd698, %rd696;
	and.b64  	%rd699, %rd697, %rd698;
	not.b64 	%rd700, %rd694;
	and.b64  	%rd701, %rd699, %rd700;
	and.b64  	%rd702, %rd696, %rd697;
	and.b64  	%rd703, %rd702, %rd694;
	or.b64  	%rd704, %rd703, %rd701;
	and.b64  	%rd705, %rd694, %rd698;
	and.b64  	%rd706, %rd705, %rd691;
	or.b64  	%rd707, %rd704, %rd706;
	and.b64  	%rd708, %rd696, %rd691;
	and.b64  	%rd709, %rd708, %rd700;
	or.b64  	%rd710, %rd707, %rd709;
	xor.b64  	%rd711, %rd710, %rd693;
	and.b64  	%rd712, %rd699, %rd694;
	and.b64  	%rd713, %rd697, %rd700;
	and.b64  	%rd714, %rd713, %rd696;
	or.b64  	%rd715, %rd714, %rd712;
	and.b64  	%rd716, %rd691, %rd698;
	and.b64  	%rd717, %rd716, %rd700;
	or.b64  	%rd718, %rd715, %rd717;
	and.b64  	%rd719, %rd708, %rd694;
	or.b64  	%rd720, %rd718, %rd719;
	xor.b64  	%rd721, %rd720, %rd711;
	add.s64 	%rd722, %rd60, %rd540;
	add.s64 	%rd723, %rd722, %rd574;
	xor.b64  	%rd724, %rd723, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r297}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r298,%dummy}, %rd724;
	}
	shf.l.wrap.b32 	%r299, %r298, %r297, 4;
	shf.l.wrap.b32 	%r300, %r297, %r298, 4;
	mov.b64 	%rd725, {%r300, %r299};
	add.s64 	%rd726, %rd499, %rd725;
	xor.b64  	%rd727, %rd540, %rd726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r302,%dummy}, %rd727;
	}
	shf.l.wrap.b32 	%r303, %r302, %r301, 21;
	shf.l.wrap.b32 	%r304, %r301, %r302, 21;
	mov.b64 	%rd728, {%r304, %r303};
	add.s64 	%rd729, %rd94, %rd728;
	add.s64 	%rd730, %rd729, %rd723;
	xor.b64  	%rd731, %rd730, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r305,%dummy}, %rd731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r306}, %rd731;
	}
	shf.r.wrap.b32 	%r307, %r306, %r305, 5;
	shf.r.wrap.b32 	%r308, %r305, %r306, 5;
	mov.b64 	%rd732, {%r308, %r307};
	add.s64 	%rd733, %rd726, %rd732;
	xor.b64  	%rd734, %rd728, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r309,%dummy}, %rd734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r310}, %rd734;
	}
	shf.r.wrap.b32 	%r311, %r310, %r309, 18;
	shf.r.wrap.b32 	%r312, %r309, %r310, 18;
	mov.b64 	%rd735, {%r312, %r311};
	not.b64 	%rd736, %rd730;
	not.b64 	%rd737, %rd735;
	and.b64  	%rd738, %rd736, %rd737;
	not.b64 	%rd739, %rd733;
	and.b64  	%rd740, %rd738, %rd739;
	and.b64  	%rd741, %rd735, %rd736;
	and.b64  	%rd742, %rd741, %rd733;
	or.b64  	%rd743, %rd742, %rd740;
	and.b64  	%rd744, %rd733, %rd737;
	and.b64  	%rd745, %rd744, %rd730;
	or.b64  	%rd746, %rd743, %rd745;
	and.b64  	%rd747, %rd735, %rd730;
	and.b64  	%rd748, %rd747, %rd739;
	or.b64  	%rd749, %rd746, %rd748;
	xor.b64  	%rd750, %rd749, %rd732;
	and.b64  	%rd751, %rd738, %rd733;
	and.b64  	%rd752, %rd736, %rd739;
	and.b64  	%rd753, %rd752, %rd735;
	or.b64  	%rd754, %rd753, %rd751;
	and.b64  	%rd755, %rd730, %rd737;
	and.b64  	%rd756, %rd755, %rd739;
	or.b64  	%rd757, %rd754, %rd756;
	and.b64  	%rd758, %rd747, %rd733;
	or.b64  	%rd759, %rd757, %rd758;
	xor.b64  	%rd760, %rd759, %rd750;
	add.s64 	%rd761, %rd579, %rd613;
	add.s64 	%rd762, %rd761, 7251808426145424871;
	xor.b64  	%rd763, %rd762, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r314,%dummy}, %rd763;
	}
	shf.l.wrap.b32 	%r315, %r314, %r313, 4;
	shf.l.wrap.b32 	%r316, %r313, %r314, 4;
	mov.b64 	%rd764, {%r316, %r315};
	add.s64 	%rd765, %rd538, %rd764;
	xor.b64  	%rd766, %rd579, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r317}, %rd766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd766;
	}
	shf.l.wrap.b32 	%r319, %r318, %r317, 21;
	shf.l.wrap.b32 	%r320, %r317, %r318, 21;
	mov.b64 	%rd767, {%r320, %r319};
	add.s64 	%rd768, %rd767, %rd762;
	add.s64 	%rd769, %rd768, 7194923001510760043;
	xor.b64  	%rd770, %rd769, %rd764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r321,%dummy}, %rd770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r322}, %rd770;
	}
	shf.r.wrap.b32 	%r323, %r322, %r321, 5;
	shf.r.wrap.b32 	%r324, %r321, %r322, 5;
	mov.b64 	%rd771, {%r324, %r323};
	add.s64 	%rd772, %rd765, %rd771;
	xor.b64  	%rd773, %rd767, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd773;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 18;
	shf.r.wrap.b32 	%r328, %r325, %r326, 18;
	mov.b64 	%rd774, {%r328, %r327};
	not.b64 	%rd775, %rd769;
	not.b64 	%rd776, %rd774;
	and.b64  	%rd777, %rd775, %rd776;
	not.b64 	%rd778, %rd772;
	and.b64  	%rd779, %rd777, %rd778;
	and.b64  	%rd780, %rd774, %rd775;
	and.b64  	%rd781, %rd780, %rd772;
	or.b64  	%rd782, %rd781, %rd779;
	and.b64  	%rd783, %rd772, %rd776;
	and.b64  	%rd784, %rd783, %rd769;
	or.b64  	%rd785, %rd782, %rd784;
	and.b64  	%rd786, %rd774, %rd769;
	and.b64  	%rd787, %rd786, %rd778;
	or.b64  	%rd788, %rd785, %rd787;
	xor.b64  	%rd789, %rd788, %rd771;
	and.b64  	%rd790, %rd777, %rd772;
	and.b64  	%rd791, %rd775, %rd778;
	and.b64  	%rd792, %rd791, %rd774;
	or.b64  	%rd793, %rd792, %rd790;
	and.b64  	%rd794, %rd769, %rd776;
	and.b64  	%rd795, %rd794, %rd778;
	or.b64  	%rd796, %rd793, %rd795;
	and.b64  	%rd797, %rd786, %rd772;
	or.b64  	%rd798, %rd796, %rd797;
	xor.b64  	%rd799, %rd798, %rd789;
	add.s64 	%rd800, %rd696, %rd652;
	add.s64 	%rd801, %rd800, -2856998567947870208;
	xor.b64  	%rd802, %rd801, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r329}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd802;
	}
	shf.l.wrap.b32 	%r331, %r330, %r329, 4;
	shf.l.wrap.b32 	%r332, %r329, %r330, 4;
	mov.b64 	%rd803, {%r332, %r331};
	add.s64 	%rd804, %rd733, %rd803;
	xor.b64  	%rd805, %rd696, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r333}, %rd805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r334,%dummy}, %rd805;
	}
	shf.l.wrap.b32 	%r335, %r334, %r333, 21;
	shf.l.wrap.b32 	%r336, %r333, %r334, 21;
	mov.b64 	%rd806, {%r336, %r335};
	add.s64 	%rd807, %rd806, %rd801;
	add.s64 	%rd808, %rd807, 3450974313248867902;
	xor.b64  	%rd809, %rd808, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd809;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 5;
	shf.r.wrap.b32 	%r340, %r337, %r338, 5;
	mov.b64 	%rd810, {%r340, %r339};
	add.s64 	%rd811, %rd804, %rd810;
	xor.b64  	%rd812, %rd806, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r341,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r342}, %rd812;
	}
	shf.r.wrap.b32 	%r343, %r342, %r341, 18;
	shf.r.wrap.b32 	%r344, %r341, %r342, 18;
	mov.b64 	%rd813, {%r344, %r343};
	not.b64 	%rd814, %rd808;
	not.b64 	%rd815, %rd813;
	and.b64  	%rd816, %rd814, %rd815;
	not.b64 	%rd817, %rd811;
	and.b64  	%rd818, %rd816, %rd817;
	and.b64  	%rd819, %rd813, %rd814;
	and.b64  	%rd820, %rd819, %rd811;
	or.b64  	%rd821, %rd820, %rd818;
	and.b64  	%rd822, %rd811, %rd815;
	and.b64  	%rd823, %rd822, %rd808;
	or.b64  	%rd824, %rd821, %rd823;
	and.b64  	%rd825, %rd813, %rd808;
	and.b64  	%rd826, %rd825, %rd817;
	or.b64  	%rd827, %rd824, %rd826;
	xor.b64  	%rd828, %rd827, %rd810;
	and.b64  	%rd829, %rd816, %rd811;
	and.b64  	%rd830, %rd814, %rd817;
	and.b64  	%rd831, %rd830, %rd813;
	or.b64  	%rd832, %rd831, %rd829;
	and.b64  	%rd833, %rd808, %rd815;
	and.b64  	%rd834, %rd833, %rd817;
	or.b64  	%rd835, %rd832, %rd834;
	and.b64  	%rd836, %rd825, %rd811;
	or.b64  	%rd837, %rd835, %rd836;
	xor.b64  	%rd838, %rd837, %rd828;
	add.s64 	%rd839, %rd143, %rd735;
	add.s64 	%rd840, %rd839, %rd691;
	xor.b64  	%rd841, %rd840, %rd682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r345}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r346,%dummy}, %rd841;
	}
	shf.l.wrap.b32 	%r347, %r346, %r345, 4;
	shf.l.wrap.b32 	%r348, %r345, %r346, 4;
	mov.b64 	%rd842, {%r348, %r347};
	add.s64 	%rd843, %rd772, %rd842;
	xor.b64  	%rd844, %rd735, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r350,%dummy}, %rd844;
	}
	shf.l.wrap.b32 	%r351, %r350, %r349, 21;
	shf.l.wrap.b32 	%r352, %r349, %r350, 21;
	mov.b64 	%rd845, {%r352, %r351};
	add.s64 	%rd846, %rd52, %rd845;
	add.s64 	%rd847, %rd846, %rd840;
	xor.b64  	%rd848, %rd847, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r353,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r354}, %rd848;
	}
	shf.r.wrap.b32 	%r355, %r354, %r353, 5;
	shf.r.wrap.b32 	%r356, %r353, %r354, 5;
	mov.b64 	%rd849, {%r356, %r355};
	add.s64 	%rd850, %rd843, %rd849;
	xor.b64  	%rd851, %rd845, %rd850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r357,%dummy}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r358}, %rd851;
	}
	shf.r.wrap.b32 	%r359, %r358, %r357, 18;
	shf.r.wrap.b32 	%r360, %r357, %r358, 18;
	mov.b64 	%rd852, {%r360, %r359};
	not.b64 	%rd853, %rd847;
	not.b64 	%rd854, %rd852;
	and.b64  	%rd855, %rd853, %rd854;
	not.b64 	%rd856, %rd850;
	and.b64  	%rd857, %rd855, %rd856;
	and.b64  	%rd858, %rd852, %rd853;
	and.b64  	%rd859, %rd858, %rd850;
	or.b64  	%rd860, %rd859, %rd857;
	and.b64  	%rd861, %rd850, %rd854;
	and.b64  	%rd862, %rd861, %rd847;
	or.b64  	%rd863, %rd860, %rd862;
	and.b64  	%rd864, %rd852, %rd847;
	and.b64  	%rd865, %rd864, %rd856;
	or.b64  	%rd866, %rd863, %rd865;
	xor.b64  	%rd867, %rd866, %rd849;
	and.b64  	%rd868, %rd855, %rd850;
	and.b64  	%rd869, %rd853, %rd856;
	and.b64  	%rd870, %rd869, %rd852;
	or.b64  	%rd871, %rd870, %rd868;
	and.b64  	%rd872, %rd847, %rd854;
	and.b64  	%rd873, %rd872, %rd856;
	or.b64  	%rd874, %rd871, %rd873;
	and.b64  	%rd875, %rd864, %rd850;
	or.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd876, %rd867;
	add.s64 	%rd878, %rd10, %rd774;
	add.s64 	%rd879, %rd878, %rd730;
	xor.b64  	%rd880, %rd879, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r362,%dummy}, %rd880;
	}
	shf.l.wrap.b32 	%r363, %r362, %r361, 4;
	shf.l.wrap.b32 	%r364, %r361, %r362, 4;
	mov.b64 	%rd881, {%r364, %r363};
	add.s64 	%rd882, %rd655, %rd881;
	xor.b64  	%rd883, %rd774, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r365}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd883;
	}
	shf.l.wrap.b32 	%r367, %r366, %r365, 21;
	shf.l.wrap.b32 	%r368, %r365, %r366, 21;
	mov.b64 	%rd884, {%r368, %r367};
	add.s64 	%rd885, %rd135, %rd884;
	add.s64 	%rd886, %rd885, %rd879;
	xor.b64  	%rd887, %rd886, %rd881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r369,%dummy}, %rd887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r370}, %rd887;
	}
	shf.r.wrap.b32 	%r371, %r370, %r369, 5;
	shf.r.wrap.b32 	%r372, %r369, %r370, 5;
	mov.b64 	%rd888, {%r372, %r371};
	add.s64 	%rd889, %rd882, %rd888;
	xor.b64  	%rd890, %rd884, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd890;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 18;
	shf.r.wrap.b32 	%r376, %r373, %r374, 18;
	mov.b64 	%rd891, {%r376, %r375};
	not.b64 	%rd892, %rd886;
	not.b64 	%rd893, %rd891;
	and.b64  	%rd894, %rd892, %rd893;
	not.b64 	%rd895, %rd889;
	and.b64  	%rd896, %rd894, %rd895;
	and.b64  	%rd897, %rd891, %rd892;
	and.b64  	%rd898, %rd897, %rd889;
	or.b64  	%rd899, %rd898, %rd896;
	and.b64  	%rd900, %rd889, %rd893;
	and.b64  	%rd901, %rd900, %rd886;
	or.b64  	%rd902, %rd899, %rd901;
	and.b64  	%rd903, %rd891, %rd886;
	and.b64  	%rd904, %rd903, %rd895;
	or.b64  	%rd905, %rd902, %rd904;
	xor.b64  	%rd906, %rd905, %rd888;
	and.b64  	%rd907, %rd894, %rd889;
	and.b64  	%rd908, %rd892, %rd895;
	and.b64  	%rd909, %rd908, %rd891;
	or.b64  	%rd910, %rd909, %rd907;
	and.b64  	%rd911, %rd886, %rd893;
	and.b64  	%rd912, %rd911, %rd895;
	or.b64  	%rd913, %rd910, %rd912;
	and.b64  	%rd914, %rd903, %rd889;
	or.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd915, %rd906;
	add.s64 	%rd917, %rd102, %rd657;
	add.s64 	%rd918, %rd917, %rd769;
	xor.b64  	%rd919, %rd918, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r377}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd919;
	}
	shf.l.wrap.b32 	%r379, %r378, %r377, 4;
	shf.l.wrap.b32 	%r380, %r377, %r378, 4;
	mov.b64 	%rd920, {%r380, %r379};
	add.s64 	%rd921, %rd694, %rd920;
	xor.b64  	%rd922, %rd657, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r382,%dummy}, %rd922;
	}
	shf.l.wrap.b32 	%r383, %r382, %r381, 21;
	shf.l.wrap.b32 	%r384, %r381, %r382, 21;
	mov.b64 	%rd923, {%r384, %r383};
	add.s64 	%rd924, %rd923, %rd918;
	add.s64 	%rd925, %rd924, -3341658112243943424;
	xor.b64  	%rd926, %rd925, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd926;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 5;
	shf.r.wrap.b32 	%r388, %r385, %r386, 5;
	mov.b64 	%rd927, {%r388, %r387};
	add.s64 	%rd928, %rd921, %rd927;
	xor.b64  	%rd929, %rd923, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r390}, %rd929;
	}
	shf.r.wrap.b32 	%r391, %r390, %r389, 18;
	shf.r.wrap.b32 	%r392, %r389, %r390, 18;
	mov.b64 	%rd930, {%r392, %r391};
	not.b64 	%rd931, %rd925;
	not.b64 	%rd932, %rd930;
	and.b64  	%rd933, %rd931, %rd932;
	not.b64 	%rd934, %rd928;
	and.b64  	%rd935, %rd933, %rd934;
	and.b64  	%rd936, %rd930, %rd931;
	and.b64  	%rd937, %rd936, %rd928;
	or.b64  	%rd938, %rd937, %rd935;
	and.b64  	%rd939, %rd928, %rd932;
	and.b64  	%rd940, %rd939, %rd925;
	or.b64  	%rd941, %rd938, %rd940;
	and.b64  	%rd942, %rd930, %rd925;
	and.b64  	%rd943, %rd942, %rd934;
	or.b64  	%rd944, %rd941, %rd943;
	xor.b64  	%rd945, %rd944, %rd927;
	and.b64  	%rd946, %rd933, %rd928;
	and.b64  	%rd947, %rd931, %rd934;
	and.b64  	%rd948, %rd947, %rd930;
	or.b64  	%rd949, %rd948, %rd946;
	and.b64  	%rd950, %rd925, %rd932;
	and.b64  	%rd951, %rd950, %rd934;
	or.b64  	%rd952, %rd949, %rd951;
	and.b64  	%rd953, %rd942, %rd928;
	or.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd954, %rd945;
	add.s64 	%rd956, %rd930, %rd808;
	add.s64 	%rd957, %rd956, -3341658112243943424;
	xor.b64  	%rd958, %rd957, %rd877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r393}, %rd958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r394,%dummy}, %rd958;
	}
	shf.l.wrap.b32 	%r395, %r394, %r393, 4;
	shf.l.wrap.b32 	%r396, %r393, %r394, 4;
	mov.b64 	%rd959, {%r396, %r395};
	add.s64 	%rd960, %rd889, %rd959;
	xor.b64  	%rd961, %rd930, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r398,%dummy}, %rd961;
	}
	shf.l.wrap.b32 	%r399, %r398, %r397, 21;
	shf.l.wrap.b32 	%r400, %r397, %r398, 21;
	mov.b64 	%rd962, {%r400, %r399};
	add.s64 	%rd963, %rd135, %rd962;
	add.s64 	%rd964, %rd963, %rd957;
	xor.b64  	%rd965, %rd964, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r401,%dummy}, %rd965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r402}, %rd965;
	}
	shf.r.wrap.b32 	%r403, %r402, %r401, 5;
	shf.r.wrap.b32 	%r404, %r401, %r402, 5;
	mov.b64 	%rd966, {%r404, %r403};
	add.s64 	%rd967, %rd960, %rd966;
	xor.b64  	%rd968, %rd962, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r405,%dummy}, %rd968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r406}, %rd968;
	}
	shf.r.wrap.b32 	%r407, %r406, %r405, 18;
	shf.r.wrap.b32 	%r408, %r405, %r406, 18;
	mov.b64 	%rd969, {%r408, %r407};
	not.b64 	%rd970, %rd964;
	not.b64 	%rd971, %rd969;
	and.b64  	%rd972, %rd970, %rd971;
	not.b64 	%rd973, %rd967;
	and.b64  	%rd974, %rd972, %rd973;
	and.b64  	%rd975, %rd969, %rd970;
	and.b64  	%rd976, %rd975, %rd967;
	or.b64  	%rd977, %rd976, %rd974;
	and.b64  	%rd978, %rd967, %rd971;
	and.b64  	%rd979, %rd978, %rd964;
	or.b64  	%rd980, %rd977, %rd979;
	and.b64  	%rd981, %rd969, %rd964;
	and.b64  	%rd982, %rd981, %rd973;
	or.b64  	%rd983, %rd980, %rd982;
	xor.b64  	%rd984, %rd983, %rd966;
	and.b64  	%rd985, %rd972, %rd967;
	and.b64  	%rd986, %rd970, %rd973;
	and.b64  	%rd987, %rd986, %rd969;
	or.b64  	%rd988, %rd987, %rd985;
	and.b64  	%rd989, %rd964, %rd971;
	and.b64  	%rd990, %rd989, %rd973;
	or.b64  	%rd991, %rd988, %rd990;
	and.b64  	%rd992, %rd981, %rd967;
	or.b64  	%rd993, %rd991, %rd992;
	xor.b64  	%rd994, %rd993, %rd984;
	add.s64 	%rd995, %rd10, %rd813;
	add.s64 	%rd996, %rd995, %rd847;
	xor.b64  	%rd997, %rd996, %rd916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r410,%dummy}, %rd997;
	}
	shf.l.wrap.b32 	%r411, %r410, %r409, 4;
	shf.l.wrap.b32 	%r412, %r409, %r410, 4;
	mov.b64 	%rd998, {%r412, %r411};
	add.s64 	%rd999, %rd928, %rd998;
	xor.b64  	%rd1000, %rd813, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r413}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd1000;
	}
	shf.l.wrap.b32 	%r415, %r414, %r413, 21;
	shf.l.wrap.b32 	%r416, %r413, %r414, 21;
	mov.b64 	%rd1001, {%r416, %r415};
	add.s64 	%rd1002, %rd52, %rd1001;
	add.s64 	%rd1003, %rd1002, %rd996;
	xor.b64  	%rd1004, %rd1003, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r417,%dummy}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r418}, %rd1004;
	}
	shf.r.wrap.b32 	%r419, %r418, %r417, 5;
	shf.r.wrap.b32 	%r420, %r417, %r418, 5;
	mov.b64 	%rd1005, {%r420, %r419};
	add.s64 	%rd1006, %rd999, %rd1005;
	xor.b64  	%rd1007, %rd1001, %rd1006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd1007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd1007;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 18;
	shf.r.wrap.b32 	%r424, %r421, %r422, 18;
	mov.b64 	%rd1008, {%r424, %r423};
	not.b64 	%rd1009, %rd1003;
	not.b64 	%rd1010, %rd1008;
	and.b64  	%rd1011, %rd1009, %rd1010;
	not.b64 	%rd1012, %rd1006;
	and.b64  	%rd1013, %rd1011, %rd1012;
	and.b64  	%rd1014, %rd1008, %rd1009;
	and.b64  	%rd1015, %rd1014, %rd1006;
	or.b64  	%rd1016, %rd1015, %rd1013;
	and.b64  	%rd1017, %rd1006, %rd1010;
	and.b64  	%rd1018, %rd1017, %rd1003;
	or.b64  	%rd1019, %rd1016, %rd1018;
	and.b64  	%rd1020, %rd1008, %rd1003;
	and.b64  	%rd1021, %rd1020, %rd1012;
	or.b64  	%rd1022, %rd1019, %rd1021;
	xor.b64  	%rd1023, %rd1022, %rd1005;
	and.b64  	%rd1024, %rd1011, %rd1006;
	and.b64  	%rd1025, %rd1009, %rd1012;
	and.b64  	%rd1026, %rd1025, %rd1008;
	or.b64  	%rd1027, %rd1026, %rd1024;
	and.b64  	%rd1028, %rd1003, %rd1010;
	and.b64  	%rd1029, %rd1028, %rd1012;
	or.b64  	%rd1030, %rd1027, %rd1029;
	and.b64  	%rd1031, %rd1020, %rd1006;
	or.b64  	%rd1032, %rd1030, %rd1031;
	xor.b64  	%rd1033, %rd1032, %rd1023;
	add.s64 	%rd1034, %rd852, %rd886;
	add.s64 	%rd1035, %rd1034, -4972871168744972288;
	xor.b64  	%rd1036, %rd1035, %rd955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd1036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r426,%dummy}, %rd1036;
	}
	shf.l.wrap.b32 	%r427, %r426, %r425, 4;
	shf.l.wrap.b32 	%r428, %r425, %r426, 4;
	mov.b64 	%rd1037, {%r428, %r427};
	add.s64 	%rd1038, %rd811, %rd1037;
	xor.b64  	%rd1039, %rd852, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r430,%dummy}, %rd1039;
	}
	shf.l.wrap.b32 	%r431, %r430, %r429, 21;
	shf.l.wrap.b32 	%r432, %r429, %r430, 21;
	mov.b64 	%rd1040, {%r432, %r431};
	add.s64 	%rd1041, %rd1040, %rd1035;
	add.s64 	%rd1042, %rd1041, 7251808426145424871;
	xor.b64  	%rd1043, %rd1042, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r433,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r434}, %rd1043;
	}
	shf.r.wrap.b32 	%r435, %r434, %r433, 5;
	shf.r.wrap.b32 	%r436, %r433, %r434, 5;
	mov.b64 	%rd1044, {%r436, %r435};
	add.s64 	%rd1045, %rd1038, %rd1044;
	xor.b64  	%rd1046, %rd1040, %rd1045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r437,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r438}, %rd1046;
	}
	shf.r.wrap.b32 	%r439, %r438, %r437, 18;
	shf.r.wrap.b32 	%r440, %r437, %r438, 18;
	mov.b64 	%rd1047, {%r440, %r439};
	not.b64 	%rd1048, %rd1042;
	not.b64 	%rd1049, %rd1047;
	and.b64  	%rd1050, %rd1048, %rd1049;
	not.b64 	%rd1051, %rd1045;
	and.b64  	%rd1052, %rd1050, %rd1051;
	and.b64  	%rd1053, %rd1047, %rd1048;
	and.b64  	%rd1054, %rd1053, %rd1045;
	or.b64  	%rd1055, %rd1054, %rd1052;
	and.b64  	%rd1056, %rd1045, %rd1049;
	and.b64  	%rd1057, %rd1056, %rd1042;
	or.b64  	%rd1058, %rd1055, %rd1057;
	and.b64  	%rd1059, %rd1047, %rd1042;
	and.b64  	%rd1060, %rd1059, %rd1051;
	or.b64  	%rd1061, %rd1058, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd1044;
	and.b64  	%rd1063, %rd1050, %rd1045;
	and.b64  	%rd1064, %rd1048, %rd1051;
	and.b64  	%rd1065, %rd1064, %rd1047;
	or.b64  	%rd1066, %rd1065, %rd1063;
	and.b64  	%rd1067, %rd1042, %rd1049;
	and.b64  	%rd1068, %rd1067, %rd1051;
	or.b64  	%rd1069, %rd1066, %rd1068;
	and.b64  	%rd1070, %rd1059, %rd1045;
	or.b64  	%rd1071, %rd1069, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd1062;
	add.s64 	%rd1073, %rd891, %rd925;
	add.s64 	%rd1074, %rd1073, -2856998567947870208;
	xor.b64  	%rd1075, %rd1074, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r442,%dummy}, %rd1075;
	}
	shf.l.wrap.b32 	%r443, %r442, %r441, 4;
	shf.l.wrap.b32 	%r444, %r441, %r442, 4;
	mov.b64 	%rd1076, {%r444, %r443};
	add.s64 	%rd1077, %rd850, %rd1076;
	xor.b64  	%rd1078, %rd891, %rd1077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd1078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r446,%dummy}, %rd1078;
	}
	shf.l.wrap.b32 	%r447, %r446, %r445, 21;
	shf.l.wrap.b32 	%r448, %r445, %r446, 21;
	mov.b64 	%rd1079, {%r448, %r447};
	add.s64 	%rd1080, %rd1079, %rd1074;
	add.s64 	%rd1081, %rd1080, -7446784132049864704;
	xor.b64  	%rd1082, %rd1081, %rd1076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r449,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r450}, %rd1082;
	}
	shf.r.wrap.b32 	%r451, %r450, %r449, 5;
	shf.r.wrap.b32 	%r452, %r449, %r450, 5;
	mov.b64 	%rd1083, {%r452, %r451};
	add.s64 	%rd1084, %rd1077, %rd1083;
	xor.b64  	%rd1085, %rd1079, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r453,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r454}, %rd1085;
	}
	shf.r.wrap.b32 	%r455, %r454, %r453, 18;
	shf.r.wrap.b32 	%r456, %r453, %r454, 18;
	mov.b64 	%rd1086, {%r456, %r455};
	not.b64 	%rd1087, %rd1081;
	not.b64 	%rd1088, %rd1086;
	and.b64  	%rd1089, %rd1087, %rd1088;
	not.b64 	%rd1090, %rd1084;
	and.b64  	%rd1091, %rd1089, %rd1090;
	and.b64  	%rd1092, %rd1086, %rd1087;
	and.b64  	%rd1093, %rd1092, %rd1084;
	or.b64  	%rd1094, %rd1093, %rd1091;
	and.b64  	%rd1095, %rd1084, %rd1088;
	and.b64  	%rd1096, %rd1095, %rd1081;
	or.b64  	%rd1097, %rd1094, %rd1096;
	and.b64  	%rd1098, %rd1086, %rd1081;
	and.b64  	%rd1099, %rd1098, %rd1090;
	or.b64  	%rd1100, %rd1097, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1083;
	and.b64  	%rd1102, %rd1089, %rd1084;
	and.b64  	%rd1103, %rd1087, %rd1090;
	and.b64  	%rd1104, %rd1103, %rd1086;
	or.b64  	%rd1105, %rd1104, %rd1102;
	and.b64  	%rd1106, %rd1081, %rd1088;
	and.b64  	%rd1107, %rd1106, %rd1090;
	or.b64  	%rd1108, %rd1105, %rd1107;
	and.b64  	%rd1109, %rd1098, %rd1084;
	or.b64  	%rd1110, %rd1108, %rd1109;
	xor.b64  	%rd1111, %rd1110, %rd1101;
	add.s64 	%rd1112, %rd143, %rd1008;
	add.s64 	%rd1113, %rd1112, %rd964;
	xor.b64  	%rd1114, %rd1113, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd1114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r458,%dummy}, %rd1114;
	}
	shf.l.wrap.b32 	%r459, %r458, %r457, 4;
	shf.l.wrap.b32 	%r460, %r457, %r458, 4;
	mov.b64 	%rd1115, {%r460, %r459};
	add.s64 	%rd1116, %rd1045, %rd1115;
	xor.b64  	%rd1117, %rd1008, %rd1116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd1117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r462,%dummy}, %rd1117;
	}
	shf.l.wrap.b32 	%r463, %r462, %r461, 21;
	shf.l.wrap.b32 	%r464, %r461, %r462, 21;
	mov.b64 	%rd1118, {%r464, %r463};
	add.s64 	%rd1119, %rd60, %rd1118;
	add.s64 	%rd1120, %rd1119, %rd1113;
	xor.b64  	%rd1121, %rd1120, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r465,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r466}, %rd1121;
	}
	shf.r.wrap.b32 	%r467, %r466, %r465, 5;
	shf.r.wrap.b32 	%r468, %r465, %r466, 5;
	mov.b64 	%rd1122, {%r468, %r467};
	add.s64 	%rd1123, %rd1116, %rd1122;
	xor.b64  	%rd1124, %rd1118, %rd1123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r469,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r470}, %rd1124;
	}
	shf.r.wrap.b32 	%r471, %r470, %r469, 18;
	shf.r.wrap.b32 	%r472, %r469, %r470, 18;
	mov.b64 	%rd1125, {%r472, %r471};
	not.b64 	%rd1126, %rd1120;
	not.b64 	%rd1127, %rd1125;
	and.b64  	%rd1128, %rd1126, %rd1127;
	not.b64 	%rd1129, %rd1123;
	and.b64  	%rd1130, %rd1128, %rd1129;
	and.b64  	%rd1131, %rd1125, %rd1126;
	and.b64  	%rd1132, %rd1131, %rd1123;
	or.b64  	%rd1133, %rd1132, %rd1130;
	and.b64  	%rd1134, %rd1123, %rd1127;
	and.b64  	%rd1135, %rd1134, %rd1120;
	or.b64  	%rd1136, %rd1133, %rd1135;
	and.b64  	%rd1137, %rd1125, %rd1120;
	and.b64  	%rd1138, %rd1137, %rd1129;
	or.b64  	%rd1139, %rd1136, %rd1138;
	xor.b64  	%rd1140, %rd1139, %rd1122;
	and.b64  	%rd1141, %rd1128, %rd1123;
	and.b64  	%rd1142, %rd1126, %rd1129;
	and.b64  	%rd1143, %rd1142, %rd1125;
	or.b64  	%rd1144, %rd1143, %rd1141;
	and.b64  	%rd1145, %rd1120, %rd1127;
	and.b64  	%rd1146, %rd1145, %rd1129;
	or.b64  	%rd1147, %rd1144, %rd1146;
	and.b64  	%rd1148, %rd1137, %rd1123;
	or.b64  	%rd1149, %rd1147, %rd1148;
	xor.b64  	%rd1150, %rd1149, %rd1140;
	add.s64 	%rd1151, %rd1047, %rd1003;
	add.s64 	%rd1152, %rd1151, 3450974313248867902;
	xor.b64  	%rd1153, %rd1152, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd1153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r474,%dummy}, %rd1153;
	}
	shf.l.wrap.b32 	%r475, %r474, %r473, 4;
	shf.l.wrap.b32 	%r476, %r473, %r474, 4;
	mov.b64 	%rd1154, {%r476, %r475};
	add.s64 	%rd1155, %rd1084, %rd1154;
	xor.b64  	%rd1156, %rd1047, %rd1155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r477}, %rd1156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r478,%dummy}, %rd1156;
	}
	shf.l.wrap.b32 	%r479, %r478, %r477, 21;
	shf.l.wrap.b32 	%r480, %r477, %r478, 21;
	mov.b64 	%rd1157, {%r480, %r479};
	add.s64 	%rd1158, %rd94, %rd1157;
	add.s64 	%rd1159, %rd1158, %rd1152;
	xor.b64  	%rd1160, %rd1159, %rd1154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r481,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r482}, %rd1160;
	}
	shf.r.wrap.b32 	%r483, %r482, %r481, 5;
	shf.r.wrap.b32 	%r484, %r481, %r482, 5;
	mov.b64 	%rd1161, {%r484, %r483};
	add.s64 	%rd1162, %rd1155, %rd1161;
	xor.b64  	%rd1163, %rd1157, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r485,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r486}, %rd1163;
	}
	shf.r.wrap.b32 	%r487, %r486, %r485, 18;
	shf.r.wrap.b32 	%r488, %r485, %r486, 18;
	mov.b64 	%rd1164, {%r488, %r487};
	not.b64 	%rd1165, %rd1159;
	not.b64 	%rd1166, %rd1164;
	and.b64  	%rd1167, %rd1165, %rd1166;
	not.b64 	%rd1168, %rd1162;
	and.b64  	%rd1169, %rd1167, %rd1168;
	and.b64  	%rd1170, %rd1164, %rd1165;
	and.b64  	%rd1171, %rd1170, %rd1162;
	or.b64  	%rd1172, %rd1171, %rd1169;
	and.b64  	%rd1173, %rd1162, %rd1166;
	and.b64  	%rd1174, %rd1173, %rd1159;
	or.b64  	%rd1175, %rd1172, %rd1174;
	and.b64  	%rd1176, %rd1164, %rd1159;
	and.b64  	%rd1177, %rd1176, %rd1168;
	or.b64  	%rd1178, %rd1175, %rd1177;
	xor.b64  	%rd1179, %rd1178, %rd1161;
	and.b64  	%rd1180, %rd1167, %rd1162;
	and.b64  	%rd1181, %rd1165, %rd1168;
	and.b64  	%rd1182, %rd1181, %rd1164;
	or.b64  	%rd1183, %rd1182, %rd1180;
	and.b64  	%rd1184, %rd1159, %rd1166;
	and.b64  	%rd1185, %rd1184, %rd1168;
	or.b64  	%rd1186, %rd1183, %rd1185;
	and.b64  	%rd1187, %rd1176, %rd1162;
	or.b64  	%rd1188, %rd1186, %rd1187;
	xor.b64  	%rd1189, %rd1188, %rd1179;
	add.s64 	%rd1190, %rd18, %rd1086;
	add.s64 	%rd1191, %rd1190, %rd1042;
	xor.b64  	%rd1192, %rd1191, %rd1033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r489}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r490,%dummy}, %rd1192;
	}
	shf.l.wrap.b32 	%r491, %r490, %r489, 4;
	shf.l.wrap.b32 	%r492, %r489, %r490, 4;
	mov.b64 	%rd1193, {%r492, %r491};
	add.s64 	%rd1194, %rd967, %rd1193;
	xor.b64  	%rd1195, %rd1086, %rd1194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r494,%dummy}, %rd1195;
	}
	shf.l.wrap.b32 	%r495, %r494, %r493, 21;
	shf.l.wrap.b32 	%r496, %r493, %r494, 21;
	mov.b64 	%rd1196, {%r496, %r495};
	add.s64 	%rd1197, %rd102, %rd1196;
	add.s64 	%rd1198, %rd1197, %rd1191;
	xor.b64  	%rd1199, %rd1198, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r497,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r498}, %rd1199;
	}
	shf.r.wrap.b32 	%r499, %r498, %r497, 5;
	shf.r.wrap.b32 	%r500, %r497, %r498, 5;
	mov.b64 	%rd1200, {%r500, %r499};
	add.s64 	%rd1201, %rd1194, %rd1200;
	xor.b64  	%rd1202, %rd1196, %rd1201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r501,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r502}, %rd1202;
	}
	shf.r.wrap.b32 	%r503, %r502, %r501, 18;
	shf.r.wrap.b32 	%r504, %r501, %r502, 18;
	mov.b64 	%rd1203, {%r504, %r503};
	not.b64 	%rd1204, %rd1198;
	not.b64 	%rd1205, %rd1203;
	and.b64  	%rd1206, %rd1204, %rd1205;
	not.b64 	%rd1207, %rd1201;
	and.b64  	%rd1208, %rd1206, %rd1207;
	and.b64  	%rd1209, %rd1203, %rd1204;
	and.b64  	%rd1210, %rd1209, %rd1201;
	or.b64  	%rd1211, %rd1210, %rd1208;
	and.b64  	%rd1212, %rd1201, %rd1205;
	and.b64  	%rd1213, %rd1212, %rd1198;
	or.b64  	%rd1214, %rd1211, %rd1213;
	and.b64  	%rd1215, %rd1203, %rd1198;
	and.b64  	%rd1216, %rd1215, %rd1207;
	or.b64  	%rd1217, %rd1214, %rd1216;
	xor.b64  	%rd1218, %rd1217, %rd1200;
	and.b64  	%rd1219, %rd1206, %rd1201;
	and.b64  	%rd1220, %rd1204, %rd1207;
	and.b64  	%rd1221, %rd1220, %rd1203;
	or.b64  	%rd1222, %rd1221, %rd1219;
	and.b64  	%rd1223, %rd1198, %rd1205;
	and.b64  	%rd1224, %rd1223, %rd1207;
	or.b64  	%rd1225, %rd1222, %rd1224;
	and.b64  	%rd1226, %rd1215, %rd1201;
	or.b64  	%rd1227, %rd1225, %rd1226;
	xor.b64  	%rd1228, %rd1227, %rd1218;
	add.s64 	%rd1229, %rd969, %rd1081;
	add.s64 	%rd1230, %rd1229, 5987067145339136795;
	xor.b64  	%rd1231, %rd1230, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r505}, %rd1231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r506,%dummy}, %rd1231;
	}
	shf.l.wrap.b32 	%r507, %r506, %r505, 4;
	shf.l.wrap.b32 	%r508, %r505, %r506, 4;
	mov.b64 	%rd1232, {%r508, %r507};
	add.s64 	%rd1233, %rd1006, %rd1232;
	xor.b64  	%rd1234, %rd969, %rd1233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd1234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r510,%dummy}, %rd1234;
	}
	shf.l.wrap.b32 	%r511, %r510, %r509, 21;
	shf.l.wrap.b32 	%r512, %r509, %r510, 21;
	mov.b64 	%rd1235, {%r512, %r511};
	add.s64 	%rd1236, %rd1235, %rd1230;
	add.s64 	%rd1237, %rd1236, 7194923001510760043;
	xor.b64  	%rd1238, %rd1237, %rd1232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r513,%dummy}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r514}, %rd1238;
	}
	shf.r.wrap.b32 	%r515, %r514, %r513, 5;
	shf.r.wrap.b32 	%r516, %r513, %r514, 5;
	mov.b64 	%rd1239, {%r516, %r515};
	add.s64 	%rd1240, %rd1233, %rd1239;
	xor.b64  	%rd1241, %rd1235, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r517,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r518}, %rd1241;
	}
	shf.r.wrap.b32 	%r519, %r518, %r517, 18;
	shf.r.wrap.b32 	%r520, %r517, %r518, 18;
	mov.b64 	%rd1242, {%r520, %r519};
	not.b64 	%rd1243, %rd1237;
	not.b64 	%rd1244, %rd1242;
	and.b64  	%rd1245, %rd1243, %rd1244;
	not.b64 	%rd1246, %rd1240;
	and.b64  	%rd1247, %rd1245, %rd1246;
	and.b64  	%rd1248, %rd1242, %rd1243;
	and.b64  	%rd1249, %rd1248, %rd1240;
	or.b64  	%rd1250, %rd1249, %rd1247;
	and.b64  	%rd1251, %rd1240, %rd1244;
	and.b64  	%rd1252, %rd1251, %rd1237;
	or.b64  	%rd1253, %rd1250, %rd1252;
	and.b64  	%rd1254, %rd1242, %rd1237;
	and.b64  	%rd1255, %rd1254, %rd1246;
	or.b64  	%rd1256, %rd1253, %rd1255;
	xor.b64  	%rd1257, %rd1256, %rd1239;
	and.b64  	%rd1258, %rd1245, %rd1240;
	and.b64  	%rd1259, %rd1243, %rd1246;
	and.b64  	%rd1260, %rd1259, %rd1242;
	or.b64  	%rd1261, %rd1260, %rd1258;
	and.b64  	%rd1262, %rd1237, %rd1244;
	and.b64  	%rd1263, %rd1262, %rd1246;
	or.b64  	%rd1264, %rd1261, %rd1263;
	and.b64  	%rd1265, %rd1254, %rd1240;
	or.b64  	%rd1266, %rd1264, %rd1265;
	xor.b64  	%rd1267, %rd1266, %rd1257;
	add.s64 	%rd1268, %rd18, %rd1242;
	add.s64 	%rd1269, %rd1268, %rd1120;
	xor.b64  	%rd1270, %rd1269, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd1270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r522,%dummy}, %rd1270;
	}
	shf.l.wrap.b32 	%r523, %r522, %r521, 4;
	shf.l.wrap.b32 	%r524, %r521, %r522, 4;
	mov.b64 	%rd1271, {%r524, %r523};
	add.s64 	%rd1272, %rd1201, %rd1271;
	xor.b64  	%rd1273, %rd1242, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r525}, %rd1273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r526,%dummy}, %rd1273;
	}
	shf.l.wrap.b32 	%r527, %r526, %r525, 21;
	shf.l.wrap.b32 	%r528, %r525, %r526, 21;
	mov.b64 	%rd1274, {%r528, %r527};
	add.s64 	%rd1275, %rd1274, %rd1269;
	add.s64 	%rd1276, %rd1275, -3341658112243943424;
	xor.b64  	%rd1277, %rd1276, %rd1271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r529,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r530}, %rd1277;
	}
	shf.r.wrap.b32 	%r531, %r530, %r529, 5;
	shf.r.wrap.b32 	%r532, %r529, %r530, 5;
	mov.b64 	%rd1278, {%r532, %r531};
	add.s64 	%rd1279, %rd1272, %rd1278;
	xor.b64  	%rd1280, %rd1274, %rd1279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r533,%dummy}, %rd1280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r534}, %rd1280;
	}
	shf.r.wrap.b32 	%r535, %r534, %r533, 18;
	shf.r.wrap.b32 	%r536, %r533, %r534, 18;
	mov.b64 	%rd1281, {%r536, %r535};
	not.b64 	%rd1282, %rd1276;
	not.b64 	%rd1283, %rd1281;
	and.b64  	%rd1284, %rd1282, %rd1283;
	not.b64 	%rd1285, %rd1279;
	and.b64  	%rd1286, %rd1284, %rd1285;
	and.b64  	%rd1287, %rd1281, %rd1282;
	and.b64  	%rd1288, %rd1287, %rd1279;
	or.b64  	%rd1289, %rd1288, %rd1286;
	and.b64  	%rd1290, %rd1279, %rd1283;
	and.b64  	%rd1291, %rd1290, %rd1276;
	or.b64  	%rd1292, %rd1289, %rd1291;
	and.b64  	%rd1293, %rd1281, %rd1276;
	and.b64  	%rd1294, %rd1293, %rd1285;
	or.b64  	%rd1295, %rd1292, %rd1294;
	xor.b64  	%rd1296, %rd1295, %rd1278;
	and.b64  	%rd1297, %rd1284, %rd1279;
	and.b64  	%rd1298, %rd1282, %rd1285;
	and.b64  	%rd1299, %rd1298, %rd1281;
	or.b64  	%rd1300, %rd1299, %rd1297;
	and.b64  	%rd1301, %rd1276, %rd1283;
	and.b64  	%rd1302, %rd1301, %rd1285;
	or.b64  	%rd1303, %rd1300, %rd1302;
	and.b64  	%rd1304, %rd1293, %rd1279;
	or.b64  	%rd1305, %rd1303, %rd1304;
	xor.b64  	%rd1306, %rd1305, %rd1296;
	add.s64 	%rd1307, %rd135, %rd1125;
	add.s64 	%rd1308, %rd1307, %rd1159;
	xor.b64  	%rd1309, %rd1308, %rd1228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r538,%dummy}, %rd1309;
	}
	shf.l.wrap.b32 	%r539, %r538, %r537, 4;
	shf.l.wrap.b32 	%r540, %r537, %r538, 4;
	mov.b64 	%rd1310, {%r540, %r539};
	add.s64 	%rd1311, %rd1240, %rd1310;
	xor.b64  	%rd1312, %rd1125, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd1312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r542,%dummy}, %rd1312;
	}
	shf.l.wrap.b32 	%r543, %r542, %r541, 21;
	shf.l.wrap.b32 	%r544, %r541, %r542, 21;
	mov.b64 	%rd1313, {%r544, %r543};
	add.s64 	%rd1314, %rd94, %rd1313;
	add.s64 	%rd1315, %rd1314, %rd1308;
	xor.b64  	%rd1316, %rd1315, %rd1310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r545,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r546}, %rd1316;
	}
	shf.r.wrap.b32 	%r547, %r546, %r545, 5;
	shf.r.wrap.b32 	%r548, %r545, %r546, 5;
	mov.b64 	%rd1317, {%r548, %r547};
	add.s64 	%rd1318, %rd1311, %rd1317;
	xor.b64  	%rd1319, %rd1313, %rd1318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r549,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r550}, %rd1319;
	}
	shf.r.wrap.b32 	%r551, %r550, %r549, 18;
	shf.r.wrap.b32 	%r552, %r549, %r550, 18;
	mov.b64 	%rd1320, {%r552, %r551};
	not.b64 	%rd1321, %rd1315;
	not.b64 	%rd1322, %rd1320;
	and.b64  	%rd1323, %rd1321, %rd1322;
	not.b64 	%rd1324, %rd1318;
	and.b64  	%rd1325, %rd1323, %rd1324;
	and.b64  	%rd1326, %rd1320, %rd1321;
	and.b64  	%rd1327, %rd1326, %rd1318;
	or.b64  	%rd1328, %rd1327, %rd1325;
	and.b64  	%rd1329, %rd1318, %rd1322;
	and.b64  	%rd1330, %rd1329, %rd1315;
	or.b64  	%rd1331, %rd1328, %rd1330;
	and.b64  	%rd1332, %rd1320, %rd1315;
	and.b64  	%rd1333, %rd1332, %rd1324;
	or.b64  	%rd1334, %rd1331, %rd1333;
	xor.b64  	%rd1335, %rd1334, %rd1317;
	and.b64  	%rd1336, %rd1323, %rd1318;
	and.b64  	%rd1337, %rd1321, %rd1324;
	and.b64  	%rd1338, %rd1337, %rd1320;
	or.b64  	%rd1339, %rd1338, %rd1336;
	and.b64  	%rd1340, %rd1315, %rd1322;
	and.b64  	%rd1341, %rd1340, %rd1324;
	or.b64  	%rd1342, %rd1339, %rd1341;
	and.b64  	%rd1343, %rd1332, %rd1318;
	or.b64  	%rd1344, %rd1342, %rd1343;
	xor.b64  	%rd1345, %rd1344, %rd1335;
	add.s64 	%rd1346, %rd102, %rd1164;
	add.s64 	%rd1347, %rd1346, %rd1198;
	xor.b64  	%rd1348, %rd1347, %rd1267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r554,%dummy}, %rd1348;
	}
	shf.l.wrap.b32 	%r555, %r554, %r553, 4;
	shf.l.wrap.b32 	%r556, %r553, %r554, 4;
	mov.b64 	%rd1349, {%r556, %r555};
	add.s64 	%rd1350, %rd1123, %rd1349;
	xor.b64  	%rd1351, %rd1164, %rd1350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r558,%dummy}, %rd1351;
	}
	shf.l.wrap.b32 	%r559, %r558, %r557, 21;
	shf.l.wrap.b32 	%r560, %r557, %r558, 21;
	mov.b64 	%rd1352, {%r560, %r559};
	add.s64 	%rd1353, %rd60, %rd1352;
	add.s64 	%rd1354, %rd1353, %rd1347;
	xor.b64  	%rd1355, %rd1354, %rd1349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r561,%dummy}, %rd1355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r562}, %rd1355;
	}
	shf.r.wrap.b32 	%r563, %r562, %r561, 5;
	shf.r.wrap.b32 	%r564, %r561, %r562, 5;
	mov.b64 	%rd1356, {%r564, %r563};
	add.s64 	%rd1357, %rd1350, %rd1356;
	xor.b64  	%rd1358, %rd1352, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r565,%dummy}, %rd1358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r566}, %rd1358;
	}
	shf.r.wrap.b32 	%r567, %r566, %r565, 18;
	shf.r.wrap.b32 	%r568, %r565, %r566, 18;
	mov.b64 	%rd1359, {%r568, %r567};
	not.b64 	%rd1360, %rd1354;
	not.b64 	%rd1361, %rd1359;
	and.b64  	%rd1362, %rd1360, %rd1361;
	not.b64 	%rd1363, %rd1357;
	and.b64  	%rd1364, %rd1362, %rd1363;
	and.b64  	%rd1365, %rd1359, %rd1360;
	and.b64  	%rd1366, %rd1365, %rd1357;
	or.b64  	%rd1367, %rd1366, %rd1364;
	and.b64  	%rd1368, %rd1357, %rd1361;
	and.b64  	%rd1369, %rd1368, %rd1354;
	or.b64  	%rd1370, %rd1367, %rd1369;
	and.b64  	%rd1371, %rd1359, %rd1354;
	and.b64  	%rd1372, %rd1371, %rd1363;
	or.b64  	%rd1373, %rd1370, %rd1372;
	xor.b64  	%rd1374, %rd1373, %rd1356;
	and.b64  	%rd1375, %rd1362, %rd1357;
	and.b64  	%rd1376, %rd1360, %rd1363;
	and.b64  	%rd1377, %rd1376, %rd1359;
	or.b64  	%rd1378, %rd1377, %rd1375;
	and.b64  	%rd1379, %rd1354, %rd1361;
	and.b64  	%rd1380, %rd1379, %rd1363;
	or.b64  	%rd1381, %rd1378, %rd1380;
	and.b64  	%rd1382, %rd1371, %rd1357;
	or.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd1383, %rd1374;
	add.s64 	%rd1385, %rd1203, %rd1237;
	add.s64 	%rd1386, %rd1385, 7194923001510760043;
	xor.b64  	%rd1387, %rd1386, %rd1150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd1387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r570,%dummy}, %rd1387;
	}
	shf.l.wrap.b32 	%r571, %r570, %r569, 4;
	shf.l.wrap.b32 	%r572, %r569, %r570, 4;
	mov.b64 	%rd1388, {%r572, %r571};
	add.s64 	%rd1389, %rd1162, %rd1388;
	xor.b64  	%rd1390, %rd1203, %rd1389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd1390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r574,%dummy}, %rd1390;
	}
	shf.l.wrap.b32 	%r575, %r574, %r573, 21;
	shf.l.wrap.b32 	%r576, %r573, %r574, 21;
	mov.b64 	%rd1391, {%r576, %r575};
	add.s64 	%rd1392, %rd1391, %rd1386;
	add.s64 	%rd1393, %rd1392, 3450974313248867902;
	xor.b64  	%rd1394, %rd1393, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r577,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r578}, %rd1394;
	}
	shf.r.wrap.b32 	%r579, %r578, %r577, 5;
	shf.r.wrap.b32 	%r580, %r577, %r578, 5;
	mov.b64 	%rd1395, {%r580, %r579};
	add.s64 	%rd1396, %rd1389, %rd1395;
	xor.b64  	%rd1397, %rd1391, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r581,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r582}, %rd1397;
	}
	shf.r.wrap.b32 	%r583, %r582, %r581, 18;
	shf.r.wrap.b32 	%r584, %r581, %r582, 18;
	mov.b64 	%rd1398, {%r584, %r583};
	not.b64 	%rd1399, %rd1393;
	not.b64 	%rd1400, %rd1398;
	and.b64  	%rd1401, %rd1399, %rd1400;
	not.b64 	%rd1402, %rd1396;
	and.b64  	%rd1403, %rd1401, %rd1402;
	and.b64  	%rd1404, %rd1398, %rd1399;
	and.b64  	%rd1405, %rd1404, %rd1396;
	or.b64  	%rd1406, %rd1405, %rd1403;
	and.b64  	%rd1407, %rd1396, %rd1400;
	and.b64  	%rd1408, %rd1407, %rd1393;
	or.b64  	%rd1409, %rd1406, %rd1408;
	and.b64  	%rd1410, %rd1398, %rd1393;
	and.b64  	%rd1411, %rd1410, %rd1402;
	or.b64  	%rd1412, %rd1409, %rd1411;
	xor.b64  	%rd1413, %rd1412, %rd1395;
	and.b64  	%rd1414, %rd1401, %rd1396;
	and.b64  	%rd1415, %rd1399, %rd1402;
	and.b64  	%rd1416, %rd1415, %rd1398;
	or.b64  	%rd1417, %rd1416, %rd1414;
	and.b64  	%rd1418, %rd1393, %rd1400;
	and.b64  	%rd1419, %rd1418, %rd1402;
	or.b64  	%rd1420, %rd1417, %rd1419;
	and.b64  	%rd1421, %rd1410, %rd1396;
	or.b64  	%rd1422, %rd1420, %rd1421;
	xor.b64  	%rd1423, %rd1422, %rd1413;
	add.s64 	%rd1424, %rd10, %rd1320;
	add.s64 	%rd1425, %rd1424, %rd1276;
	xor.b64  	%rd1426, %rd1425, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r586,%dummy}, %rd1426;
	}
	shf.l.wrap.b32 	%r587, %r586, %r585, 4;
	shf.l.wrap.b32 	%r588, %r585, %r586, 4;
	mov.b64 	%rd1427, {%r588, %r587};
	add.s64 	%rd1428, %rd1357, %rd1427;
	xor.b64  	%rd1429, %rd1320, %rd1428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r589}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r590,%dummy}, %rd1429;
	}
	shf.l.wrap.b32 	%r591, %r590, %r589, 21;
	shf.l.wrap.b32 	%r592, %r589, %r590, 21;
	mov.b64 	%rd1430, {%r592, %r591};
	add.s64 	%rd1431, %rd1430, %rd1425;
	add.s64 	%rd1432, %rd1431, -2856998567947870208;
	xor.b64  	%rd1433, %rd1432, %rd1427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r593,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r594}, %rd1433;
	}
	shf.r.wrap.b32 	%r595, %r594, %r593, 5;
	shf.r.wrap.b32 	%r596, %r593, %r594, 5;
	mov.b64 	%rd1434, {%r596, %r595};
	add.s64 	%rd1435, %rd1428, %rd1434;
	xor.b64  	%rd1436, %rd1430, %rd1435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r597,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r598}, %rd1436;
	}
	shf.r.wrap.b32 	%r599, %r598, %r597, 18;
	shf.r.wrap.b32 	%r600, %r597, %r598, 18;
	mov.b64 	%rd1437, {%r600, %r599};
	not.b64 	%rd1438, %rd1432;
	not.b64 	%rd1439, %rd1437;
	and.b64  	%rd1440, %rd1438, %rd1439;
	not.b64 	%rd1441, %rd1435;
	and.b64  	%rd1442, %rd1440, %rd1441;
	and.b64  	%rd1443, %rd1437, %rd1438;
	and.b64  	%rd1444, %rd1443, %rd1435;
	or.b64  	%rd1445, %rd1444, %rd1442;
	and.b64  	%rd1446, %rd1435, %rd1439;
	and.b64  	%rd1447, %rd1446, %rd1432;
	or.b64  	%rd1448, %rd1445, %rd1447;
	and.b64  	%rd1449, %rd1437, %rd1432;
	and.b64  	%rd1450, %rd1449, %rd1441;
	or.b64  	%rd1451, %rd1448, %rd1450;
	xor.b64  	%rd1452, %rd1451, %rd1434;
	and.b64  	%rd1453, %rd1440, %rd1435;
	and.b64  	%rd1454, %rd1438, %rd1441;
	and.b64  	%rd1455, %rd1454, %rd1437;
	or.b64  	%rd1456, %rd1455, %rd1453;
	and.b64  	%rd1457, %rd1432, %rd1439;
	and.b64  	%rd1458, %rd1457, %rd1441;
	or.b64  	%rd1459, %rd1456, %rd1458;
	and.b64  	%rd1460, %rd1449, %rd1435;
	or.b64  	%rd1461, %rd1459, %rd1460;
	xor.b64  	%rd1462, %rd1461, %rd1452;
	add.s64 	%rd1463, %rd1359, %rd1315;
	add.s64 	%rd1464, %rd1463, -4972871168744972288;
	xor.b64  	%rd1465, %rd1464, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd1465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r602,%dummy}, %rd1465;
	}
	shf.l.wrap.b32 	%r603, %r602, %r601, 4;
	shf.l.wrap.b32 	%r604, %r601, %r602, 4;
	mov.b64 	%rd1466, {%r604, %r603};
	add.s64 	%rd1467, %rd1396, %rd1466;
	xor.b64  	%rd1468, %rd1359, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r606,%dummy}, %rd1468;
	}
	shf.l.wrap.b32 	%r607, %r606, %r605, 21;
	shf.l.wrap.b32 	%r608, %r605, %r606, 21;
	mov.b64 	%rd1469, {%r608, %r607};
	add.s64 	%rd1470, %rd1469, %rd1464;
	add.s64 	%rd1471, %rd1470, -7446784132049864704;
	xor.b64  	%rd1472, %rd1471, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r609,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r610}, %rd1472;
	}
	shf.r.wrap.b32 	%r611, %r610, %r609, 5;
	shf.r.wrap.b32 	%r612, %r609, %r610, 5;
	mov.b64 	%rd1473, {%r612, %r611};
	add.s64 	%rd1474, %rd1467, %rd1473;
	xor.b64  	%rd1475, %rd1469, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r613,%dummy}, %rd1475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r614}, %rd1475;
	}
	shf.r.wrap.b32 	%r615, %r614, %r613, 18;
	shf.r.wrap.b32 	%r616, %r613, %r614, 18;
	mov.b64 	%rd1476, {%r616, %r615};
	not.b64 	%rd1477, %rd1471;
	not.b64 	%rd1478, %rd1476;
	and.b64  	%rd1479, %rd1477, %rd1478;
	not.b64 	%rd1480, %rd1474;
	and.b64  	%rd1481, %rd1479, %rd1480;
	and.b64  	%rd1482, %rd1476, %rd1477;
	and.b64  	%rd1483, %rd1482, %rd1474;
	or.b64  	%rd1484, %rd1483, %rd1481;
	and.b64  	%rd1485, %rd1474, %rd1478;
	and.b64  	%rd1486, %rd1485, %rd1471;
	or.b64  	%rd1487, %rd1484, %rd1486;
	and.b64  	%rd1488, %rd1476, %rd1471;
	and.b64  	%rd1489, %rd1488, %rd1480;
	or.b64  	%rd1490, %rd1487, %rd1489;
	xor.b64  	%rd1491, %rd1490, %rd1473;
	and.b64  	%rd1492, %rd1479, %rd1474;
	and.b64  	%rd1493, %rd1477, %rd1480;
	and.b64  	%rd1494, %rd1493, %rd1476;
	or.b64  	%rd1495, %rd1494, %rd1492;
	and.b64  	%rd1496, %rd1471, %rd1478;
	and.b64  	%rd1497, %rd1496, %rd1480;
	or.b64  	%rd1498, %rd1495, %rd1497;
	and.b64  	%rd1499, %rd1488, %rd1474;
	or.b64  	%rd1500, %rd1498, %rd1499;
	xor.b64  	%rd1501, %rd1500, %rd1491;
	add.s64 	%rd1502, %rd1398, %rd1354;
	add.s64 	%rd1503, %rd1502, 5987067145339136795;
	xor.b64  	%rd1504, %rd1503, %rd1345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r618,%dummy}, %rd1504;
	}
	shf.l.wrap.b32 	%r619, %r618, %r617, 4;
	shf.l.wrap.b32 	%r620, %r617, %r618, 4;
	mov.b64 	%rd1505, {%r620, %r619};
	add.s64 	%rd1506, %rd1279, %rd1505;
	xor.b64  	%rd1507, %rd1398, %rd1506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd1507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r622,%dummy}, %rd1507;
	}
	shf.l.wrap.b32 	%r623, %r622, %r621, 21;
	shf.l.wrap.b32 	%r624, %r621, %r622, 21;
	mov.b64 	%rd1508, {%r624, %r623};
	add.s64 	%rd1509, %rd143, %rd1508;
	add.s64 	%rd1510, %rd1509, %rd1503;
	xor.b64  	%rd1511, %rd1510, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r625,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r626}, %rd1511;
	}
	shf.r.wrap.b32 	%r627, %r626, %r625, 5;
	shf.r.wrap.b32 	%r628, %r625, %r626, 5;
	mov.b64 	%rd1512, {%r628, %r627};
	add.s64 	%rd1513, %rd1506, %rd1512;
	xor.b64  	%rd1514, %rd1508, %rd1513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd1514;
	}
	shf.r.wrap.b32 	%r631, %r630, %r629, 18;
	shf.r.wrap.b32 	%r632, %r629, %r630, 18;
	mov.b64 	%rd1515, {%r632, %r631};
	not.b64 	%rd1516, %rd1510;
	not.b64 	%rd1517, %rd1515;
	and.b64  	%rd1518, %rd1516, %rd1517;
	not.b64 	%rd1519, %rd1513;
	and.b64  	%rd1520, %rd1518, %rd1519;
	and.b64  	%rd1521, %rd1515, %rd1516;
	and.b64  	%rd1522, %rd1521, %rd1513;
	or.b64  	%rd1523, %rd1522, %rd1520;
	and.b64  	%rd1524, %rd1513, %rd1517;
	and.b64  	%rd1525, %rd1524, %rd1510;
	or.b64  	%rd1526, %rd1523, %rd1525;
	and.b64  	%rd1527, %rd1515, %rd1510;
	and.b64  	%rd1528, %rd1527, %rd1519;
	or.b64  	%rd1529, %rd1526, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1512;
	and.b64  	%rd1531, %rd1518, %rd1513;
	and.b64  	%rd1532, %rd1516, %rd1519;
	and.b64  	%rd1533, %rd1532, %rd1515;
	or.b64  	%rd1534, %rd1533, %rd1531;
	and.b64  	%rd1535, %rd1510, %rd1517;
	and.b64  	%rd1536, %rd1535, %rd1519;
	or.b64  	%rd1537, %rd1534, %rd1536;
	and.b64  	%rd1538, %rd1527, %rd1513;
	or.b64  	%rd1539, %rd1537, %rd1538;
	xor.b64  	%rd1540, %rd1539, %rd1530;
	add.s64 	%rd1541, %rd1281, %rd1393;
	add.s64 	%rd1542, %rd1541, 7251808426145424871;
	xor.b64  	%rd1543, %rd1542, %rd1384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r634,%dummy}, %rd1543;
	}
	shf.l.wrap.b32 	%r635, %r634, %r633, 4;
	shf.l.wrap.b32 	%r636, %r633, %r634, 4;
	mov.b64 	%rd1544, {%r636, %r635};
	add.s64 	%rd1545, %rd1318, %rd1544;
	xor.b64  	%rd1546, %rd1281, %rd1545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd1546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r638,%dummy}, %rd1546;
	}
	shf.l.wrap.b32 	%r639, %r638, %r637, 21;
	shf.l.wrap.b32 	%r640, %r637, %r638, 21;
	mov.b64 	%rd1547, {%r640, %r639};
	add.s64 	%rd1548, %rd52, %rd1547;
	add.s64 	%rd1549, %rd1548, %rd1542;
	xor.b64  	%rd1550, %rd1549, %rd1544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd1550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd1550;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 5;
	shf.r.wrap.b32 	%r644, %r641, %r642, 5;
	mov.b64 	%rd1551, {%r644, %r643};
	add.s64 	%rd1552, %rd1545, %rd1551;
	xor.b64  	%rd1553, %rd1547, %rd1552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r645,%dummy}, %rd1553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r646}, %rd1553;
	}
	shf.r.wrap.b32 	%r647, %r646, %r645, 18;
	shf.r.wrap.b32 	%r648, %r645, %r646, 18;
	mov.b64 	%rd1554, {%r648, %r647};
	not.b64 	%rd1555, %rd1549;
	not.b64 	%rd1556, %rd1554;
	and.b64  	%rd1557, %rd1555, %rd1556;
	not.b64 	%rd1558, %rd1552;
	and.b64  	%rd1559, %rd1557, %rd1558;
	and.b64  	%rd1560, %rd1554, %rd1555;
	and.b64  	%rd1561, %rd1560, %rd1552;
	or.b64  	%rd1562, %rd1561, %rd1559;
	and.b64  	%rd1563, %rd1552, %rd1556;
	and.b64  	%rd1564, %rd1563, %rd1549;
	or.b64  	%rd1565, %rd1562, %rd1564;
	and.b64  	%rd1566, %rd1554, %rd1549;
	and.b64  	%rd1567, %rd1566, %rd1558;
	or.b64  	%rd1568, %rd1565, %rd1567;
	xor.b64  	%rd1569, %rd1568, %rd1551;
	and.b64  	%rd1570, %rd1557, %rd1552;
	and.b64  	%rd1571, %rd1555, %rd1558;
	and.b64  	%rd1572, %rd1571, %rd1554;
	or.b64  	%rd1573, %rd1572, %rd1570;
	and.b64  	%rd1574, %rd1549, %rd1556;
	and.b64  	%rd1575, %rd1574, %rd1558;
	or.b64  	%rd1576, %rd1573, %rd1575;
	and.b64  	%rd1577, %rd1566, %rd1552;
	or.b64  	%rd1578, %rd1576, %rd1577;
	xor.b64  	%rd1579, %rd1578, %rd1569;
	add.s64 	%rd1580, %rd1554, %rd1432;
	add.s64 	%rd1581, %rd1580, -4972871168744972288;
	xor.b64  	%rd1582, %rd1581, %rd1501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd1582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r650,%dummy}, %rd1582;
	}
	shf.l.wrap.b32 	%r651, %r650, %r649, 4;
	shf.l.wrap.b32 	%r652, %r649, %r650, 4;
	mov.b64 	%rd1583, {%r652, %r651};
	add.s64 	%rd1584, %rd1513, %rd1583;
	xor.b64  	%rd1585, %rd1554, %rd1584;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r653}, %rd1585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r654,%dummy}, %rd1585;
	}
	shf.l.wrap.b32 	%r655, %r654, %r653, 21;
	shf.l.wrap.b32 	%r656, %r653, %r654, 21;
	mov.b64 	%rd1586, {%r656, %r655};
	add.s64 	%rd1587, %rd60, %rd1586;
	add.s64 	%rd1588, %rd1587, %rd1581;
	xor.b64  	%rd1589, %rd1588, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r657,%dummy}, %rd1589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r658}, %rd1589;
	}
	shf.r.wrap.b32 	%r659, %r658, %r657, 5;
	shf.r.wrap.b32 	%r660, %r657, %r658, 5;
	mov.b64 	%rd1590, {%r660, %r659};
	add.s64 	%rd1591, %rd1584, %rd1590;
	xor.b64  	%rd1592, %rd1586, %rd1591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r661,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r662}, %rd1592;
	}
	shf.r.wrap.b32 	%r663, %r662, %r661, 18;
	shf.r.wrap.b32 	%r664, %r661, %r662, 18;
	mov.b64 	%rd1593, {%r664, %r663};
	not.b64 	%rd1594, %rd1588;
	not.b64 	%rd1595, %rd1593;
	and.b64  	%rd1596, %rd1594, %rd1595;
	not.b64 	%rd1597, %rd1591;
	and.b64  	%rd1598, %rd1596, %rd1597;
	and.b64  	%rd1599, %rd1593, %rd1594;
	and.b64  	%rd1600, %rd1599, %rd1591;
	or.b64  	%rd1601, %rd1600, %rd1598;
	and.b64  	%rd1602, %rd1591, %rd1595;
	and.b64  	%rd1603, %rd1602, %rd1588;
	or.b64  	%rd1604, %rd1601, %rd1603;
	and.b64  	%rd1605, %rd1593, %rd1588;
	and.b64  	%rd1606, %rd1605, %rd1597;
	or.b64  	%rd1607, %rd1604, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1590;
	and.b64  	%rd1609, %rd1596, %rd1591;
	and.b64  	%rd1610, %rd1594, %rd1597;
	and.b64  	%rd1611, %rd1610, %rd1593;
	or.b64  	%rd1612, %rd1611, %rd1609;
	and.b64  	%rd1613, %rd1588, %rd1595;
	and.b64  	%rd1614, %rd1613, %rd1597;
	or.b64  	%rd1615, %rd1612, %rd1614;
	and.b64  	%rd1616, %rd1605, %rd1591;
	or.b64  	%rd1617, %rd1615, %rd1616;
	xor.b64  	%rd1618, %rd1617, %rd1608;
	add.s64 	%rd1619, %rd1437, %rd1471;
	add.s64 	%rd1620, %rd1619, 3450974313248867902;
	xor.b64  	%rd1621, %rd1620, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd1621;
	}
	shf.l.wrap.b32 	%r667, %r666, %r665, 4;
	shf.l.wrap.b32 	%r668, %r665, %r666, 4;
	mov.b64 	%rd1622, {%r668, %r667};
	add.s64 	%rd1623, %rd1552, %rd1622;
	xor.b64  	%rd1624, %rd1437, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r669}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r670,%dummy}, %rd1624;
	}
	shf.l.wrap.b32 	%r671, %r670, %r669, 21;
	shf.l.wrap.b32 	%r672, %r669, %r670, 21;
	mov.b64 	%rd1625, {%r672, %r671};
	add.s64 	%rd1626, %rd143, %rd1625;
	add.s64 	%rd1627, %rd1626, %rd1620;
	xor.b64  	%rd1628, %rd1627, %rd1622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r673,%dummy}, %rd1628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r674}, %rd1628;
	}
	shf.r.wrap.b32 	%r675, %r674, %r673, 5;
	shf.r.wrap.b32 	%r676, %r673, %r674, 5;
	mov.b64 	%rd1629, {%r676, %r675};
	add.s64 	%rd1630, %rd1623, %rd1629;
	xor.b64  	%rd1631, %rd1625, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd1631;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 18;
	shf.r.wrap.b32 	%r680, %r677, %r678, 18;
	mov.b64 	%rd1632, {%r680, %r679};
	not.b64 	%rd1633, %rd1627;
	not.b64 	%rd1634, %rd1632;
	and.b64  	%rd1635, %rd1633, %rd1634;
	not.b64 	%rd1636, %rd1630;
	and.b64  	%rd1637, %rd1635, %rd1636;
	and.b64  	%rd1638, %rd1632, %rd1633;
	and.b64  	%rd1639, %rd1638, %rd1630;
	or.b64  	%rd1640, %rd1639, %rd1637;
	and.b64  	%rd1641, %rd1630, %rd1634;
	and.b64  	%rd1642, %rd1641, %rd1627;
	or.b64  	%rd1643, %rd1640, %rd1642;
	and.b64  	%rd1644, %rd1632, %rd1627;
	and.b64  	%rd1645, %rd1644, %rd1636;
	or.b64  	%rd1646, %rd1643, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1629;
	and.b64  	%rd1648, %rd1635, %rd1630;
	and.b64  	%rd1649, %rd1633, %rd1636;
	and.b64  	%rd1650, %rd1649, %rd1632;
	or.b64  	%rd1651, %rd1650, %rd1648;
	and.b64  	%rd1652, %rd1627, %rd1634;
	and.b64  	%rd1653, %rd1652, %rd1636;
	or.b64  	%rd1654, %rd1651, %rd1653;
	and.b64  	%rd1655, %rd1644, %rd1630;
	or.b64  	%rd1656, %rd1654, %rd1655;
	xor.b64  	%rd1657, %rd1656, %rd1647;
	add.s64 	%rd1658, %rd1476, %rd1510;
	add.s64 	%rd1659, %rd1658, -7446784132049864704;
	xor.b64  	%rd1660, %rd1659, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r682,%dummy}, %rd1660;
	}
	shf.l.wrap.b32 	%r683, %r682, %r681, 4;
	shf.l.wrap.b32 	%r684, %r681, %r682, 4;
	mov.b64 	%rd1661, {%r684, %r683};
	add.s64 	%rd1662, %rd1435, %rd1661;
	xor.b64  	%rd1663, %rd1476, %rd1662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r686,%dummy}, %rd1663;
	}
	shf.l.wrap.b32 	%r687, %r686, %r685, 21;
	shf.l.wrap.b32 	%r688, %r685, %r686, 21;
	mov.b64 	%rd1664, {%r688, %r687};
	add.s64 	%rd1665, %rd18, %rd1664;
	add.s64 	%rd1666, %rd1665, %rd1659;
	xor.b64  	%rd1667, %rd1666, %rd1661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd1667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd1667;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 5;
	shf.r.wrap.b32 	%r692, %r689, %r690, 5;
	mov.b64 	%rd1668, {%r692, %r691};
	add.s64 	%rd1669, %rd1662, %rd1668;
	xor.b64  	%rd1670, %rd1664, %rd1669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r693,%dummy}, %rd1670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r694}, %rd1670;
	}
	shf.r.wrap.b32 	%r695, %r694, %r693, 18;
	shf.r.wrap.b32 	%r696, %r693, %r694, 18;
	mov.b64 	%rd1671, {%r696, %r695};
	not.b64 	%rd1672, %rd1666;
	not.b64 	%rd1673, %rd1671;
	and.b64  	%rd1674, %rd1672, %rd1673;
	not.b64 	%rd1675, %rd1669;
	and.b64  	%rd1676, %rd1674, %rd1675;
	and.b64  	%rd1677, %rd1671, %rd1672;
	and.b64  	%rd1678, %rd1677, %rd1669;
	or.b64  	%rd1679, %rd1678, %rd1676;
	and.b64  	%rd1680, %rd1669, %rd1673;
	and.b64  	%rd1681, %rd1680, %rd1666;
	or.b64  	%rd1682, %rd1679, %rd1681;
	and.b64  	%rd1683, %rd1671, %rd1666;
	and.b64  	%rd1684, %rd1683, %rd1675;
	or.b64  	%rd1685, %rd1682, %rd1684;
	xor.b64  	%rd1686, %rd1685, %rd1668;
	and.b64  	%rd1687, %rd1674, %rd1669;
	and.b64  	%rd1688, %rd1672, %rd1675;
	and.b64  	%rd1689, %rd1688, %rd1671;
	or.b64  	%rd1690, %rd1689, %rd1687;
	and.b64  	%rd1691, %rd1666, %rd1673;
	and.b64  	%rd1692, %rd1691, %rd1675;
	or.b64  	%rd1693, %rd1690, %rd1692;
	and.b64  	%rd1694, %rd1683, %rd1669;
	or.b64  	%rd1695, %rd1693, %rd1694;
	xor.b64  	%rd1696, %rd1695, %rd1686;
	add.s64 	%rd1697, %rd52, %rd1515;
	add.s64 	%rd1698, %rd1697, %rd1549;
	xor.b64  	%rd1699, %rd1698, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd1699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r698,%dummy}, %rd1699;
	}
	shf.l.wrap.b32 	%r699, %r698, %r697, 4;
	shf.l.wrap.b32 	%r700, %r697, %r698, 4;
	mov.b64 	%rd1700, {%r700, %r699};
	add.s64 	%rd1701, %rd1474, %rd1700;
	xor.b64  	%rd1702, %rd1515, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd1702;
	}
	shf.l.wrap.b32 	%r703, %r702, %r701, 21;
	shf.l.wrap.b32 	%r704, %r701, %r702, 21;
	mov.b64 	%rd1703, {%r704, %r703};
	add.s64 	%rd1704, %rd1703, %rd1698;
	add.s64 	%rd1705, %rd1704, 5987067145339136795;
	xor.b64  	%rd1706, %rd1705, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r705,%dummy}, %rd1706;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r706}, %rd1706;
	}
	shf.r.wrap.b32 	%r707, %r706, %r705, 5;
	shf.r.wrap.b32 	%r708, %r705, %r706, 5;
	mov.b64 	%rd1707, {%r708, %r707};
	add.s64 	%rd1708, %rd1701, %rd1707;
	xor.b64  	%rd1709, %rd1703, %rd1708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r709,%dummy}, %rd1709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r710}, %rd1709;
	}
	shf.r.wrap.b32 	%r711, %r710, %r709, 18;
	shf.r.wrap.b32 	%r712, %r709, %r710, 18;
	mov.b64 	%rd1710, {%r712, %r711};
	not.b64 	%rd1711, %rd1705;
	not.b64 	%rd1712, %rd1710;
	and.b64  	%rd1713, %rd1711, %rd1712;
	not.b64 	%rd1714, %rd1708;
	and.b64  	%rd1715, %rd1713, %rd1714;
	and.b64  	%rd1716, %rd1710, %rd1711;
	and.b64  	%rd1717, %rd1716, %rd1708;
	or.b64  	%rd1718, %rd1717, %rd1715;
	and.b64  	%rd1719, %rd1708, %rd1712;
	and.b64  	%rd1720, %rd1719, %rd1705;
	or.b64  	%rd1721, %rd1718, %rd1720;
	and.b64  	%rd1722, %rd1710, %rd1705;
	and.b64  	%rd1723, %rd1722, %rd1714;
	or.b64  	%rd1724, %rd1721, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1707;
	and.b64  	%rd1726, %rd1713, %rd1708;
	and.b64  	%rd1727, %rd1711, %rd1714;
	and.b64  	%rd1728, %rd1727, %rd1710;
	or.b64  	%rd1729, %rd1728, %rd1726;
	and.b64  	%rd1730, %rd1705, %rd1712;
	and.b64  	%rd1731, %rd1730, %rd1714;
	or.b64  	%rd1732, %rd1729, %rd1731;
	and.b64  	%rd1733, %rd1722, %rd1708;
	or.b64  	%rd1734, %rd1732, %rd1733;
	xor.b64  	%rd1735, %rd1734, %rd1725;
	add.s64 	%rd1736, %rd1632, %rd1588;
	add.s64 	%rd1737, %rd1736, 7251808426145424871;
	xor.b64  	%rd1738, %rd1737, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r713}, %rd1738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd1738;
	}
	shf.l.wrap.b32 	%r715, %r714, %r713, 4;
	shf.l.wrap.b32 	%r716, %r713, %r714, 4;
	mov.b64 	%rd1739, {%r716, %r715};
	add.s64 	%rd1740, %rd1669, %rd1739;
	xor.b64  	%rd1741, %rd1632, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r717}, %rd1741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r718,%dummy}, %rd1741;
	}
	shf.l.wrap.b32 	%r719, %r718, %r717, 21;
	shf.l.wrap.b32 	%r720, %r717, %r718, 21;
	mov.b64 	%rd1742, {%r720, %r719};
	add.s64 	%rd1743, %rd102, %rd1742;
	add.s64 	%rd1744, %rd1743, %rd1737;
	xor.b64  	%rd1745, %rd1744, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r721,%dummy}, %rd1745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r722}, %rd1745;
	}
	shf.r.wrap.b32 	%r723, %r722, %r721, 5;
	shf.r.wrap.b32 	%r724, %r721, %r722, 5;
	mov.b64 	%rd1746, {%r724, %r723};
	add.s64 	%rd1747, %rd1740, %rd1746;
	xor.b64  	%rd1748, %rd1742, %rd1747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r725,%dummy}, %rd1748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r726}, %rd1748;
	}
	shf.r.wrap.b32 	%r727, %r726, %r725, 18;
	shf.r.wrap.b32 	%r728, %r725, %r726, 18;
	mov.b64 	%rd1749, {%r728, %r727};
	not.b64 	%rd1750, %rd1744;
	not.b64 	%rd1751, %rd1749;
	and.b64  	%rd1752, %rd1750, %rd1751;
	not.b64 	%rd1753, %rd1747;
	and.b64  	%rd1754, %rd1752, %rd1753;
	and.b64  	%rd1755, %rd1749, %rd1750;
	and.b64  	%rd1756, %rd1755, %rd1747;
	or.b64  	%rd1757, %rd1756, %rd1754;
	and.b64  	%rd1758, %rd1747, %rd1751;
	and.b64  	%rd1759, %rd1758, %rd1744;
	or.b64  	%rd1760, %rd1757, %rd1759;
	and.b64  	%rd1761, %rd1749, %rd1744;
	and.b64  	%rd1762, %rd1761, %rd1753;
	or.b64  	%rd1763, %rd1760, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1746;
	and.b64  	%rd1765, %rd1752, %rd1747;
	and.b64  	%rd1766, %rd1750, %rd1753;
	and.b64  	%rd1767, %rd1766, %rd1749;
	or.b64  	%rd1768, %rd1767, %rd1765;
	and.b64  	%rd1769, %rd1744, %rd1751;
	and.b64  	%rd1770, %rd1769, %rd1753;
	or.b64  	%rd1771, %rd1768, %rd1770;
	and.b64  	%rd1772, %rd1761, %rd1747;
	or.b64  	%rd1773, %rd1771, %rd1772;
	xor.b64  	%rd1774, %rd1773, %rd1764;
	add.s64 	%rd1775, %rd94, %rd1671;
	add.s64 	%rd1776, %rd1775, %rd1627;
	xor.b64  	%rd1777, %rd1776, %rd1618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r729}, %rd1777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1777;
	}
	shf.l.wrap.b32 	%r731, %r730, %r729, 4;
	shf.l.wrap.b32 	%r732, %r729, %r730, 4;
	mov.b64 	%rd1778, {%r732, %r731};
	add.s64 	%rd1779, %rd1708, %rd1778;
	xor.b64  	%rd1780, %rd1671, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd1780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r734,%dummy}, %rd1780;
	}
	shf.l.wrap.b32 	%r735, %r734, %r733, 21;
	shf.l.wrap.b32 	%r736, %r733, %r734, 21;
	mov.b64 	%rd1781, {%r736, %r735};
	add.s64 	%rd1782, %rd135, %rd1781;
	add.s64 	%rd1783, %rd1782, %rd1776;
	xor.b64  	%rd1784, %rd1783, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1784;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 5;
	shf.r.wrap.b32 	%r740, %r737, %r738, 5;
	mov.b64 	%rd1785, {%r740, %r739};
	add.s64 	%rd1786, %rd1779, %rd1785;
	xor.b64  	%rd1787, %rd1781, %rd1786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd1787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd1787;
	}
	shf.r.wrap.b32 	%r743, %r742, %r741, 18;
	shf.r.wrap.b32 	%r744, %r741, %r742, 18;
	mov.b64 	%rd1788, {%r744, %r743};
	not.b64 	%rd1789, %rd1783;
	not.b64 	%rd1790, %rd1788;
	and.b64  	%rd1791, %rd1789, %rd1790;
	not.b64 	%rd1792, %rd1786;
	and.b64  	%rd1793, %rd1791, %rd1792;
	and.b64  	%rd1794, %rd1788, %rd1789;
	and.b64  	%rd1795, %rd1794, %rd1786;
	or.b64  	%rd1796, %rd1795, %rd1793;
	and.b64  	%rd1797, %rd1786, %rd1790;
	and.b64  	%rd1798, %rd1797, %rd1783;
	or.b64  	%rd1799, %rd1796, %rd1798;
	and.b64  	%rd1800, %rd1788, %rd1783;
	and.b64  	%rd1801, %rd1800, %rd1792;
	or.b64  	%rd1802, %rd1799, %rd1801;
	xor.b64  	%rd1803, %rd1802, %rd1785;
	and.b64  	%rd1804, %rd1791, %rd1786;
	and.b64  	%rd1805, %rd1789, %rd1792;
	and.b64  	%rd1806, %rd1805, %rd1788;
	or.b64  	%rd1807, %rd1806, %rd1804;
	and.b64  	%rd1808, %rd1783, %rd1790;
	and.b64  	%rd1809, %rd1808, %rd1792;
	or.b64  	%rd1810, %rd1807, %rd1809;
	and.b64  	%rd1811, %rd1800, %rd1786;
	or.b64  	%rd1812, %rd1810, %rd1811;
	xor.b64  	%rd1813, %rd1812, %rd1803;
	add.s64 	%rd1814, %rd1710, %rd1666;
	add.s64 	%rd1815, %rd1814, -2856998567947870208;
	xor.b64  	%rd1816, %rd1815, %rd1657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r746,%dummy}, %rd1816;
	}
	shf.l.wrap.b32 	%r747, %r746, %r745, 4;
	shf.l.wrap.b32 	%r748, %r745, %r746, 4;
	mov.b64 	%rd1817, {%r748, %r747};
	add.s64 	%rd1818, %rd1591, %rd1817;
	xor.b64  	%rd1819, %rd1710, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r749}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r750,%dummy}, %rd1819;
	}
	shf.l.wrap.b32 	%r751, %r750, %r749, 21;
	shf.l.wrap.b32 	%r752, %r749, %r750, 21;
	mov.b64 	%rd1820, {%r752, %r751};
	add.s64 	%rd1821, %rd1820, %rd1815;
	add.s64 	%rd1822, %rd1821, 7194923001510760043;
	xor.b64  	%rd1823, %rd1822, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r753,%dummy}, %rd1823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r754}, %rd1823;
	}
	shf.r.wrap.b32 	%r755, %r754, %r753, 5;
	shf.r.wrap.b32 	%r756, %r753, %r754, 5;
	mov.b64 	%rd1824, {%r756, %r755};
	add.s64 	%rd1825, %rd1818, %rd1824;
	xor.b64  	%rd1826, %rd1820, %rd1825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1826;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 18;
	shf.r.wrap.b32 	%r760, %r757, %r758, 18;
	mov.b64 	%rd1827, {%r760, %r759};
	not.b64 	%rd1828, %rd1822;
	not.b64 	%rd1829, %rd1827;
	and.b64  	%rd1830, %rd1828, %rd1829;
	not.b64 	%rd1831, %rd1825;
	and.b64  	%rd1832, %rd1830, %rd1831;
	and.b64  	%rd1833, %rd1827, %rd1828;
	and.b64  	%rd1834, %rd1833, %rd1825;
	or.b64  	%rd1835, %rd1834, %rd1832;
	and.b64  	%rd1836, %rd1825, %rd1829;
	and.b64  	%rd1837, %rd1836, %rd1822;
	or.b64  	%rd1838, %rd1835, %rd1837;
	and.b64  	%rd1839, %rd1827, %rd1822;
	and.b64  	%rd1840, %rd1839, %rd1831;
	or.b64  	%rd1841, %rd1838, %rd1840;
	xor.b64  	%rd1842, %rd1841, %rd1824;
	and.b64  	%rd1843, %rd1830, %rd1825;
	and.b64  	%rd1844, %rd1828, %rd1831;
	and.b64  	%rd1845, %rd1844, %rd1827;
	or.b64  	%rd1846, %rd1845, %rd1843;
	and.b64  	%rd1847, %rd1822, %rd1829;
	and.b64  	%rd1848, %rd1847, %rd1831;
	or.b64  	%rd1849, %rd1846, %rd1848;
	and.b64  	%rd1850, %rd1839, %rd1825;
	or.b64  	%rd1851, %rd1849, %rd1850;
	xor.b64  	%rd1852, %rd1851, %rd1842;
	add.s64 	%rd1853, %rd1593, %rd1705;
	add.s64 	%rd1854, %rd1853, -3341658112243943424;
	xor.b64  	%rd1855, %rd1854, %rd1696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r761}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd1855;
	}
	shf.l.wrap.b32 	%r763, %r762, %r761, 4;
	shf.l.wrap.b32 	%r764, %r761, %r762, 4;
	mov.b64 	%rd1856, {%r764, %r763};
	add.s64 	%rd1857, %rd1630, %rd1856;
	xor.b64  	%rd1858, %rd1593, %rd1857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r765}, %rd1858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r766,%dummy}, %rd1858;
	}
	shf.l.wrap.b32 	%r767, %r766, %r765, 21;
	shf.l.wrap.b32 	%r768, %r765, %r766, 21;
	mov.b64 	%rd1859, {%r768, %r767};
	add.s64 	%rd1860, %rd10, %rd1859;
	add.s64 	%rd1861, %rd1860, %rd1854;
	xor.b64  	%rd1862, %rd1861, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r769,%dummy}, %rd1862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r770}, %rd1862;
	}
	shf.r.wrap.b32 	%r771, %r770, %r769, 5;
	shf.r.wrap.b32 	%r772, %r769, %r770, 5;
	mov.b64 	%rd1863, {%r772, %r771};
	add.s64 	%rd1864, %rd1857, %rd1863;
	xor.b64  	%rd1865, %rd1859, %rd1864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd1865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd1865;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 18;
	shf.r.wrap.b32 	%r776, %r773, %r774, 18;
	mov.b64 	%rd1866, {%r776, %r775};
	not.b64 	%rd1867, %rd1861;
	not.b64 	%rd1868, %rd1866;
	and.b64  	%rd1869, %rd1867, %rd1868;
	not.b64 	%rd1870, %rd1864;
	and.b64  	%rd1871, %rd1869, %rd1870;
	and.b64  	%rd1872, %rd1866, %rd1867;
	and.b64  	%rd1873, %rd1872, %rd1864;
	or.b64  	%rd1874, %rd1873, %rd1871;
	and.b64  	%rd1875, %rd1864, %rd1868;
	and.b64  	%rd1876, %rd1875, %rd1861;
	or.b64  	%rd1877, %rd1874, %rd1876;
	and.b64  	%rd1878, %rd1866, %rd1861;
	and.b64  	%rd1879, %rd1878, %rd1870;
	or.b64  	%rd1880, %rd1877, %rd1879;
	xor.b64  	%rd1881, %rd1880, %rd1863;
	and.b64  	%rd1882, %rd1869, %rd1864;
	and.b64  	%rd1883, %rd1867, %rd1870;
	and.b64  	%rd1884, %rd1883, %rd1866;
	or.b64  	%rd1885, %rd1884, %rd1882;
	and.b64  	%rd1886, %rd1861, %rd1868;
	and.b64  	%rd1887, %rd1886, %rd1870;
	or.b64  	%rd1888, %rd1885, %rd1887;
	and.b64  	%rd1889, %rd1878, %rd1864;
	or.b64  	%rd1890, %rd1888, %rd1889;
	xor.b64  	%rd1891, %rd1890, %rd1881;
	add.s64 	%rd1892, %rd94, %rd1866;
	add.s64 	%rd1893, %rd1892, %rd1744;
	xor.b64  	%rd1894, %rd1893, %rd1813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r777}, %rd1894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r778,%dummy}, %rd1894;
	}
	shf.l.wrap.b32 	%r779, %r778, %r777, 4;
	shf.l.wrap.b32 	%r780, %r777, %r778, 4;
	mov.b64 	%rd1895, {%r780, %r779};
	add.s64 	%rd1896, %rd1825, %rd1895;
	xor.b64  	%rd1897, %rd1866, %rd1896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r782,%dummy}, %rd1897;
	}
	shf.l.wrap.b32 	%r783, %r782, %r781, 21;
	shf.l.wrap.b32 	%r784, %r781, %r782, 21;
	mov.b64 	%rd1898, {%r784, %r783};
	add.s64 	%rd1899, %rd1898, %rd1893;
	add.s64 	%rd1900, %rd1899, -4972871168744972288;
	xor.b64  	%rd1901, %rd1900, %rd1895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r785,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r786}, %rd1901;
	}
	shf.r.wrap.b32 	%r787, %r786, %r785, 5;
	shf.r.wrap.b32 	%r788, %r785, %r786, 5;
	mov.b64 	%rd1902, {%r788, %r787};
	add.s64 	%rd1903, %rd1896, %rd1902;
	xor.b64  	%rd1904, %rd1898, %rd1903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd1904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd1904;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 18;
	shf.r.wrap.b32 	%r792, %r789, %r790, 18;
	mov.b64 	%rd1905, {%r792, %r791};
	not.b64 	%rd1906, %rd1900;
	not.b64 	%rd1907, %rd1905;
	and.b64  	%rd1908, %rd1906, %rd1907;
	not.b64 	%rd1909, %rd1903;
	and.b64  	%rd1910, %rd1908, %rd1909;
	and.b64  	%rd1911, %rd1905, %rd1906;
	and.b64  	%rd1912, %rd1911, %rd1903;
	or.b64  	%rd1913, %rd1912, %rd1910;
	and.b64  	%rd1914, %rd1903, %rd1907;
	and.b64  	%rd1915, %rd1914, %rd1900;
	or.b64  	%rd1916, %rd1913, %rd1915;
	and.b64  	%rd1917, %rd1905, %rd1900;
	and.b64  	%rd1918, %rd1917, %rd1909;
	or.b64  	%rd1919, %rd1916, %rd1918;
	xor.b64  	%rd1920, %rd1919, %rd1902;
	and.b64  	%rd1921, %rd1908, %rd1903;
	and.b64  	%rd1922, %rd1906, %rd1909;
	and.b64  	%rd1923, %rd1922, %rd1905;
	or.b64  	%rd1924, %rd1923, %rd1921;
	and.b64  	%rd1925, %rd1900, %rd1907;
	and.b64  	%rd1926, %rd1925, %rd1909;
	or.b64  	%rd1927, %rd1924, %rd1926;
	and.b64  	%rd1928, %rd1917, %rd1903;
	or.b64  	%rd1929, %rd1927, %rd1928;
	xor.b64  	%rd1930, %rd1929, %rd1920;
	add.s64 	%rd1931, %rd1749, %rd1783;
	add.s64 	%rd1932, %rd1931, 7194923001510760043;
	xor.b64  	%rd1933, %rd1932, %rd1852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r793}, %rd1933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r794,%dummy}, %rd1933;
	}
	shf.l.wrap.b32 	%r795, %r794, %r793, 4;
	shf.l.wrap.b32 	%r796, %r793, %r794, 4;
	mov.b64 	%rd1934, {%r796, %r795};
	add.s64 	%rd1935, %rd1864, %rd1934;
	xor.b64  	%rd1936, %rd1749, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r797}, %rd1936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r798,%dummy}, %rd1936;
	}
	shf.l.wrap.b32 	%r799, %r798, %r797, 21;
	shf.l.wrap.b32 	%r800, %r797, %r798, 21;
	mov.b64 	%rd1937, {%r800, %r799};
	add.s64 	%rd1938, %rd10, %rd1937;
	add.s64 	%rd1939, %rd1938, %rd1932;
	xor.b64  	%rd1940, %rd1939, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r801,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r802}, %rd1940;
	}
	shf.r.wrap.b32 	%r803, %r802, %r801, 5;
	shf.r.wrap.b32 	%r804, %r801, %r802, 5;
	mov.b64 	%rd1941, {%r804, %r803};
	add.s64 	%rd1942, %rd1935, %rd1941;
	xor.b64  	%rd1943, %rd1937, %rd1942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd1943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r806}, %rd1943;
	}
	shf.r.wrap.b32 	%r807, %r806, %r805, 18;
	shf.r.wrap.b32 	%r808, %r805, %r806, 18;
	mov.b64 	%rd1944, {%r808, %r807};
	not.b64 	%rd1945, %rd1939;
	not.b64 	%rd1946, %rd1944;
	and.b64  	%rd1947, %rd1945, %rd1946;
	not.b64 	%rd1948, %rd1942;
	and.b64  	%rd1949, %rd1947, %rd1948;
	and.b64  	%rd1950, %rd1944, %rd1945;
	and.b64  	%rd1951, %rd1950, %rd1942;
	or.b64  	%rd1952, %rd1951, %rd1949;
	and.b64  	%rd1953, %rd1942, %rd1946;
	and.b64  	%rd1954, %rd1953, %rd1939;
	or.b64  	%rd1955, %rd1952, %rd1954;
	and.b64  	%rd1956, %rd1944, %rd1939;
	and.b64  	%rd1957, %rd1956, %rd1948;
	or.b64  	%rd1958, %rd1955, %rd1957;
	xor.b64  	%rd1959, %rd1958, %rd1941;
	and.b64  	%rd1960, %rd1947, %rd1942;
	and.b64  	%rd1961, %rd1945, %rd1948;
	and.b64  	%rd1962, %rd1961, %rd1944;
	or.b64  	%rd1963, %rd1962, %rd1960;
	and.b64  	%rd1964, %rd1939, %rd1946;
	and.b64  	%rd1965, %rd1964, %rd1948;
	or.b64  	%rd1966, %rd1963, %rd1965;
	and.b64  	%rd1967, %rd1956, %rd1942;
	or.b64  	%rd1968, %rd1966, %rd1967;
	xor.b64  	%rd1969, %rd1968, %rd1959;
	add.s64 	%rd1970, %rd1788, %rd1822;
	add.s64 	%rd1971, %rd1970, 7251808426145424871;
	xor.b64  	%rd1972, %rd1971, %rd1891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r809}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd1972;
	}
	shf.l.wrap.b32 	%r811, %r810, %r809, 4;
	shf.l.wrap.b32 	%r812, %r809, %r810, 4;
	mov.b64 	%rd1973, {%r812, %r811};
	add.s64 	%rd1974, %rd1747, %rd1973;
	xor.b64  	%rd1975, %rd1788, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd1975;
	}
	shf.l.wrap.b32 	%r815, %r814, %r813, 21;
	shf.l.wrap.b32 	%r816, %r813, %r814, 21;
	mov.b64 	%rd1976, {%r816, %r815};
	add.s64 	%rd1977, %rd1976, %rd1971;
	add.s64 	%rd1978, %rd1977, -2856998567947870208;
	xor.b64  	%rd1979, %rd1978, %rd1973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd1979;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 5;
	shf.r.wrap.b32 	%r820, %r817, %r818, 5;
	mov.b64 	%rd1980, {%r820, %r819};
	add.s64 	%rd1981, %rd1974, %rd1980;
	xor.b64  	%rd1982, %rd1976, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd1982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd1982;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 18;
	shf.r.wrap.b32 	%r824, %r821, %r822, 18;
	mov.b64 	%rd1983, {%r824, %r823};
	not.b64 	%rd1984, %rd1978;
	not.b64 	%rd1985, %rd1983;
	and.b64  	%rd1986, %rd1984, %rd1985;
	not.b64 	%rd1987, %rd1981;
	and.b64  	%rd1988, %rd1986, %rd1987;
	and.b64  	%rd1989, %rd1983, %rd1984;
	and.b64  	%rd1990, %rd1989, %rd1981;
	or.b64  	%rd1991, %rd1990, %rd1988;
	and.b64  	%rd1992, %rd1981, %rd1985;
	and.b64  	%rd1993, %rd1992, %rd1978;
	or.b64  	%rd1994, %rd1991, %rd1993;
	and.b64  	%rd1995, %rd1983, %rd1978;
	and.b64  	%rd1996, %rd1995, %rd1987;
	or.b64  	%rd1997, %rd1994, %rd1996;
	xor.b64  	%rd1998, %rd1997, %rd1980;
	and.b64  	%rd1999, %rd1986, %rd1981;
	and.b64  	%rd2000, %rd1984, %rd1987;
	and.b64  	%rd2001, %rd2000, %rd1983;
	or.b64  	%rd2002, %rd2001, %rd1999;
	and.b64  	%rd2003, %rd1978, %rd1985;
	and.b64  	%rd2004, %rd2003, %rd1987;
	or.b64  	%rd2005, %rd2002, %rd2004;
	and.b64  	%rd2006, %rd1995, %rd1981;
	or.b64  	%rd2007, %rd2005, %rd2006;
	xor.b64  	%rd2008, %rd2007, %rd1998;
	add.s64 	%rd2009, %rd1827, %rd1861;
	add.s64 	%rd2010, %rd2009, 3450974313248867902;
	xor.b64  	%rd2011, %rd2010, %rd1774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r825}, %rd2011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r826,%dummy}, %rd2011;
	}
	shf.l.wrap.b32 	%r827, %r826, %r825, 4;
	shf.l.wrap.b32 	%r828, %r825, %r826, 4;
	mov.b64 	%rd2012, {%r828, %r827};
	add.s64 	%rd2013, %rd1786, %rd2012;
	xor.b64  	%rd2014, %rd1827, %rd2013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r829}, %rd2014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd2014;
	}
	shf.l.wrap.b32 	%r831, %r830, %r829, 21;
	shf.l.wrap.b32 	%r832, %r829, %r830, 21;
	mov.b64 	%rd2015, {%r832, %r831};
	add.s64 	%rd2016, %rd102, %rd2015;
	add.s64 	%rd2017, %rd2016, %rd2010;
	xor.b64  	%rd2018, %rd2017, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r833,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r834}, %rd2018;
	}
	shf.r.wrap.b32 	%r835, %r834, %r833, 5;
	shf.r.wrap.b32 	%r836, %r833, %r834, 5;
	mov.b64 	%rd2019, {%r836, %r835};
	add.s64 	%rd2020, %rd2013, %rd2019;
	xor.b64  	%rd2021, %rd2015, %rd2020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd2021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd2021;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 18;
	shf.r.wrap.b32 	%r840, %r837, %r838, 18;
	mov.b64 	%rd2022, {%r840, %r839};
	not.b64 	%rd2023, %rd2017;
	not.b64 	%rd2024, %rd2022;
	and.b64  	%rd2025, %rd2023, %rd2024;
	not.b64 	%rd2026, %rd2020;
	and.b64  	%rd2027, %rd2025, %rd2026;
	and.b64  	%rd2028, %rd2022, %rd2023;
	and.b64  	%rd2029, %rd2028, %rd2020;
	or.b64  	%rd2030, %rd2029, %rd2027;
	and.b64  	%rd2031, %rd2020, %rd2024;
	and.b64  	%rd2032, %rd2031, %rd2017;
	or.b64  	%rd2033, %rd2030, %rd2032;
	and.b64  	%rd2034, %rd2022, %rd2017;
	and.b64  	%rd2035, %rd2034, %rd2026;
	or.b64  	%rd2036, %rd2033, %rd2035;
	xor.b64  	%rd2037, %rd2036, %rd2019;
	and.b64  	%rd2038, %rd2025, %rd2020;
	and.b64  	%rd2039, %rd2023, %rd2026;
	and.b64  	%rd2040, %rd2039, %rd2022;
	or.b64  	%rd2041, %rd2040, %rd2038;
	and.b64  	%rd2042, %rd2017, %rd2024;
	and.b64  	%rd2043, %rd2042, %rd2026;
	or.b64  	%rd2044, %rd2041, %rd2043;
	and.b64  	%rd2045, %rd2034, %rd2020;
	or.b64  	%rd2046, %rd2044, %rd2045;
	xor.b64  	%rd2047, %rd2046, %rd2037;
	add.s64 	%rd2048, %rd135, %rd1944;
	add.s64 	%rd2049, %rd2048, %rd1900;
	xor.b64  	%rd2050, %rd2049, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r841}, %rd2050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r842,%dummy}, %rd2050;
	}
	shf.l.wrap.b32 	%r843, %r842, %r841, 4;
	shf.l.wrap.b32 	%r844, %r841, %r842, 4;
	mov.b64 	%rd2051, {%r844, %r843};
	add.s64 	%rd2052, %rd1981, %rd2051;
	xor.b64  	%rd2053, %rd1944, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r845}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd2053;
	}
	shf.l.wrap.b32 	%r847, %r846, %r845, 21;
	shf.l.wrap.b32 	%r848, %r845, %r846, 21;
	mov.b64 	%rd2054, {%r848, %r847};
	add.s64 	%rd2055, %rd18, %rd2054;
	add.s64 	%rd2056, %rd2055, %rd2049;
	xor.b64  	%rd2057, %rd2056, %rd2051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r849,%dummy}, %rd2057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r850}, %rd2057;
	}
	shf.r.wrap.b32 	%r851, %r850, %r849, 5;
	shf.r.wrap.b32 	%r852, %r849, %r850, 5;
	mov.b64 	%rd2058, {%r852, %r851};
	add.s64 	%rd2059, %rd2052, %rd2058;
	xor.b64  	%rd2060, %rd2054, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd2060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd2060;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 18;
	shf.r.wrap.b32 	%r856, %r853, %r854, 18;
	mov.b64 	%rd2061, {%r856, %r855};
	not.b64 	%rd2062, %rd2056;
	not.b64 	%rd2063, %rd2061;
	and.b64  	%rd2064, %rd2062, %rd2063;
	not.b64 	%rd2065, %rd2059;
	and.b64  	%rd2066, %rd2064, %rd2065;
	and.b64  	%rd2067, %rd2061, %rd2062;
	and.b64  	%rd2068, %rd2067, %rd2059;
	or.b64  	%rd2069, %rd2068, %rd2066;
	and.b64  	%rd2070, %rd2059, %rd2063;
	and.b64  	%rd2071, %rd2070, %rd2056;
	or.b64  	%rd2072, %rd2069, %rd2071;
	and.b64  	%rd2073, %rd2061, %rd2056;
	and.b64  	%rd2074, %rd2073, %rd2065;
	or.b64  	%rd2075, %rd2072, %rd2074;
	xor.b64  	%rd2076, %rd2075, %rd2058;
	and.b64  	%rd2077, %rd2064, %rd2059;
	and.b64  	%rd2078, %rd2062, %rd2065;
	and.b64  	%rd2079, %rd2078, %rd2061;
	or.b64  	%rd2080, %rd2079, %rd2077;
	and.b64  	%rd2081, %rd2056, %rd2063;
	and.b64  	%rd2082, %rd2081, %rd2065;
	or.b64  	%rd2083, %rd2080, %rd2082;
	and.b64  	%rd2084, %rd2073, %rd2059;
	or.b64  	%rd2085, %rd2083, %rd2084;
	xor.b64  	%rd2086, %rd2085, %rd2076;
	add.s64 	%rd2087, %rd52, %rd1983;
	add.s64 	%rd2088, %rd2087, %rd1939;
	xor.b64  	%rd2089, %rd2088, %rd1930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd2089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r858,%dummy}, %rd2089;
	}
	shf.l.wrap.b32 	%r859, %r858, %r857, 4;
	shf.l.wrap.b32 	%r860, %r857, %r858, 4;
	mov.b64 	%rd2090, {%r860, %r859};
	add.s64 	%rd2091, %rd2020, %rd2090;
	xor.b64  	%rd2092, %rd1983, %rd2091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r861}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd2092;
	}
	shf.l.wrap.b32 	%r863, %r862, %r861, 21;
	shf.l.wrap.b32 	%r864, %r861, %r862, 21;
	mov.b64 	%rd2093, {%r864, %r863};
	add.s64 	%rd2094, %rd143, %rd2093;
	add.s64 	%rd2095, %rd2094, %rd2088;
	xor.b64  	%rd2096, %rd2095, %rd2090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r865,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r866}, %rd2096;
	}
	shf.r.wrap.b32 	%r867, %r866, %r865, 5;
	shf.r.wrap.b32 	%r868, %r865, %r866, 5;
	mov.b64 	%rd2097, {%r868, %r867};
	add.s64 	%rd2098, %rd2091, %rd2097;
	xor.b64  	%rd2099, %rd2093, %rd2098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd2099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd2099;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 18;
	shf.r.wrap.b32 	%r872, %r869, %r870, 18;
	mov.b64 	%rd2100, {%r872, %r871};
	not.b64 	%rd2101, %rd2095;
	not.b64 	%rd2102, %rd2100;
	and.b64  	%rd2103, %rd2101, %rd2102;
	not.b64 	%rd2104, %rd2098;
	and.b64  	%rd2105, %rd2103, %rd2104;
	and.b64  	%rd2106, %rd2100, %rd2101;
	and.b64  	%rd2107, %rd2106, %rd2098;
	or.b64  	%rd2108, %rd2107, %rd2105;
	and.b64  	%rd2109, %rd2098, %rd2102;
	and.b64  	%rd2110, %rd2109, %rd2095;
	or.b64  	%rd2111, %rd2108, %rd2110;
	and.b64  	%rd2112, %rd2100, %rd2095;
	and.b64  	%rd2113, %rd2112, %rd2104;
	or.b64  	%rd2114, %rd2111, %rd2113;
	xor.b64  	%rd2115, %rd2114, %rd2097;
	and.b64  	%rd2116, %rd2103, %rd2098;
	and.b64  	%rd2117, %rd2101, %rd2104;
	and.b64  	%rd2118, %rd2117, %rd2100;
	or.b64  	%rd2119, %rd2118, %rd2116;
	and.b64  	%rd2120, %rd2095, %rd2102;
	and.b64  	%rd2121, %rd2120, %rd2104;
	or.b64  	%rd2122, %rd2119, %rd2121;
	and.b64  	%rd2123, %rd2112, %rd2098;
	or.b64  	%rd2124, %rd2122, %rd2123;
	xor.b64  	%rd2125, %rd2124, %rd2115;
	add.s64 	%rd2126, %rd60, %rd2022;
	add.s64 	%rd2127, %rd2126, %rd1978;
	xor.b64  	%rd2128, %rd2127, %rd1969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r873}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r874,%dummy}, %rd2128;
	}
	shf.l.wrap.b32 	%r875, %r874, %r873, 4;
	shf.l.wrap.b32 	%r876, %r873, %r874, 4;
	mov.b64 	%rd2129, {%r876, %r875};
	add.s64 	%rd2130, %rd1903, %rd2129;
	xor.b64  	%rd2131, %rd2022, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r877}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd2131;
	}
	shf.l.wrap.b32 	%r879, %r878, %r877, 21;
	shf.l.wrap.b32 	%r880, %r877, %r878, 21;
	mov.b64 	%rd2132, {%r880, %r879};
	add.s64 	%rd2133, %rd2132, %rd2127;
	add.s64 	%rd2134, %rd2133, -3341658112243943424;
	xor.b64  	%rd2135, %rd2134, %rd2129;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r881,%dummy}, %rd2135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r882}, %rd2135;
	}
	shf.r.wrap.b32 	%r883, %r882, %r881, 5;
	shf.r.wrap.b32 	%r884, %r881, %r882, 5;
	mov.b64 	%rd2136, {%r884, %r883};
	add.s64 	%rd2137, %rd2130, %rd2136;
	xor.b64  	%rd2138, %rd2132, %rd2137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd2138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd2138;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 18;
	shf.r.wrap.b32 	%r888, %r885, %r886, 18;
	mov.b64 	%rd2139, {%r888, %r887};
	not.b64 	%rd2140, %rd2134;
	not.b64 	%rd2141, %rd2139;
	and.b64  	%rd2142, %rd2140, %rd2141;
	not.b64 	%rd2143, %rd2137;
	and.b64  	%rd2144, %rd2142, %rd2143;
	and.b64  	%rd2145, %rd2139, %rd2140;
	and.b64  	%rd2146, %rd2145, %rd2137;
	or.b64  	%rd2147, %rd2146, %rd2144;
	and.b64  	%rd2148, %rd2137, %rd2141;
	and.b64  	%rd2149, %rd2148, %rd2134;
	or.b64  	%rd2150, %rd2147, %rd2149;
	and.b64  	%rd2151, %rd2139, %rd2134;
	and.b64  	%rd2152, %rd2151, %rd2143;
	or.b64  	%rd2153, %rd2150, %rd2152;
	xor.b64  	%rd2154, %rd2153, %rd2136;
	and.b64  	%rd2155, %rd2142, %rd2137;
	and.b64  	%rd2156, %rd2140, %rd2143;
	and.b64  	%rd2157, %rd2156, %rd2139;
	or.b64  	%rd2158, %rd2157, %rd2155;
	and.b64  	%rd2159, %rd2134, %rd2141;
	and.b64  	%rd2160, %rd2159, %rd2143;
	or.b64  	%rd2161, %rd2158, %rd2160;
	and.b64  	%rd2162, %rd2151, %rd2137;
	or.b64  	%rd2163, %rd2161, %rd2162;
	xor.b64  	%rd2164, %rd2163, %rd2154;
	add.s64 	%rd2165, %rd1905, %rd2017;
	add.s64 	%rd2166, %rd2165, -7446784132049864704;
	xor.b64  	%rd2167, %rd2166, %rd2008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd2167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd2167;
	}
	shf.l.wrap.b32 	%r891, %r890, %r889, 4;
	shf.l.wrap.b32 	%r892, %r889, %r890, 4;
	mov.b64 	%rd2168, {%r892, %r891};
	add.s64 	%rd2169, %rd1942, %rd2168;
	xor.b64  	%rd2170, %rd1905, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r893}, %rd2170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd2170;
	}
	shf.l.wrap.b32 	%r895, %r894, %r893, 21;
	shf.l.wrap.b32 	%r896, %r893, %r894, 21;
	mov.b64 	%rd2171, {%r896, %r895};
	add.s64 	%rd2172, %rd2171, %rd2166;
	add.s64 	%rd2173, %rd2172, 5987067145339136795;
	xor.b64  	%rd2174, %rd2173, %rd2168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r897,%dummy}, %rd2174;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r898}, %rd2174;
	}
	shf.r.wrap.b32 	%r899, %r898, %r897, 5;
	shf.r.wrap.b32 	%r900, %r897, %r898, 5;
	mov.b64 	%rd2175, {%r900, %r899};
	add.s64 	%rd2176, %rd2169, %rd2175;
	xor.b64  	%rd2177, %rd2171, %rd2176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd2177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd2177;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 18;
	shf.r.wrap.b32 	%r904, %r901, %r902, 18;
	mov.b64 	%rd2178, {%r904, %r903};
	not.b64 	%rd2179, %rd2173;
	not.b64 	%rd2180, %rd2178;
	and.b64  	%rd2181, %rd2179, %rd2180;
	not.b64 	%rd2182, %rd2176;
	and.b64  	%rd2183, %rd2181, %rd2182;
	and.b64  	%rd2184, %rd2178, %rd2179;
	and.b64  	%rd2185, %rd2184, %rd2176;
	or.b64  	%rd2186, %rd2185, %rd2183;
	and.b64  	%rd2187, %rd2176, %rd2180;
	and.b64  	%rd2188, %rd2187, %rd2173;
	or.b64  	%rd2189, %rd2186, %rd2188;
	and.b64  	%rd2190, %rd2178, %rd2173;
	and.b64  	%rd2191, %rd2190, %rd2182;
	or.b64  	%rd2192, %rd2189, %rd2191;
	xor.b64  	%rd2193, %rd2192, %rd2175;
	and.b64  	%rd2194, %rd2181, %rd2176;
	and.b64  	%rd2195, %rd2179, %rd2182;
	and.b64  	%rd2196, %rd2195, %rd2178;
	or.b64  	%rd2197, %rd2196, %rd2194;
	and.b64  	%rd2198, %rd2173, %rd2180;
	and.b64  	%rd2199, %rd2198, %rd2182;
	or.b64  	%rd2200, %rd2197, %rd2199;
	and.b64  	%rd2201, %rd2190, %rd2176;
	or.b64  	%rd2202, %rd2200, %rd2201;
	xor.b64  	%rd2203, %rd2202, %rd2193;
	add.s64 	%rd2204, %rd2178, %rd2056;
	add.s64 	%rd2205, %rd2204, -7446784132049864704;
	xor.b64  	%rd2206, %rd2205, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r905}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r906,%dummy}, %rd2206;
	}
	shf.l.wrap.b32 	%r907, %r906, %r905, 4;
	shf.l.wrap.b32 	%r908, %r905, %r906, 4;
	mov.b64 	%rd2207, {%r908, %r907};
	add.s64 	%rd2208, %rd2137, %rd2207;
	xor.b64  	%rd2209, %rd2178, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r909}, %rd2209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd2209;
	}
	shf.l.wrap.b32 	%r911, %r910, %r909, 21;
	shf.l.wrap.b32 	%r912, %r909, %r910, 21;
	mov.b64 	%rd2210, {%r912, %r911};
	add.s64 	%rd2211, %rd2210, %rd2205;
	add.s64 	%rd2212, %rd2211, 7251808426145424871;
	xor.b64  	%rd2213, %rd2212, %rd2207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r913,%dummy}, %rd2213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r914}, %rd2213;
	}
	shf.r.wrap.b32 	%r915, %r914, %r913, 5;
	shf.r.wrap.b32 	%r916, %r913, %r914, 5;
	mov.b64 	%rd2214, {%r916, %r915};
	add.s64 	%rd2215, %rd2208, %rd2214;
	xor.b64  	%rd2216, %rd2210, %rd2215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd2216;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 18;
	shf.r.wrap.b32 	%r920, %r917, %r918, 18;
	mov.b64 	%rd2217, {%r920, %r919};
	not.b64 	%rd2218, %rd2212;
	not.b64 	%rd2219, %rd2217;
	and.b64  	%rd2220, %rd2218, %rd2219;
	not.b64 	%rd2221, %rd2215;
	and.b64  	%rd2222, %rd2220, %rd2221;
	and.b64  	%rd2223, %rd2217, %rd2218;
	and.b64  	%rd2224, %rd2223, %rd2215;
	or.b64  	%rd2225, %rd2224, %rd2222;
	and.b64  	%rd2226, %rd2215, %rd2219;
	and.b64  	%rd2227, %rd2226, %rd2212;
	or.b64  	%rd2228, %rd2225, %rd2227;
	and.b64  	%rd2229, %rd2217, %rd2212;
	and.b64  	%rd2230, %rd2229, %rd2221;
	or.b64  	%rd2231, %rd2228, %rd2230;
	xor.b64  	%rd2232, %rd2231, %rd2214;
	and.b64  	%rd2233, %rd2220, %rd2215;
	and.b64  	%rd2234, %rd2218, %rd2221;
	and.b64  	%rd2235, %rd2234, %rd2217;
	or.b64  	%rd2236, %rd2235, %rd2233;
	and.b64  	%rd2237, %rd2212, %rd2219;
	and.b64  	%rd2238, %rd2237, %rd2221;
	or.b64  	%rd2239, %rd2236, %rd2238;
	and.b64  	%rd2240, %rd2229, %rd2215;
	or.b64  	%rd2241, %rd2239, %rd2240;
	xor.b64  	%rd2242, %rd2241, %rd2232;
	add.s64 	%rd2243, %rd2061, %rd2095;
	add.s64 	%rd2244, %rd2243, -2856998567947870208;
	xor.b64  	%rd2245, %rd2244, %rd2164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r921}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r922,%dummy}, %rd2245;
	}
	shf.l.wrap.b32 	%r923, %r922, %r921, 4;
	shf.l.wrap.b32 	%r924, %r921, %r922, 4;
	mov.b64 	%rd2246, {%r924, %r923};
	add.s64 	%rd2247, %rd2176, %rd2246;
	xor.b64  	%rd2248, %rd2061, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd2248;
	}
	shf.l.wrap.b32 	%r927, %r926, %r925, 21;
	shf.l.wrap.b32 	%r928, %r925, %r926, 21;
	mov.b64 	%rd2249, {%r928, %r927};
	add.s64 	%rd2250, %rd135, %rd2249;
	add.s64 	%rd2251, %rd2250, %rd2244;
	xor.b64  	%rd2252, %rd2251, %rd2246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r929,%dummy}, %rd2252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r930}, %rd2252;
	}
	shf.r.wrap.b32 	%r931, %r930, %r929, 5;
	shf.r.wrap.b32 	%r932, %r929, %r930, 5;
	mov.b64 	%rd2253, {%r932, %r931};
	add.s64 	%rd2254, %rd2247, %rd2253;
	xor.b64  	%rd2255, %rd2249, %rd2254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd2255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd2255;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 18;
	shf.r.wrap.b32 	%r936, %r933, %r934, 18;
	mov.b64 	%rd2256, {%r936, %r935};
	not.b64 	%rd2257, %rd2251;
	not.b64 	%rd2258, %rd2256;
	and.b64  	%rd2259, %rd2257, %rd2258;
	not.b64 	%rd2260, %rd2254;
	and.b64  	%rd2261, %rd2259, %rd2260;
	and.b64  	%rd2262, %rd2256, %rd2257;
	and.b64  	%rd2263, %rd2262, %rd2254;
	or.b64  	%rd2264, %rd2263, %rd2261;
	and.b64  	%rd2265, %rd2254, %rd2258;
	and.b64  	%rd2266, %rd2265, %rd2251;
	or.b64  	%rd2267, %rd2264, %rd2266;
	and.b64  	%rd2268, %rd2256, %rd2251;
	and.b64  	%rd2269, %rd2268, %rd2260;
	or.b64  	%rd2270, %rd2267, %rd2269;
	xor.b64  	%rd2271, %rd2270, %rd2253;
	and.b64  	%rd2272, %rd2259, %rd2254;
	and.b64  	%rd2273, %rd2257, %rd2260;
	and.b64  	%rd2274, %rd2273, %rd2256;
	or.b64  	%rd2275, %rd2274, %rd2272;
	and.b64  	%rd2276, %rd2251, %rd2258;
	and.b64  	%rd2277, %rd2276, %rd2260;
	or.b64  	%rd2278, %rd2275, %rd2277;
	and.b64  	%rd2279, %rd2268, %rd2254;
	or.b64  	%rd2280, %rd2278, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2271;
	add.s64 	%rd2282, %rd10, %rd2100;
	add.s64 	%rd2283, %rd2282, %rd2134;
	xor.b64  	%rd2284, %rd2283, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r938,%dummy}, %rd2284;
	}
	shf.l.wrap.b32 	%r939, %r938, %r937, 4;
	shf.l.wrap.b32 	%r940, %r937, %r938, 4;
	mov.b64 	%rd2285, {%r940, %r939};
	add.s64 	%rd2286, %rd2059, %rd2285;
	xor.b64  	%rd2287, %rd2100, %rd2286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r941}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd2287;
	}
	shf.l.wrap.b32 	%r943, %r942, %r941, 21;
	shf.l.wrap.b32 	%r944, %r941, %r942, 21;
	mov.b64 	%rd2288, {%r944, %r943};
	add.s64 	%rd2289, %rd2288, %rd2283;
	add.s64 	%rd2290, %rd2289, -4972871168744972288;
	xor.b64  	%rd2291, %rd2290, %rd2285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r945,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r946}, %rd2291;
	}
	shf.r.wrap.b32 	%r947, %r946, %r945, 5;
	shf.r.wrap.b32 	%r948, %r945, %r946, 5;
	mov.b64 	%rd2292, {%r948, %r947};
	add.s64 	%rd2293, %rd2286, %rd2292;
	xor.b64  	%rd2294, %rd2288, %rd2293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd2294;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 18;
	shf.r.wrap.b32 	%r952, %r949, %r950, 18;
	mov.b64 	%rd2295, {%r952, %r951};
	not.b64 	%rd2296, %rd2290;
	not.b64 	%rd2297, %rd2295;
	and.b64  	%rd2298, %rd2296, %rd2297;
	not.b64 	%rd2299, %rd2293;
	and.b64  	%rd2300, %rd2298, %rd2299;
	and.b64  	%rd2301, %rd2295, %rd2296;
	and.b64  	%rd2302, %rd2301, %rd2293;
	or.b64  	%rd2303, %rd2302, %rd2300;
	and.b64  	%rd2304, %rd2293, %rd2297;
	and.b64  	%rd2305, %rd2304, %rd2290;
	or.b64  	%rd2306, %rd2303, %rd2305;
	and.b64  	%rd2307, %rd2295, %rd2290;
	and.b64  	%rd2308, %rd2307, %rd2299;
	or.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2292;
	and.b64  	%rd2311, %rd2298, %rd2293;
	and.b64  	%rd2312, %rd2296, %rd2299;
	and.b64  	%rd2313, %rd2312, %rd2295;
	or.b64  	%rd2314, %rd2313, %rd2311;
	and.b64  	%rd2315, %rd2290, %rd2297;
	and.b64  	%rd2316, %rd2315, %rd2299;
	or.b64  	%rd2317, %rd2314, %rd2316;
	and.b64  	%rd2318, %rd2307, %rd2293;
	or.b64  	%rd2319, %rd2317, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2310;
	add.s64 	%rd2321, %rd2139, %rd2173;
	add.s64 	%rd2322, %rd2321, -3341658112243943424;
	xor.b64  	%rd2323, %rd2322, %rd2086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r954,%dummy}, %rd2323;
	}
	shf.l.wrap.b32 	%r955, %r954, %r953, 4;
	shf.l.wrap.b32 	%r956, %r953, %r954, 4;
	mov.b64 	%rd2324, {%r956, %r955};
	add.s64 	%rd2325, %rd2098, %rd2324;
	xor.b64  	%rd2326, %rd2139, %rd2325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r957}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd2326;
	}
	shf.l.wrap.b32 	%r959, %r958, %r957, 21;
	shf.l.wrap.b32 	%r960, %r957, %r958, 21;
	mov.b64 	%rd2327, {%r960, %r959};
	add.s64 	%rd2328, %rd52, %rd2327;
	add.s64 	%rd2329, %rd2328, %rd2322;
	xor.b64  	%rd2330, %rd2329, %rd2324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r961,%dummy}, %rd2330;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r962}, %rd2330;
	}
	shf.r.wrap.b32 	%r963, %r962, %r961, 5;
	shf.r.wrap.b32 	%r964, %r961, %r962, 5;
	mov.b64 	%rd2331, {%r964, %r963};
	add.s64 	%rd2332, %rd2325, %rd2331;
	xor.b64  	%rd2333, %rd2327, %rd2332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd2333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd2333;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 18;
	shf.r.wrap.b32 	%r968, %r965, %r966, 18;
	mov.b64 	%rd2334, {%r968, %r967};
	not.b64 	%rd2335, %rd2329;
	not.b64 	%rd2336, %rd2334;
	and.b64  	%rd2337, %rd2335, %rd2336;
	not.b64 	%rd2338, %rd2332;
	and.b64  	%rd2339, %rd2337, %rd2338;
	and.b64  	%rd2340, %rd2334, %rd2335;
	and.b64  	%rd2341, %rd2340, %rd2332;
	or.b64  	%rd2342, %rd2341, %rd2339;
	and.b64  	%rd2343, %rd2332, %rd2336;
	and.b64  	%rd2344, %rd2343, %rd2329;
	or.b64  	%rd2345, %rd2342, %rd2344;
	and.b64  	%rd2346, %rd2334, %rd2329;
	and.b64  	%rd2347, %rd2346, %rd2338;
	or.b64  	%rd2348, %rd2345, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2331;
	and.b64  	%rd2350, %rd2337, %rd2332;
	and.b64  	%rd2351, %rd2335, %rd2338;
	and.b64  	%rd2352, %rd2351, %rd2334;
	or.b64  	%rd2353, %rd2352, %rd2350;
	and.b64  	%rd2354, %rd2329, %rd2336;
	and.b64  	%rd2355, %rd2354, %rd2338;
	or.b64  	%rd2356, %rd2353, %rd2355;
	and.b64  	%rd2357, %rd2346, %rd2332;
	or.b64  	%rd2358, %rd2356, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2349;
	add.s64 	%rd2360, %rd18, %rd2256;
	add.s64 	%rd2361, %rd2360, %rd2212;
	xor.b64  	%rd2362, %rd2361, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r969}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r970,%dummy}, %rd2362;
	}
	shf.l.wrap.b32 	%r971, %r970, %r969, 4;
	shf.l.wrap.b32 	%r972, %r969, %r970, 4;
	mov.b64 	%rd2363, {%r972, %r971};
	add.s64 	%rd2364, %rd2293, %rd2363;
	xor.b64  	%rd2365, %rd2256, %rd2364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r973}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd2365;
	}
	shf.l.wrap.b32 	%r975, %r974, %r973, 21;
	shf.l.wrap.b32 	%r976, %r973, %r974, 21;
	mov.b64 	%rd2366, {%r976, %r975};
	add.s64 	%rd2367, %rd94, %rd2366;
	add.s64 	%rd2368, %rd2367, %rd2361;
	xor.b64  	%rd2369, %rd2368, %rd2363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r977,%dummy}, %rd2369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r978}, %rd2369;
	}
	shf.r.wrap.b32 	%r979, %r978, %r977, 5;
	shf.r.wrap.b32 	%r980, %r977, %r978, 5;
	mov.b64 	%rd2370, {%r980, %r979};
	add.s64 	%rd2371, %rd2364, %rd2370;
	xor.b64  	%rd2372, %rd2366, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r981,%dummy}, %rd2372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r982}, %rd2372;
	}
	shf.r.wrap.b32 	%r983, %r982, %r981, 18;
	shf.r.wrap.b32 	%r984, %r981, %r982, 18;
	mov.b64 	%rd2373, {%r984, %r983};
	not.b64 	%rd2374, %rd2368;
	not.b64 	%rd2375, %rd2373;
	and.b64  	%rd2376, %rd2374, %rd2375;
	not.b64 	%rd2377, %rd2371;
	and.b64  	%rd2378, %rd2376, %rd2377;
	and.b64  	%rd2379, %rd2373, %rd2374;
	and.b64  	%rd2380, %rd2379, %rd2371;
	or.b64  	%rd2381, %rd2380, %rd2378;
	and.b64  	%rd2382, %rd2371, %rd2375;
	and.b64  	%rd2383, %rd2382, %rd2368;
	or.b64  	%rd2384, %rd2381, %rd2383;
	and.b64  	%rd2385, %rd2373, %rd2368;
	and.b64  	%rd2386, %rd2385, %rd2377;
	or.b64  	%rd2387, %rd2384, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd2370;
	and.b64  	%rd2389, %rd2376, %rd2371;
	and.b64  	%rd2390, %rd2374, %rd2377;
	and.b64  	%rd2391, %rd2390, %rd2373;
	or.b64  	%rd2392, %rd2391, %rd2389;
	and.b64  	%rd2393, %rd2368, %rd2375;
	and.b64  	%rd2394, %rd2393, %rd2377;
	or.b64  	%rd2395, %rd2392, %rd2394;
	and.b64  	%rd2396, %rd2385, %rd2371;
	or.b64  	%rd2397, %rd2395, %rd2396;
	xor.b64  	%rd2398, %rd2397, %rd2388;
	add.s64 	%rd2399, %rd102, %rd2295;
	add.s64 	%rd2400, %rd2399, %rd2251;
	xor.b64  	%rd2401, %rd2400, %rd2242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd2401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r986,%dummy}, %rd2401;
	}
	shf.l.wrap.b32 	%r987, %r986, %r985, 4;
	shf.l.wrap.b32 	%r988, %r985, %r986, 4;
	mov.b64 	%rd2402, {%r988, %r987};
	add.s64 	%rd2403, %rd2332, %rd2402;
	xor.b64  	%rd2404, %rd2295, %rd2403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r989}, %rd2404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd2404;
	}
	shf.l.wrap.b32 	%r991, %r990, %r989, 21;
	shf.l.wrap.b32 	%r992, %r989, %r990, 21;
	mov.b64 	%rd2405, {%r992, %r991};
	add.s64 	%rd2406, %rd2405, %rd2400;
	add.s64 	%rd2407, %rd2406, 7194923001510760043;
	xor.b64  	%rd2408, %rd2407, %rd2402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r993,%dummy}, %rd2408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r994}, %rd2408;
	}
	shf.r.wrap.b32 	%r995, %r994, %r993, 5;
	shf.r.wrap.b32 	%r996, %r993, %r994, 5;
	mov.b64 	%rd2409, {%r996, %r995};
	add.s64 	%rd2410, %rd2403, %rd2409;
	xor.b64  	%rd2411, %rd2405, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd2411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd2411;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 18;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 18;
	mov.b64 	%rd2412, {%r1000, %r999};
	not.b64 	%rd2413, %rd2407;
	not.b64 	%rd2414, %rd2412;
	and.b64  	%rd2415, %rd2413, %rd2414;
	not.b64 	%rd2416, %rd2410;
	and.b64  	%rd2417, %rd2415, %rd2416;
	and.b64  	%rd2418, %rd2412, %rd2413;
	and.b64  	%rd2419, %rd2418, %rd2410;
	or.b64  	%rd2420, %rd2419, %rd2417;
	and.b64  	%rd2421, %rd2410, %rd2414;
	and.b64  	%rd2422, %rd2421, %rd2407;
	or.b64  	%rd2423, %rd2420, %rd2422;
	and.b64  	%rd2424, %rd2412, %rd2407;
	and.b64  	%rd2425, %rd2424, %rd2416;
	or.b64  	%rd2426, %rd2423, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2409;
	and.b64  	%rd2428, %rd2415, %rd2410;
	and.b64  	%rd2429, %rd2413, %rd2416;
	and.b64  	%rd2430, %rd2429, %rd2412;
	or.b64  	%rd2431, %rd2430, %rd2428;
	and.b64  	%rd2432, %rd2407, %rd2414;
	and.b64  	%rd2433, %rd2432, %rd2416;
	or.b64  	%rd2434, %rd2431, %rd2433;
	and.b64  	%rd2435, %rd2424, %rd2410;
	or.b64  	%rd2436, %rd2434, %rd2435;
	xor.b64  	%rd2437, %rd2436, %rd2427;
	add.s64 	%rd2438, %rd143, %rd2334;
	add.s64 	%rd2439, %rd2438, %rd2290;
	xor.b64  	%rd2440, %rd2439, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1001}, %rd2440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1002,%dummy}, %rd2440;
	}
	shf.l.wrap.b32 	%r1003, %r1002, %r1001, 4;
	shf.l.wrap.b32 	%r1004, %r1001, %r1002, 4;
	mov.b64 	%rd2441, {%r1004, %r1003};
	add.s64 	%rd2442, %rd2215, %rd2441;
	xor.b64  	%rd2443, %rd2334, %rd2442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1005}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd2443;
	}
	shf.l.wrap.b32 	%r1007, %r1006, %r1005, 21;
	shf.l.wrap.b32 	%r1008, %r1005, %r1006, 21;
	mov.b64 	%rd2444, {%r1008, %r1007};
	add.s64 	%rd2445, %rd2444, %rd2439;
	add.s64 	%rd2446, %rd2445, 5987067145339136795;
	xor.b64  	%rd2447, %rd2446, %rd2441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd2447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd2447;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 5;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 5;
	mov.b64 	%rd2448, {%r1012, %r1011};
	add.s64 	%rd2449, %rd2442, %rd2448;
	xor.b64  	%rd2450, %rd2444, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1013,%dummy}, %rd2450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1014}, %rd2450;
	}
	shf.r.wrap.b32 	%r1015, %r1014, %r1013, 18;
	shf.r.wrap.b32 	%r1016, %r1013, %r1014, 18;
	mov.b64 	%rd2451, {%r1016, %r1015};
	not.b64 	%rd2452, %rd2446;
	not.b64 	%rd2453, %rd2451;
	and.b64  	%rd2454, %rd2452, %rd2453;
	not.b64 	%rd2455, %rd2449;
	and.b64  	%rd2456, %rd2454, %rd2455;
	and.b64  	%rd2457, %rd2451, %rd2452;
	and.b64  	%rd2458, %rd2457, %rd2449;
	or.b64  	%rd2459, %rd2458, %rd2456;
	and.b64  	%rd2460, %rd2449, %rd2453;
	and.b64  	%rd2461, %rd2460, %rd2446;
	or.b64  	%rd2462, %rd2459, %rd2461;
	and.b64  	%rd2463, %rd2451, %rd2446;
	and.b64  	%rd2464, %rd2463, %rd2455;
	or.b64  	%rd2465, %rd2462, %rd2464;
	xor.b64  	%rd2466, %rd2465, %rd2448;
	and.b64  	%rd2467, %rd2454, %rd2449;
	and.b64  	%rd2468, %rd2452, %rd2455;
	and.b64  	%rd2469, %rd2468, %rd2451;
	or.b64  	%rd2470, %rd2469, %rd2467;
	and.b64  	%rd2471, %rd2446, %rd2453;
	and.b64  	%rd2472, %rd2471, %rd2455;
	or.b64  	%rd2473, %rd2470, %rd2472;
	and.b64  	%rd2474, %rd2463, %rd2449;
	or.b64  	%rd2475, %rd2473, %rd2474;
	xor.b64  	%rd2476, %rd2475, %rd2466;
	add.s64 	%rd2477, %rd2217, %rd2329;
	add.s64 	%rd2478, %rd2477, 3450974313248867902;
	xor.b64  	%rd2479, %rd2478, %rd2320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd2479;
	}
	shf.l.wrap.b32 	%r1019, %r1018, %r1017, 4;
	shf.l.wrap.b32 	%r1020, %r1017, %r1018, 4;
	mov.b64 	%rd2480, {%r1020, %r1019};
	add.s64 	%rd2481, %rd2254, %rd2480;
	xor.b64  	%rd2482, %rd2217, %rd2481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1021}, %rd2482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd2482;
	}
	shf.l.wrap.b32 	%r1023, %r1022, %r1021, 21;
	shf.l.wrap.b32 	%r1024, %r1021, %r1022, 21;
	mov.b64 	%rd2483, {%r1024, %r1023};
	add.s64 	%rd2484, %rd60, %rd2483;
	add.s64 	%rd2485, %rd2484, %rd2478;
	xor.b64  	%rd2486, %rd2485, %rd2480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1025,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1026}, %rd2486;
	}
	shf.r.wrap.b32 	%r1027, %r1026, %r1025, 5;
	shf.r.wrap.b32 	%r1028, %r1025, %r1026, 5;
	mov.b64 	%rd2487, {%r1028, %r1027};
	add.s64 	%rd2488, %rd2481, %rd2487;
	xor.b64  	%rd2489, %rd2483, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1029,%dummy}, %rd2489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1030}, %rd2489;
	}
	shf.r.wrap.b32 	%r1031, %r1030, %r1029, 18;
	shf.r.wrap.b32 	%r1032, %r1029, %r1030, 18;
	mov.b64 	%rd2490, {%r1032, %r1031};
	not.b64 	%rd2491, %rd2485;
	not.b64 	%rd2492, %rd2490;
	and.b64  	%rd2493, %rd2491, %rd2492;
	not.b64 	%rd2494, %rd2488;
	and.b64  	%rd2495, %rd2493, %rd2494;
	and.b64  	%rd2496, %rd2490, %rd2491;
	and.b64  	%rd2497, %rd2496, %rd2488;
	or.b64  	%rd2498, %rd2497, %rd2495;
	and.b64  	%rd2499, %rd2488, %rd2492;
	and.b64  	%rd2500, %rd2499, %rd2485;
	or.b64  	%rd2501, %rd2498, %rd2500;
	and.b64  	%rd2502, %rd2490, %rd2485;
	and.b64  	%rd2503, %rd2502, %rd2494;
	or.b64  	%rd2504, %rd2501, %rd2503;
	xor.b64  	%rd2505, %rd2504, %rd2487;
	and.b64  	%rd2506, %rd2493, %rd2488;
	and.b64  	%rd2507, %rd2491, %rd2494;
	and.b64  	%rd2508, %rd2507, %rd2490;
	or.b64  	%rd2509, %rd2508, %rd2506;
	and.b64  	%rd2510, %rd2485, %rd2492;
	and.b64  	%rd2511, %rd2510, %rd2494;
	or.b64  	%rd2512, %rd2509, %rd2511;
	and.b64  	%rd2513, %rd2502, %rd2488;
	or.b64  	%rd2514, %rd2512, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2505;
	add.s64 	%rd2516, %rd2490, %rd2368;
	add.s64 	%rd2517, %rd2516, 7194923001510760043;
	xor.b64  	%rd2518, %rd2517, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd2518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1034,%dummy}, %rd2518;
	}
	shf.l.wrap.b32 	%r1035, %r1034, %r1033, 4;
	shf.l.wrap.b32 	%r1036, %r1033, %r1034, 4;
	mov.b64 	%rd2519, {%r1036, %r1035};
	add.s64 	%rd2520, %rd2449, %rd2519;
	xor.b64  	%rd2521, %rd2490, %rd2520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1037}, %rd2521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd2521;
	}
	shf.l.wrap.b32 	%r1039, %r1038, %r1037, 21;
	shf.l.wrap.b32 	%r1040, %r1037, %r1038, 21;
	mov.b64 	%rd2522, {%r1040, %r1039};
	add.s64 	%rd2523, %rd143, %rd2522;
	add.s64 	%rd2524, %rd2523, %rd2517;
	xor.b64  	%rd2525, %rd2524, %rd2519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1041,%dummy}, %rd2525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1042}, %rd2525;
	}
	shf.r.wrap.b32 	%r1043, %r1042, %r1041, 5;
	shf.r.wrap.b32 	%r1044, %r1041, %r1042, 5;
	mov.b64 	%rd2526, {%r1044, %r1043};
	add.s64 	%rd2527, %rd2520, %rd2526;
	xor.b64  	%rd2528, %rd2522, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd2528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd2528;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 18;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 18;
	mov.b64 	%rd2529, {%r1048, %r1047};
	not.b64 	%rd2530, %rd2524;
	not.b64 	%rd2531, %rd2529;
	and.b64  	%rd2532, %rd2530, %rd2531;
	not.b64 	%rd2533, %rd2527;
	and.b64  	%rd2534, %rd2532, %rd2533;
	and.b64  	%rd2535, %rd2529, %rd2530;
	and.b64  	%rd2536, %rd2535, %rd2527;
	or.b64  	%rd2537, %rd2536, %rd2534;
	and.b64  	%rd2538, %rd2527, %rd2531;
	and.b64  	%rd2539, %rd2538, %rd2524;
	or.b64  	%rd2540, %rd2537, %rd2539;
	and.b64  	%rd2541, %rd2529, %rd2524;
	and.b64  	%rd2542, %rd2541, %rd2533;
	or.b64  	%rd2543, %rd2540, %rd2542;
	xor.b64  	%rd2544, %rd2543, %rd2526;
	and.b64  	%rd2545, %rd2532, %rd2527;
	and.b64  	%rd2546, %rd2530, %rd2533;
	and.b64  	%rd2547, %rd2546, %rd2529;
	or.b64  	%rd2548, %rd2547, %rd2545;
	and.b64  	%rd2549, %rd2524, %rd2531;
	and.b64  	%rd2550, %rd2549, %rd2533;
	or.b64  	%rd2551, %rd2548, %rd2550;
	and.b64  	%rd2552, %rd2541, %rd2527;
	or.b64  	%rd2553, %rd2551, %rd2552;
	xor.b64  	%rd2554, %rd2553, %rd2544;
	add.s64 	%rd2555, %rd2373, %rd2407;
	add.s64 	%rd2556, %rd2555, -3341658112243943424;
	xor.b64  	%rd2557, %rd2556, %rd2476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1049}, %rd2557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd2557;
	}
	shf.l.wrap.b32 	%r1051, %r1050, %r1049, 4;
	shf.l.wrap.b32 	%r1052, %r1049, %r1050, 4;
	mov.b64 	%rd2558, {%r1052, %r1051};
	add.s64 	%rd2559, %rd2488, %rd2558;
	xor.b64  	%rd2560, %rd2373, %rd2559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd2560;
	}
	shf.l.wrap.b32 	%r1055, %r1054, %r1053, 21;
	shf.l.wrap.b32 	%r1056, %r1053, %r1054, 21;
	mov.b64 	%rd2561, {%r1056, %r1055};
	add.s64 	%rd2562, %rd2561, %rd2556;
	add.s64 	%rd2563, %rd2562, -2856998567947870208;
	xor.b64  	%rd2564, %rd2563, %rd2558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd2564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1058}, %rd2564;
	}
	shf.r.wrap.b32 	%r1059, %r1058, %r1057, 5;
	shf.r.wrap.b32 	%r1060, %r1057, %r1058, 5;
	mov.b64 	%rd2565, {%r1060, %r1059};
	add.s64 	%rd2566, %rd2559, %rd2565;
	xor.b64  	%rd2567, %rd2561, %rd2566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1061,%dummy}, %rd2567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1062}, %rd2567;
	}
	shf.r.wrap.b32 	%r1063, %r1062, %r1061, 18;
	shf.r.wrap.b32 	%r1064, %r1061, %r1062, 18;
	mov.b64 	%rd2568, {%r1064, %r1063};
	not.b64 	%rd2569, %rd2563;
	not.b64 	%rd2570, %rd2568;
	and.b64  	%rd2571, %rd2569, %rd2570;
	not.b64 	%rd2572, %rd2566;
	and.b64  	%rd2573, %rd2571, %rd2572;
	and.b64  	%rd2574, %rd2568, %rd2569;
	and.b64  	%rd2575, %rd2574, %rd2566;
	or.b64  	%rd2576, %rd2575, %rd2573;
	and.b64  	%rd2577, %rd2566, %rd2570;
	and.b64  	%rd2578, %rd2577, %rd2563;
	or.b64  	%rd2579, %rd2576, %rd2578;
	and.b64  	%rd2580, %rd2568, %rd2563;
	and.b64  	%rd2581, %rd2580, %rd2572;
	or.b64  	%rd2582, %rd2579, %rd2581;
	xor.b64  	%rd2583, %rd2582, %rd2565;
	and.b64  	%rd2584, %rd2571, %rd2566;
	and.b64  	%rd2585, %rd2569, %rd2572;
	and.b64  	%rd2586, %rd2585, %rd2568;
	or.b64  	%rd2587, %rd2586, %rd2584;
	and.b64  	%rd2588, %rd2563, %rd2570;
	and.b64  	%rd2589, %rd2588, %rd2572;
	or.b64  	%rd2590, %rd2587, %rd2589;
	and.b64  	%rd2591, %rd2580, %rd2566;
	or.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2592, %rd2583;
	add.s64 	%rd2594, %rd52, %rd2412;
	add.s64 	%rd2595, %rd2594, %rd2446;
	xor.b64  	%rd2596, %rd2595, %rd2515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd2596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd2596;
	}
	shf.l.wrap.b32 	%r1067, %r1066, %r1065, 4;
	shf.l.wrap.b32 	%r1068, %r1065, %r1066, 4;
	mov.b64 	%rd2597, {%r1068, %r1067};
	add.s64 	%rd2598, %rd2371, %rd2597;
	xor.b64  	%rd2599, %rd2412, %rd2598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1069}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd2599;
	}
	shf.l.wrap.b32 	%r1071, %r1070, %r1069, 21;
	shf.l.wrap.b32 	%r1072, %r1069, %r1070, 21;
	mov.b64 	%rd2600, {%r1072, %r1071};
	add.s64 	%rd2601, %rd2600, %rd2595;
	add.s64 	%rd2602, %rd2601, -7446784132049864704;
	xor.b64  	%rd2603, %rd2602, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1073,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1074}, %rd2603;
	}
	shf.r.wrap.b32 	%r1075, %r1074, %r1073, 5;
	shf.r.wrap.b32 	%r1076, %r1073, %r1074, 5;
	mov.b64 	%rd2604, {%r1076, %r1075};
	add.s64 	%rd2605, %rd2598, %rd2604;
	xor.b64  	%rd2606, %rd2600, %rd2605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1077,%dummy}, %rd2606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1078}, %rd2606;
	}
	shf.r.wrap.b32 	%r1079, %r1078, %r1077, 18;
	shf.r.wrap.b32 	%r1080, %r1077, %r1078, 18;
	mov.b64 	%rd2607, {%r1080, %r1079};
	not.b64 	%rd2608, %rd2602;
	not.b64 	%rd2609, %rd2607;
	and.b64  	%rd2610, %rd2608, %rd2609;
	not.b64 	%rd2611, %rd2605;
	and.b64  	%rd2612, %rd2610, %rd2611;
	and.b64  	%rd2613, %rd2607, %rd2608;
	and.b64  	%rd2614, %rd2613, %rd2605;
	or.b64  	%rd2615, %rd2614, %rd2612;
	and.b64  	%rd2616, %rd2605, %rd2609;
	and.b64  	%rd2617, %rd2616, %rd2602;
	or.b64  	%rd2618, %rd2615, %rd2617;
	and.b64  	%rd2619, %rd2607, %rd2602;
	and.b64  	%rd2620, %rd2619, %rd2611;
	or.b64  	%rd2621, %rd2618, %rd2620;
	xor.b64  	%rd2622, %rd2621, %rd2604;
	and.b64  	%rd2623, %rd2610, %rd2605;
	and.b64  	%rd2624, %rd2608, %rd2611;
	and.b64  	%rd2625, %rd2624, %rd2607;
	or.b64  	%rd2626, %rd2625, %rd2623;
	and.b64  	%rd2627, %rd2602, %rd2609;
	and.b64  	%rd2628, %rd2627, %rd2611;
	or.b64  	%rd2629, %rd2626, %rd2628;
	and.b64  	%rd2630, %rd2619, %rd2605;
	or.b64  	%rd2631, %rd2629, %rd2630;
	xor.b64  	%rd2632, %rd2631, %rd2622;
	add.s64 	%rd2633, %rd2451, %rd2485;
	add.s64 	%rd2634, %rd2633, 5987067145339136795;
	xor.b64  	%rd2635, %rd2634, %rd2398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd2635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd2635;
	}
	shf.l.wrap.b32 	%r1083, %r1082, %r1081, 4;
	shf.l.wrap.b32 	%r1084, %r1081, %r1082, 4;
	mov.b64 	%rd2636, {%r1084, %r1083};
	add.s64 	%rd2637, %rd2410, %rd2636;
	xor.b64  	%rd2638, %rd2451, %rd2637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1085}, %rd2638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1086,%dummy}, %rd2638;
	}
	shf.l.wrap.b32 	%r1087, %r1086, %r1085, 21;
	shf.l.wrap.b32 	%r1088, %r1085, %r1086, 21;
	mov.b64 	%rd2639, {%r1088, %r1087};
	add.s64 	%rd2640, %rd18, %rd2639;
	add.s64 	%rd2641, %rd2640, %rd2634;
	xor.b64  	%rd2642, %rd2641, %rd2636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1089,%dummy}, %rd2642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1090}, %rd2642;
	}
	shf.r.wrap.b32 	%r1091, %r1090, %r1089, 5;
	shf.r.wrap.b32 	%r1092, %r1089, %r1090, 5;
	mov.b64 	%rd2643, {%r1092, %r1091};
	add.s64 	%rd2644, %rd2637, %rd2643;
	xor.b64  	%rd2645, %rd2639, %rd2644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd2645;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 18;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 18;
	mov.b64 	%rd2646, {%r1096, %r1095};
	not.b64 	%rd2647, %rd2641;
	not.b64 	%rd2648, %rd2646;
	and.b64  	%rd2649, %rd2647, %rd2648;
	not.b64 	%rd2650, %rd2644;
	and.b64  	%rd2651, %rd2649, %rd2650;
	and.b64  	%rd2652, %rd2646, %rd2647;
	and.b64  	%rd2653, %rd2652, %rd2644;
	or.b64  	%rd2654, %rd2653, %rd2651;
	and.b64  	%rd2655, %rd2644, %rd2648;
	and.b64  	%rd2656, %rd2655, %rd2641;
	or.b64  	%rd2657, %rd2654, %rd2656;
	and.b64  	%rd2658, %rd2646, %rd2641;
	and.b64  	%rd2659, %rd2658, %rd2650;
	or.b64  	%rd2660, %rd2657, %rd2659;
	xor.b64  	%rd2661, %rd2660, %rd2643;
	and.b64  	%rd2662, %rd2649, %rd2644;
	and.b64  	%rd2663, %rd2647, %rd2650;
	and.b64  	%rd2664, %rd2663, %rd2646;
	or.b64  	%rd2665, %rd2664, %rd2662;
	and.b64  	%rd2666, %rd2641, %rd2648;
	and.b64  	%rd2667, %rd2666, %rd2650;
	or.b64  	%rd2668, %rd2665, %rd2667;
	and.b64  	%rd2669, %rd2658, %rd2644;
	or.b64  	%rd2670, %rd2668, %rd2669;
	xor.b64  	%rd2671, %rd2670, %rd2661;
	add.s64 	%rd2672, %rd60, %rd2568;
	add.s64 	%rd2673, %rd2672, %rd2524;
	xor.b64  	%rd2674, %rd2673, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1097}, %rd2674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd2674;
	}
	shf.l.wrap.b32 	%r1099, %r1098, %r1097, 4;
	shf.l.wrap.b32 	%r1100, %r1097, %r1098, 4;
	mov.b64 	%rd2675, {%r1100, %r1099};
	add.s64 	%rd2676, %rd2605, %rd2675;
	xor.b64  	%rd2677, %rd2568, %rd2676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1101}, %rd2677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1102,%dummy}, %rd2677;
	}
	shf.l.wrap.b32 	%r1103, %r1102, %r1101, 21;
	shf.l.wrap.b32 	%r1104, %r1101, %r1102, 21;
	mov.b64 	%rd2678, {%r1104, %r1103};
	add.s64 	%rd2679, %rd2678, %rd2673;
	add.s64 	%rd2680, %rd2679, -4972871168744972288;
	xor.b64  	%rd2681, %rd2680, %rd2675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd2681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd2681;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 5;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 5;
	mov.b64 	%rd2682, {%r1108, %r1107};
	add.s64 	%rd2683, %rd2676, %rd2682;
	xor.b64  	%rd2684, %rd2678, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1109,%dummy}, %rd2684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1110}, %rd2684;
	}
	shf.r.wrap.b32 	%r1111, %r1110, %r1109, 18;
	shf.r.wrap.b32 	%r1112, %r1109, %r1110, 18;
	mov.b64 	%rd2685, {%r1112, %r1111};
	not.b64 	%rd2686, %rd2680;
	not.b64 	%rd2687, %rd2685;
	and.b64  	%rd2688, %rd2686, %rd2687;
	not.b64 	%rd2689, %rd2683;
	and.b64  	%rd2690, %rd2688, %rd2689;
	and.b64  	%rd2691, %rd2685, %rd2686;
	and.b64  	%rd2692, %rd2691, %rd2683;
	or.b64  	%rd2693, %rd2692, %rd2690;
	and.b64  	%rd2694, %rd2683, %rd2687;
	and.b64  	%rd2695, %rd2694, %rd2680;
	or.b64  	%rd2696, %rd2693, %rd2695;
	and.b64  	%rd2697, %rd2685, %rd2680;
	and.b64  	%rd2698, %rd2697, %rd2689;
	or.b64  	%rd2699, %rd2696, %rd2698;
	xor.b64  	%rd2700, %rd2699, %rd2682;
	and.b64  	%rd2701, %rd2688, %rd2683;
	and.b64  	%rd2702, %rd2686, %rd2689;
	and.b64  	%rd2703, %rd2702, %rd2685;
	or.b64  	%rd2704, %rd2703, %rd2701;
	and.b64  	%rd2705, %rd2680, %rd2687;
	and.b64  	%rd2706, %rd2705, %rd2689;
	or.b64  	%rd2707, %rd2704, %rd2706;
	and.b64  	%rd2708, %rd2697, %rd2683;
	or.b64  	%rd2709, %rd2707, %rd2708;
	xor.b64  	%rd2710, %rd2709, %rd2700;
	add.s64 	%rd2711, %rd135, %rd2607;
	add.s64 	%rd2712, %rd2711, %rd2563;
	xor.b64  	%rd2713, %rd2712, %rd2554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1113}, %rd2713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd2713;
	}
	shf.l.wrap.b32 	%r1115, %r1114, %r1113, 4;
	shf.l.wrap.b32 	%r1116, %r1113, %r1114, 4;
	mov.b64 	%rd2714, {%r1116, %r1115};
	add.s64 	%rd2715, %rd2644, %rd2714;
	xor.b64  	%rd2716, %rd2607, %rd2715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd2716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd2716;
	}
	shf.l.wrap.b32 	%r1119, %r1118, %r1117, 21;
	shf.l.wrap.b32 	%r1120, %r1117, %r1118, 21;
	mov.b64 	%rd2717, {%r1120, %r1119};
	add.s64 	%rd2718, %rd2717, %rd2712;
	add.s64 	%rd2719, %rd2718, 7251808426145424871;
	xor.b64  	%rd2720, %rd2719, %rd2714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1121,%dummy}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1122}, %rd2720;
	}
	shf.r.wrap.b32 	%r1123, %r1122, %r1121, 5;
	shf.r.wrap.b32 	%r1124, %r1121, %r1122, 5;
	mov.b64 	%rd2721, {%r1124, %r1123};
	add.s64 	%rd2722, %rd2715, %rd2721;
	xor.b64  	%rd2723, %rd2717, %rd2722;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd2723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd2723;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 18;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 18;
	mov.b64 	%rd2724, {%r1128, %r1127};
	not.b64 	%rd2725, %rd2719;
	not.b64 	%rd2726, %rd2724;
	and.b64  	%rd2727, %rd2725, %rd2726;
	not.b64 	%rd2728, %rd2722;
	and.b64  	%rd2729, %rd2727, %rd2728;
	and.b64  	%rd2730, %rd2724, %rd2725;
	and.b64  	%rd2731, %rd2730, %rd2722;
	or.b64  	%rd2732, %rd2731, %rd2729;
	and.b64  	%rd2733, %rd2722, %rd2726;
	and.b64  	%rd2734, %rd2733, %rd2719;
	or.b64  	%rd2735, %rd2732, %rd2734;
	and.b64  	%rd2736, %rd2724, %rd2719;
	and.b64  	%rd2737, %rd2736, %rd2728;
	or.b64  	%rd2738, %rd2735, %rd2737;
	xor.b64  	%rd2739, %rd2738, %rd2721;
	and.b64  	%rd2740, %rd2727, %rd2722;
	and.b64  	%rd2741, %rd2725, %rd2728;
	and.b64  	%rd2742, %rd2741, %rd2724;
	or.b64  	%rd2743, %rd2742, %rd2740;
	and.b64  	%rd2744, %rd2719, %rd2726;
	and.b64  	%rd2745, %rd2744, %rd2728;
	or.b64  	%rd2746, %rd2743, %rd2745;
	and.b64  	%rd2747, %rd2736, %rd2722;
	or.b64  	%rd2748, %rd2746, %rd2747;
	xor.b64  	%rd2749, %rd2748, %rd2739;
	add.s64 	%rd2750, %rd102, %rd2646;
	add.s64 	%rd2751, %rd2750, %rd2602;
	xor.b64  	%rd2752, %rd2751, %rd2593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd2752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd2752;
	}
	shf.l.wrap.b32 	%r1131, %r1130, %r1129, 4;
	shf.l.wrap.b32 	%r1132, %r1129, %r1130, 4;
	mov.b64 	%rd2753, {%r1132, %r1131};
	add.s64 	%rd2754, %rd2527, %rd2753;
	xor.b64  	%rd2755, %rd2646, %rd2754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1133}, %rd2755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1134,%dummy}, %rd2755;
	}
	shf.l.wrap.b32 	%r1135, %r1134, %r1133, 21;
	shf.l.wrap.b32 	%r1136, %r1133, %r1134, 21;
	mov.b64 	%rd2756, {%r1136, %r1135};
	add.s64 	%rd2757, %rd10, %rd2756;
	add.s64 	%rd2758, %rd2757, %rd2751;
	xor.b64  	%rd2759, %rd2758, %rd2753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1137,%dummy}, %rd2759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1138}, %rd2759;
	}
	shf.r.wrap.b32 	%r1139, %r1138, %r1137, 5;
	shf.r.wrap.b32 	%r1140, %r1137, %r1138, 5;
	mov.b64 	%rd2760, {%r1140, %r1139};
	add.s64 	%rd2761, %rd2754, %rd2760;
	xor.b64  	%rd2762, %rd2756, %rd2761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd2762;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd2762;
	}
	shf.r.wrap.b32 	%r1143, %r1142, %r1141, 18;
	shf.r.wrap.b32 	%r1144, %r1141, %r1142, 18;
	mov.b64 	%rd2763, {%r1144, %r1143};
	not.b64 	%rd2764, %rd2758;
	not.b64 	%rd2765, %rd2763;
	and.b64  	%rd2766, %rd2764, %rd2765;
	not.b64 	%rd2767, %rd2761;
	and.b64  	%rd2768, %rd2766, %rd2767;
	and.b64  	%rd2769, %rd2763, %rd2764;
	and.b64  	%rd2770, %rd2769, %rd2761;
	or.b64  	%rd2771, %rd2770, %rd2768;
	and.b64  	%rd2772, %rd2761, %rd2765;
	and.b64  	%rd2773, %rd2772, %rd2758;
	or.b64  	%rd2774, %rd2771, %rd2773;
	and.b64  	%rd2775, %rd2763, %rd2758;
	and.b64  	%rd2776, %rd2775, %rd2767;
	or.b64  	%rd2777, %rd2774, %rd2776;
	xor.b64  	%rd2778, %rd2777, %rd2760;
	and.b64  	%rd2779, %rd2766, %rd2761;
	and.b64  	%rd2780, %rd2764, %rd2767;
	and.b64  	%rd2781, %rd2780, %rd2763;
	or.b64  	%rd2782, %rd2781, %rd2779;
	and.b64  	%rd2783, %rd2758, %rd2765;
	and.b64  	%rd2784, %rd2783, %rd2767;
	or.b64  	%rd2785, %rd2782, %rd2784;
	and.b64  	%rd2786, %rd2775, %rd2761;
	or.b64  	%rd2787, %rd2785, %rd2786;
	xor.b64  	%rd2788, %rd2787, %rd2778;
	add.s64 	%rd2789, %rd94, %rd2529;
	add.s64 	%rd2790, %rd2789, %rd2641;
	xor.b64  	%rd2791, %rd2790, %rd2632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd2791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd2791;
	}
	shf.l.wrap.b32 	%r1147, %r1146, %r1145, 4;
	shf.l.wrap.b32 	%r1148, %r1145, %r1146, 4;
	mov.b64 	%rd2792, {%r1148, %r1147};
	add.s64 	%rd2793, %rd2566, %rd2792;
	xor.b64  	%rd2794, %rd2529, %rd2793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd2794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1150,%dummy}, %rd2794;
	}
	shf.l.wrap.b32 	%r1151, %r1150, %r1149, 21;
	shf.l.wrap.b32 	%r1152, %r1149, %r1150, 21;
	mov.b64 	%rd2795, {%r1152, %r1151};
	add.s64 	%rd2796, %rd2795, %rd2790;
	add.s64 	%rd2797, %rd2796, 3450974313248867902;
	xor.b64  	%rd2798, %rd2797, %rd2792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd2798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd2798;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 5;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 5;
	mov.b64 	%rd2799, {%r1156, %r1155};
	add.s64 	%rd2800, %rd2793, %rd2799;
	xor.b64  	%rd2801, %rd2795, %rd2800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd2801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd2801;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 18;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 18;
	mov.b64 	%rd2802, {%r1160, %r1159};
	not.b64 	%rd2803, %rd2797;
	not.b64 	%rd2804, %rd2802;
	and.b64  	%rd2805, %rd2803, %rd2804;
	not.b64 	%rd2806, %rd2800;
	and.b64  	%rd2807, %rd2805, %rd2806;
	and.b64  	%rd2808, %rd2802, %rd2803;
	and.b64  	%rd2809, %rd2808, %rd2800;
	or.b64  	%rd2810, %rd2809, %rd2807;
	and.b64  	%rd2811, %rd2800, %rd2804;
	and.b64  	%rd2812, %rd2811, %rd2797;
	or.b64  	%rd2813, %rd2810, %rd2812;
	and.b64  	%rd2814, %rd2802, %rd2797;
	and.b64  	%rd2815, %rd2814, %rd2806;
	or.b64  	%rd2816, %rd2813, %rd2815;
	xor.b64  	%rd2817, %rd2816, %rd2799;
	and.b64  	%rd2818, %rd2805, %rd2800;
	and.b64  	%rd2819, %rd2803, %rd2806;
	and.b64  	%rd2820, %rd2819, %rd2802;
	or.b64  	%rd2821, %rd2820, %rd2818;
	and.b64  	%rd2822, %rd2797, %rd2804;
	and.b64  	%rd2823, %rd2822, %rd2806;
	or.b64  	%rd2824, %rd2821, %rd2823;
	and.b64  	%rd2825, %rd2814, %rd2800;
	or.b64  	%rd2826, %rd2824, %rd2825;
	xor.b64  	%rd2827, %rd2826, %rd2817;
	add.s64 	%rd2828, %rd60, %rd2802;
	add.s64 	%rd2829, %rd2828, %rd2680;
	xor.b64  	%rd2830, %rd2829, %rd2749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd2830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd2830;
	}
	shf.l.wrap.b32 	%r1163, %r1162, %r1161, 4;
	shf.l.wrap.b32 	%r1164, %r1161, %r1162, 4;
	mov.b64 	%rd2831, {%r1164, %r1163};
	add.s64 	%rd2832, %rd2761, %rd2831;
	xor.b64  	%rd2833, %rd2802, %rd2832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1165}, %rd2833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd2833;
	}
	shf.l.wrap.b32 	%r1167, %r1166, %r1165, 21;
	shf.l.wrap.b32 	%r1168, %r1165, %r1166, 21;
	mov.b64 	%rd2834, {%r1168, %r1167};
	add.s64 	%rd2835, %rd2834, %rd2829;
	add.s64 	%rd2836, %rd2835, 3450974313248867902;
	xor.b64  	%rd2837, %rd2836, %rd2831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1170}, %rd2837;
	}
	shf.r.wrap.b32 	%r1171, %r1170, %r1169, 5;
	shf.r.wrap.b32 	%r1172, %r1169, %r1170, 5;
	mov.b64 	%rd2838, {%r1172, %r1171};
	add.s64 	%rd2839, %rd2832, %rd2838;
	xor.b64  	%rd2840, %rd2834, %rd2839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd2840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd2840;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 18;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 18;
	mov.b64 	%rd2841, {%r1176, %r1175};
	not.b64 	%rd2842, %rd2836;
	not.b64 	%rd2843, %rd2841;
	and.b64  	%rd2844, %rd2842, %rd2843;
	not.b64 	%rd2845, %rd2839;
	and.b64  	%rd2846, %rd2844, %rd2845;
	and.b64  	%rd2847, %rd2841, %rd2842;
	and.b64  	%rd2848, %rd2847, %rd2839;
	or.b64  	%rd2849, %rd2848, %rd2846;
	and.b64  	%rd2850, %rd2839, %rd2843;
	and.b64  	%rd2851, %rd2850, %rd2836;
	or.b64  	%rd2852, %rd2849, %rd2851;
	and.b64  	%rd2853, %rd2841, %rd2836;
	and.b64  	%rd2854, %rd2853, %rd2845;
	or.b64  	%rd2855, %rd2852, %rd2854;
	xor.b64  	%rd2856, %rd2855, %rd2838;
	and.b64  	%rd2857, %rd2844, %rd2839;
	and.b64  	%rd2858, %rd2842, %rd2845;
	and.b64  	%rd2859, %rd2858, %rd2841;
	or.b64  	%rd2860, %rd2859, %rd2857;
	and.b64  	%rd2861, %rd2836, %rd2843;
	and.b64  	%rd2862, %rd2861, %rd2845;
	or.b64  	%rd2863, %rd2860, %rd2862;
	and.b64  	%rd2864, %rd2853, %rd2839;
	or.b64  	%rd2865, %rd2863, %rd2864;
	xor.b64  	%rd2866, %rd2865, %rd2856;
	add.s64 	%rd2867, %rd102, %rd2685;
	add.s64 	%rd2868, %rd2867, %rd2719;
	xor.b64  	%rd2869, %rd2868, %rd2788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd2869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd2869;
	}
	shf.l.wrap.b32 	%r1179, %r1178, %r1177, 4;
	shf.l.wrap.b32 	%r1180, %r1177, %r1178, 4;
	mov.b64 	%rd2870, {%r1180, %r1179};
	add.s64 	%rd2871, %rd2800, %rd2870;
	xor.b64  	%rd2872, %rd2685, %rd2871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd2872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1182,%dummy}, %rd2872;
	}
	shf.l.wrap.b32 	%r1183, %r1182, %r1181, 21;
	shf.l.wrap.b32 	%r1184, %r1181, %r1182, 21;
	mov.b64 	%rd2873, {%r1184, %r1183};
	add.s64 	%rd2874, %rd2873, %rd2868;
	add.s64 	%rd2875, %rd2874, 5987067145339136795;
	xor.b64  	%rd2876, %rd2875, %rd2870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd2876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd2876;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 5;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 5;
	mov.b64 	%rd2877, {%r1188, %r1187};
	add.s64 	%rd2878, %rd2871, %rd2877;
	xor.b64  	%rd2879, %rd2873, %rd2878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd2879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd2879;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 18;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 18;
	mov.b64 	%rd2880, {%r1192, %r1191};
	not.b64 	%rd2881, %rd2875;
	not.b64 	%rd2882, %rd2880;
	and.b64  	%rd2883, %rd2881, %rd2882;
	not.b64 	%rd2884, %rd2878;
	and.b64  	%rd2885, %rd2883, %rd2884;
	and.b64  	%rd2886, %rd2880, %rd2881;
	and.b64  	%rd2887, %rd2886, %rd2878;
	or.b64  	%rd2888, %rd2887, %rd2885;
	and.b64  	%rd2889, %rd2878, %rd2882;
	and.b64  	%rd2890, %rd2889, %rd2875;
	or.b64  	%rd2891, %rd2888, %rd2890;
	and.b64  	%rd2892, %rd2880, %rd2875;
	and.b64  	%rd2893, %rd2892, %rd2884;
	or.b64  	%rd2894, %rd2891, %rd2893;
	xor.b64  	%rd2895, %rd2894, %rd2877;
	and.b64  	%rd2896, %rd2883, %rd2878;
	and.b64  	%rd2897, %rd2881, %rd2884;
	and.b64  	%rd2898, %rd2897, %rd2880;
	or.b64  	%rd2899, %rd2898, %rd2896;
	and.b64  	%rd2900, %rd2875, %rd2882;
	and.b64  	%rd2901, %rd2900, %rd2884;
	or.b64  	%rd2902, %rd2899, %rd2901;
	and.b64  	%rd2903, %rd2892, %rd2878;
	or.b64  	%rd2904, %rd2902, %rd2903;
	xor.b64  	%rd2905, %rd2904, %rd2895;
	add.s64 	%rd2906, %rd143, %rd2724;
	add.s64 	%rd2907, %rd2906, %rd2758;
	xor.b64  	%rd2908, %rd2907, %rd2827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd2908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd2908;
	}
	shf.l.wrap.b32 	%r1195, %r1194, %r1193, 4;
	shf.l.wrap.b32 	%r1196, %r1193, %r1194, 4;
	mov.b64 	%rd2909, {%r1196, %r1195};
	add.s64 	%rd2910, %rd2683, %rd2909;
	xor.b64  	%rd2911, %rd2724, %rd2910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd2911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd2911;
	}
	shf.l.wrap.b32 	%r1199, %r1198, %r1197, 21;
	shf.l.wrap.b32 	%r1200, %r1197, %r1198, 21;
	mov.b64 	%rd2912, {%r1200, %r1199};
	add.s64 	%rd2913, %rd135, %rd2912;
	add.s64 	%rd2914, %rd2913, %rd2907;
	xor.b64  	%rd2915, %rd2914, %rd2909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd2915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1202}, %rd2915;
	}
	shf.r.wrap.b32 	%r1203, %r1202, %r1201, 5;
	shf.r.wrap.b32 	%r1204, %r1201, %r1202, 5;
	mov.b64 	%rd2916, {%r1204, %r1203};
	add.s64 	%rd2917, %rd2910, %rd2916;
	xor.b64  	%rd2918, %rd2912, %rd2917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd2918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd2918;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 18;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 18;
	mov.b64 	%rd2919, {%r1208, %r1207};
	not.b64 	%rd2920, %rd2914;
	not.b64 	%rd2921, %rd2919;
	and.b64  	%rd2922, %rd2920, %rd2921;
	not.b64 	%rd2923, %rd2917;
	and.b64  	%rd2924, %rd2922, %rd2923;
	and.b64  	%rd2925, %rd2919, %rd2920;
	and.b64  	%rd2926, %rd2925, %rd2917;
	or.b64  	%rd2927, %rd2926, %rd2924;
	and.b64  	%rd2928, %rd2917, %rd2921;
	and.b64  	%rd2929, %rd2928, %rd2914;
	or.b64  	%rd2930, %rd2927, %rd2929;
	and.b64  	%rd2931, %rd2919, %rd2914;
	and.b64  	%rd2932, %rd2931, %rd2923;
	or.b64  	%rd2933, %rd2930, %rd2932;
	xor.b64  	%rd2934, %rd2933, %rd2916;
	and.b64  	%rd2935, %rd2922, %rd2917;
	and.b64  	%rd2936, %rd2920, %rd2923;
	and.b64  	%rd2937, %rd2936, %rd2919;
	or.b64  	%rd2938, %rd2937, %rd2935;
	and.b64  	%rd2939, %rd2914, %rd2921;
	and.b64  	%rd2940, %rd2939, %rd2923;
	or.b64  	%rd2941, %rd2938, %rd2940;
	and.b64  	%rd2942, %rd2931, %rd2917;
	or.b64  	%rd2943, %rd2941, %rd2942;
	xor.b64  	%rd2944, %rd2943, %rd2934;
	add.s64 	%rd2945, %rd94, %rd2763;
	add.s64 	%rd2946, %rd2945, %rd2797;
	xor.b64  	%rd2947, %rd2946, %rd2710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd2947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd2947;
	}
	shf.l.wrap.b32 	%r1211, %r1210, %r1209, 4;
	shf.l.wrap.b32 	%r1212, %r1209, %r1210, 4;
	mov.b64 	%rd2948, {%r1212, %r1211};
	add.s64 	%rd2949, %rd2722, %rd2948;
	xor.b64  	%rd2950, %rd2763, %rd2949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1213}, %rd2950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1214,%dummy}, %rd2950;
	}
	shf.l.wrap.b32 	%r1215, %r1214, %r1213, 21;
	shf.l.wrap.b32 	%r1216, %r1213, %r1214, 21;
	mov.b64 	%rd2951, {%r1216, %r1215};
	add.s64 	%rd2952, %rd10, %rd2951;
	add.s64 	%rd2953, %rd2952, %rd2946;
	xor.b64  	%rd2954, %rd2953, %rd2948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd2954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd2954;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 5;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 5;
	mov.b64 	%rd2955, {%r1220, %r1219};
	add.s64 	%rd2956, %rd2949, %rd2955;
	xor.b64  	%rd2957, %rd2951, %rd2956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd2957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd2957;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 18;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 18;
	mov.b64 	%rd2958, {%r1224, %r1223};
	not.b64 	%rd2959, %rd2953;
	not.b64 	%rd2960, %rd2958;
	and.b64  	%rd2961, %rd2959, %rd2960;
	not.b64 	%rd2962, %rd2956;
	and.b64  	%rd2963, %rd2961, %rd2962;
	and.b64  	%rd2964, %rd2958, %rd2959;
	and.b64  	%rd2965, %rd2964, %rd2956;
	or.b64  	%rd2966, %rd2965, %rd2963;
	and.b64  	%rd2967, %rd2956, %rd2960;
	and.b64  	%rd2968, %rd2967, %rd2953;
	or.b64  	%rd2969, %rd2966, %rd2968;
	and.b64  	%rd2970, %rd2958, %rd2953;
	and.b64  	%rd2971, %rd2970, %rd2962;
	or.b64  	%rd2972, %rd2969, %rd2971;
	xor.b64  	%rd2973, %rd2972, %rd2955;
	and.b64  	%rd2974, %rd2961, %rd2956;
	and.b64  	%rd2975, %rd2959, %rd2962;
	and.b64  	%rd2976, %rd2975, %rd2958;
	or.b64  	%rd2977, %rd2976, %rd2974;
	and.b64  	%rd2978, %rd2953, %rd2960;
	and.b64  	%rd2979, %rd2978, %rd2962;
	or.b64  	%rd2980, %rd2977, %rd2979;
	and.b64  	%rd2981, %rd2970, %rd2956;
	or.b64  	%rd2982, %rd2980, %rd2981;
	xor.b64  	%rd2983, %rd2982, %rd2973;
	add.s64 	%rd2984, %rd2880, %rd2836;
	add.s64 	%rd2985, %rd2984, -7446784132049864704;
	xor.b64  	%rd2986, %rd2985, %rd2983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1225}, %rd2986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1226,%dummy}, %rd2986;
	}
	shf.l.wrap.b32 	%r1227, %r1226, %r1225, 4;
	shf.l.wrap.b32 	%r1228, %r1225, %r1226, 4;
	mov.b64 	%rd2987, {%r1228, %r1227};
	add.s64 	%rd2988, %rd2917, %rd2987;
	xor.b64  	%rd2989, %rd2880, %rd2988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd2989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1230,%dummy}, %rd2989;
	}
	shf.l.wrap.b32 	%r1231, %r1230, %r1229, 21;
	shf.l.wrap.b32 	%r1232, %r1229, %r1230, 21;
	mov.b64 	%rd2990, {%r1232, %r1231};
	add.s64 	%rd2991, %rd2990, %rd2985;
	add.s64 	%rd2992, %rd2991, 7194923001510760043;
	xor.b64  	%rd2993, %rd2992, %rd2987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd2993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd2993;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 5;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 5;
	mov.b64 	%rd2994, {%r1236, %r1235};
	add.s64 	%rd2995, %rd2988, %rd2994;
	xor.b64  	%rd2996, %rd2990, %rd2995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd2996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd2996;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 18;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 18;
	mov.b64 	%rd2997, {%r1240, %r1239};
	not.b64 	%rd2998, %rd2992;
	not.b64 	%rd2999, %rd2997;
	and.b64  	%rd3000, %rd2998, %rd2999;
	not.b64 	%rd3001, %rd2995;
	and.b64  	%rd3002, %rd3000, %rd3001;
	and.b64  	%rd3003, %rd2997, %rd2998;
	and.b64  	%rd3004, %rd3003, %rd2995;
	or.b64  	%rd3005, %rd3004, %rd3002;
	and.b64  	%rd3006, %rd2995, %rd2999;
	and.b64  	%rd3007, %rd3006, %rd2992;
	or.b64  	%rd3008, %rd3005, %rd3007;
	and.b64  	%rd3009, %rd2997, %rd2992;
	and.b64  	%rd3010, %rd3009, %rd3001;
	or.b64  	%rd3011, %rd3008, %rd3010;
	xor.b64  	%rd3012, %rd3011, %rd2994;
	and.b64  	%rd3013, %rd3000, %rd2995;
	and.b64  	%rd3014, %rd2998, %rd3001;
	and.b64  	%rd3015, %rd3014, %rd2997;
	or.b64  	%rd3016, %rd3015, %rd3013;
	and.b64  	%rd3017, %rd2992, %rd2999;
	and.b64  	%rd3018, %rd3017, %rd3001;
	or.b64  	%rd3019, %rd3016, %rd3018;
	and.b64  	%rd3020, %rd3009, %rd2995;
	or.b64  	%rd3021, %rd3019, %rd3020;
	xor.b64  	%rd3022, %rd3021, %rd3012;
	add.s64 	%rd3023, %rd2919, %rd2875;
	add.s64 	%rd3024, %rd3023, -2856998567947870208;
	xor.b64  	%rd3025, %rd3024, %rd2866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd3025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd3025;
	}
	shf.l.wrap.b32 	%r1243, %r1242, %r1241, 4;
	shf.l.wrap.b32 	%r1244, %r1241, %r1242, 4;
	mov.b64 	%rd3026, {%r1244, %r1243};
	add.s64 	%rd3027, %rd2956, %rd3026;
	xor.b64  	%rd3028, %rd2919, %rd3027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1245}, %rd3028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd3028;
	}
	shf.l.wrap.b32 	%r1247, %r1246, %r1245, 21;
	shf.l.wrap.b32 	%r1248, %r1245, %r1246, 21;
	mov.b64 	%rd3029, {%r1248, %r1247};
	add.s64 	%rd3030, %rd3029, %rd3024;
	add.s64 	%rd3031, %rd3030, -3341658112243943424;
	xor.b64  	%rd3032, %rd3031, %rd3026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1249,%dummy}, %rd3032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1250}, %rd3032;
	}
	shf.r.wrap.b32 	%r1251, %r1250, %r1249, 5;
	shf.r.wrap.b32 	%r1252, %r1249, %r1250, 5;
	mov.b64 	%rd3033, {%r1252, %r1251};
	add.s64 	%rd3034, %rd3027, %rd3033;
	xor.b64  	%rd3035, %rd3029, %rd3034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd3035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd3035;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 18;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 18;
	mov.b64 	%rd3036, {%r1256, %r1255};
	not.b64 	%rd3037, %rd3031;
	not.b64 	%rd3038, %rd3036;
	and.b64  	%rd3039, %rd3037, %rd3038;
	not.b64 	%rd3040, %rd3034;
	and.b64  	%rd3041, %rd3039, %rd3040;
	and.b64  	%rd3042, %rd3036, %rd3037;
	and.b64  	%rd3043, %rd3042, %rd3034;
	or.b64  	%rd3044, %rd3043, %rd3041;
	and.b64  	%rd3045, %rd3034, %rd3038;
	and.b64  	%rd3046, %rd3045, %rd3031;
	or.b64  	%rd3047, %rd3044, %rd3046;
	and.b64  	%rd3048, %rd3036, %rd3031;
	and.b64  	%rd3049, %rd3048, %rd3040;
	or.b64  	%rd3050, %rd3047, %rd3049;
	xor.b64  	%rd3051, %rd3050, %rd3033;
	and.b64  	%rd3052, %rd3039, %rd3034;
	and.b64  	%rd3053, %rd3037, %rd3040;
	and.b64  	%rd3054, %rd3053, %rd3036;
	or.b64  	%rd3055, %rd3054, %rd3052;
	and.b64  	%rd3056, %rd3031, %rd3038;
	and.b64  	%rd3057, %rd3056, %rd3040;
	or.b64  	%rd3058, %rd3055, %rd3057;
	and.b64  	%rd3059, %rd3048, %rd3034;
	or.b64  	%rd3060, %rd3058, %rd3059;
	xor.b64  	%rd3061, %rd3060, %rd3051;
	add.s64 	%rd3062, %rd2958, %rd2914;
	add.s64 	%rd3063, %rd3062, -4972871168744972288;
	xor.b64  	%rd3064, %rd3063, %rd2905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1257}, %rd3064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd3064;
	}
	shf.l.wrap.b32 	%r1259, %r1258, %r1257, 4;
	shf.l.wrap.b32 	%r1260, %r1257, %r1258, 4;
	mov.b64 	%rd3065, {%r1260, %r1259};
	add.s64 	%rd3066, %rd2839, %rd3065;
	xor.b64  	%rd3067, %rd2958, %rd3066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1261}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd3067;
	}
	shf.l.wrap.b32 	%r1263, %r1262, %r1261, 21;
	shf.l.wrap.b32 	%r1264, %r1261, %r1262, 21;
	mov.b64 	%rd3068, {%r1264, %r1263};
	add.s64 	%rd3069, %rd52, %rd3068;
	add.s64 	%rd3070, %rd3069, %rd3063;
	xor.b64  	%rd3071, %rd3070, %rd3065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd3071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1266}, %rd3071;
	}
	shf.r.wrap.b32 	%r1267, %r1266, %r1265, 5;
	shf.r.wrap.b32 	%r1268, %r1265, %r1266, 5;
	mov.b64 	%rd3072, {%r1268, %r1267};
	add.s64 	%rd3073, %rd3066, %rd3072;
	xor.b64  	%rd3074, %rd3068, %rd3073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd3074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd3074;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 18;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 18;
	mov.b64 	%rd3075, {%r1272, %r1271};
	not.b64 	%rd3076, %rd3070;
	not.b64 	%rd3077, %rd3075;
	and.b64  	%rd3078, %rd3076, %rd3077;
	not.b64 	%rd3079, %rd3073;
	and.b64  	%rd3080, %rd3078, %rd3079;
	and.b64  	%rd3081, %rd3075, %rd3076;
	and.b64  	%rd3082, %rd3081, %rd3073;
	or.b64  	%rd3083, %rd3082, %rd3080;
	and.b64  	%rd3084, %rd3073, %rd3077;
	and.b64  	%rd3085, %rd3084, %rd3070;
	or.b64  	%rd3086, %rd3083, %rd3085;
	and.b64  	%rd3087, %rd3075, %rd3070;
	and.b64  	%rd3088, %rd3087, %rd3079;
	or.b64  	%rd3089, %rd3086, %rd3088;
	xor.b64  	%rd3090, %rd3089, %rd3072;
	and.b64  	%rd3091, %rd3078, %rd3073;
	and.b64  	%rd3092, %rd3076, %rd3079;
	and.b64  	%rd3093, %rd3092, %rd3075;
	or.b64  	%rd3094, %rd3093, %rd3091;
	and.b64  	%rd3095, %rd3070, %rd3077;
	and.b64  	%rd3096, %rd3095, %rd3079;
	or.b64  	%rd3097, %rd3094, %rd3096;
	and.b64  	%rd3098, %rd3087, %rd3073;
	or.b64  	%rd3099, %rd3097, %rd3098;
	xor.b64  	%rd3100, %rd3099, %rd3090;
	add.s64 	%rd3101, %rd18, %rd2841;
	add.s64 	%rd3102, %rd3101, %rd2953;
	xor.b64  	%rd3103, %rd3102, %rd2944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1273}, %rd3103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd3103;
	}
	shf.l.wrap.b32 	%r1275, %r1274, %r1273, 4;
	shf.l.wrap.b32 	%r1276, %r1273, %r1274, 4;
	mov.b64 	%rd3104, {%r1276, %r1275};
	add.s64 	%rd3105, %rd2878, %rd3104;
	xor.b64  	%rd3106, %rd2841, %rd3105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1277}, %rd3106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd3106;
	}
	shf.l.wrap.b32 	%r1279, %r1278, %r1277, 21;
	shf.l.wrap.b32 	%r1280, %r1277, %r1278, 21;
	mov.b64 	%rd3107, {%r1280, %r1279};
	add.s64 	%rd3108, %rd3107, %rd3102;
	add.s64 	%rd3109, %rd3108, 7251808426145424871;
	xor.b64  	%rd3110, %rd3109, %rd3104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1281,%dummy}, %rd3110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1282}, %rd3110;
	}
	shf.r.wrap.b32 	%r1283, %r1282, %r1281, 5;
	shf.r.wrap.b32 	%r1284, %r1281, %r1282, 5;
	mov.b64 	%rd3111, {%r1284, %r1283};
	add.s64 	%rd3112, %rd3105, %rd3111;
	xor.b64  	%rd3113, %rd3107, %rd3112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd3113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd3113;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 18;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 18;
	mov.b64 	%rd3114, {%r1288, %r1287};
	not.b64 	%rd3115, %rd3109;
	not.b64 	%rd3116, %rd3114;
	and.b64  	%rd3117, %rd3115, %rd3116;
	not.b64 	%rd3118, %rd3112;
	and.b64  	%rd3119, %rd3117, %rd3118;
	and.b64  	%rd3120, %rd3114, %rd3115;
	and.b64  	%rd3121, %rd3120, %rd3112;
	or.b64  	%rd3122, %rd3121, %rd3119;
	and.b64  	%rd3123, %rd3112, %rd3116;
	and.b64  	%rd3124, %rd3123, %rd3109;
	or.b64  	%rd3125, %rd3122, %rd3124;
	and.b64  	%rd3126, %rd3114, %rd3109;
	and.b64  	%rd3127, %rd3126, %rd3118;
	or.b64  	%rd3128, %rd3125, %rd3127;
	xor.b64  	%rd3129, %rd3128, %rd3111;
	and.b64  	%rd3130, %rd3117, %rd3112;
	and.b64  	%rd3131, %rd3115, %rd3118;
	and.b64  	%rd3132, %rd3131, %rd3114;
	or.b64  	%rd3133, %rd3132, %rd3130;
	and.b64  	%rd3134, %rd3109, %rd3116;
	and.b64  	%rd3135, %rd3134, %rd3118;
	or.b64  	%rd3136, %rd3133, %rd3135;
	and.b64  	%rd3137, %rd3126, %rd3112;
	or.b64  	%rd3138, %rd3136, %rd3137;
	xor.b64  	%rd3139, %rd3138, %rd3129;
	add.s64 	%rd3140, %rd10, %rd3114;
	add.s64 	%rd3141, %rd3140, %rd2992;
	xor.b64  	%rd3142, %rd3141, %rd3061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1289}, %rd3142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1290,%dummy}, %rd3142;
	}
	shf.l.wrap.b32 	%r1291, %r1290, %r1289, 4;
	shf.l.wrap.b32 	%r1292, %r1289, %r1290, 4;
	mov.b64 	%rd3143, {%r1292, %r1291};
	add.s64 	%rd3144, %rd3073, %rd3143;
	xor.b64  	%rd3145, %rd3114, %rd3144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd3145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd3145;
	}
	shf.l.wrap.b32 	%r1295, %r1294, %r1293, 21;
	shf.l.wrap.b32 	%r1296, %r1293, %r1294, 21;
	mov.b64 	%rd3146, {%r1296, %r1295};
	add.s64 	%rd3147, %rd18, %rd3146;
	add.s64 	%rd3148, %rd3147, %rd3141;
	xor.b64  	%rd3149, %rd3148, %rd3143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1297,%dummy}, %rd3149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1298}, %rd3149;
	}
	shf.r.wrap.b32 	%r1299, %r1298, %r1297, 5;
	shf.r.wrap.b32 	%r1300, %r1297, %r1298, 5;
	mov.b64 	%rd3150, {%r1300, %r1299};
	add.s64 	%rd3151, %rd3144, %rd3150;
	xor.b64  	%rd3152, %rd3146, %rd3151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd3152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd3152;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 18;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 18;
	mov.b64 	%rd3153, {%r1304, %r1303};
	not.b64 	%rd3154, %rd3148;
	not.b64 	%rd3155, %rd3153;
	and.b64  	%rd3156, %rd3154, %rd3155;
	not.b64 	%rd3157, %rd3151;
	and.b64  	%rd3158, %rd3156, %rd3157;
	and.b64  	%rd3159, %rd3153, %rd3154;
	and.b64  	%rd3160, %rd3159, %rd3151;
	or.b64  	%rd3161, %rd3160, %rd3158;
	and.b64  	%rd3162, %rd3151, %rd3155;
	and.b64  	%rd3163, %rd3162, %rd3148;
	or.b64  	%rd3164, %rd3161, %rd3163;
	and.b64  	%rd3165, %rd3153, %rd3148;
	and.b64  	%rd3166, %rd3165, %rd3157;
	or.b64  	%rd3167, %rd3164, %rd3166;
	xor.b64  	%rd3168, %rd3167, %rd3150;
	and.b64  	%rd3169, %rd3156, %rd3151;
	and.b64  	%rd3170, %rd3154, %rd3157;
	and.b64  	%rd3171, %rd3170, %rd3153;
	or.b64  	%rd3172, %rd3171, %rd3169;
	and.b64  	%rd3173, %rd3148, %rd3155;
	and.b64  	%rd3174, %rd3173, %rd3157;
	or.b64  	%rd3175, %rd3172, %rd3174;
	and.b64  	%rd3176, %rd3165, %rd3151;
	or.b64  	%rd3177, %rd3175, %rd3176;
	xor.b64  	%rd3178, %rd3177, %rd3168;
	add.s64 	%rd3179, %rd52, %rd2997;
	add.s64 	%rd3180, %rd3179, %rd3031;
	xor.b64  	%rd3181, %rd3180, %rd3100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd3181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd3181;
	}
	shf.l.wrap.b32 	%r1307, %r1306, %r1305, 4;
	shf.l.wrap.b32 	%r1308, %r1305, %r1306, 4;
	mov.b64 	%rd3182, {%r1308, %r1307};
	add.s64 	%rd3183, %rd3112, %rd3182;
	xor.b64  	%rd3184, %rd2997, %rd3183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd3184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd3184;
	}
	shf.l.wrap.b32 	%r1311, %r1310, %r1309, 21;
	shf.l.wrap.b32 	%r1312, %r1309, %r1310, 21;
	mov.b64 	%rd3185, {%r1312, %r1311};
	add.s64 	%rd3186, %rd60, %rd3185;
	add.s64 	%rd3187, %rd3186, %rd3180;
	xor.b64  	%rd3188, %rd3187, %rd3182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1313,%dummy}, %rd3188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1314}, %rd3188;
	}
	shf.r.wrap.b32 	%r1315, %r1314, %r1313, 5;
	shf.r.wrap.b32 	%r1316, %r1313, %r1314, 5;
	mov.b64 	%rd3189, {%r1316, %r1315};
	add.s64 	%rd3190, %rd3183, %rd3189;
	xor.b64  	%rd3191, %rd3185, %rd3190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd3191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd3191;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 18;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 18;
	mov.b64 	%rd3192, {%r1320, %r1319};
	not.b64 	%rd3193, %rd3187;
	not.b64 	%rd3194, %rd3192;
	and.b64  	%rd3195, %rd3193, %rd3194;
	not.b64 	%rd3196, %rd3190;
	and.b64  	%rd3197, %rd3195, %rd3196;
	and.b64  	%rd3198, %rd3192, %rd3193;
	and.b64  	%rd3199, %rd3198, %rd3190;
	or.b64  	%rd3200, %rd3199, %rd3197;
	and.b64  	%rd3201, %rd3190, %rd3194;
	and.b64  	%rd3202, %rd3201, %rd3187;
	or.b64  	%rd3203, %rd3200, %rd3202;
	and.b64  	%rd3204, %rd3192, %rd3187;
	and.b64  	%rd3205, %rd3204, %rd3196;
	or.b64  	%rd3206, %rd3203, %rd3205;
	xor.b64  	%rd3207, %rd3206, %rd3189;
	and.b64  	%rd3208, %rd3195, %rd3190;
	and.b64  	%rd3209, %rd3193, %rd3196;
	and.b64  	%rd3210, %rd3209, %rd3192;
	or.b64  	%rd3211, %rd3210, %rd3208;
	and.b64  	%rd3212, %rd3187, %rd3194;
	and.b64  	%rd3213, %rd3212, %rd3196;
	or.b64  	%rd3214, %rd3211, %rd3213;
	and.b64  	%rd3215, %rd3204, %rd3190;
	or.b64  	%rd3216, %rd3214, %rd3215;
	xor.b64  	%rd3217, %rd3216, %rd3207;
	add.s64 	%rd3218, %rd94, %rd3036;
	add.s64 	%rd3219, %rd3218, %rd3070;
	xor.b64  	%rd3220, %rd3219, %rd3139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1321}, %rd3220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1322,%dummy}, %rd3220;
	}
	shf.l.wrap.b32 	%r1323, %r1322, %r1321, 4;
	shf.l.wrap.b32 	%r1324, %r1321, %r1322, 4;
	mov.b64 	%rd3221, {%r1324, %r1323};
	add.s64 	%rd3222, %rd2995, %rd3221;
	xor.b64  	%rd3223, %rd3036, %rd3222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd3223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd3223;
	}
	shf.l.wrap.b32 	%r1327, %r1326, %r1325, 21;
	shf.l.wrap.b32 	%r1328, %r1325, %r1326, 21;
	mov.b64 	%rd3224, {%r1328, %r1327};
	add.s64 	%rd3225, %rd102, %rd3224;
	add.s64 	%rd3226, %rd3225, %rd3219;
	xor.b64  	%rd3227, %rd3226, %rd3221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd3227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd3227;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 5;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 5;
	mov.b64 	%rd3228, {%r1332, %r1331};
	add.s64 	%rd3229, %rd3222, %rd3228;
	xor.b64  	%rd3230, %rd3224, %rd3229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd3230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd3230;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 18;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 18;
	mov.b64 	%rd3231, {%r1336, %r1335};
	not.b64 	%rd3232, %rd3226;
	not.b64 	%rd3233, %rd3231;
	and.b64  	%rd3234, %rd3232, %rd3233;
	not.b64 	%rd3235, %rd3229;
	and.b64  	%rd3236, %rd3234, %rd3235;
	and.b64  	%rd3237, %rd3231, %rd3232;
	and.b64  	%rd3238, %rd3237, %rd3229;
	or.b64  	%rd3239, %rd3238, %rd3236;
	and.b64  	%rd3240, %rd3229, %rd3233;
	and.b64  	%rd3241, %rd3240, %rd3226;
	or.b64  	%rd3242, %rd3239, %rd3241;
	and.b64  	%rd3243, %rd3231, %rd3226;
	and.b64  	%rd3244, %rd3243, %rd3235;
	or.b64  	%rd3245, %rd3242, %rd3244;
	xor.b64  	%rd3246, %rd3245, %rd3228;
	and.b64  	%rd3247, %rd3234, %rd3229;
	and.b64  	%rd3248, %rd3232, %rd3235;
	and.b64  	%rd3249, %rd3248, %rd3231;
	or.b64  	%rd3250, %rd3249, %rd3247;
	and.b64  	%rd3251, %rd3226, %rd3233;
	and.b64  	%rd3252, %rd3251, %rd3235;
	or.b64  	%rd3253, %rd3250, %rd3252;
	and.b64  	%rd3254, %rd3243, %rd3229;
	or.b64  	%rd3255, %rd3253, %rd3254;
	xor.b64  	%rd3256, %rd3255, %rd3246;
	add.s64 	%rd3257, %rd135, %rd3075;
	add.s64 	%rd3258, %rd3257, %rd3109;
	xor.b64  	%rd3259, %rd3258, %rd3022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1337}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1338,%dummy}, %rd3259;
	}
	shf.l.wrap.b32 	%r1339, %r1338, %r1337, 4;
	shf.l.wrap.b32 	%r1340, %r1337, %r1338, 4;
	mov.b64 	%rd3260, {%r1340, %r1339};
	add.s64 	%rd3261, %rd3034, %rd3260;
	xor.b64  	%rd3262, %rd3075, %rd3261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd3262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd3262;
	}
	shf.l.wrap.b32 	%r1343, %r1342, %r1341, 21;
	shf.l.wrap.b32 	%r1344, %r1341, %r1342, 21;
	mov.b64 	%rd3263, {%r1344, %r1343};
	add.s64 	%rd3264, %rd143, %rd3263;
	add.s64 	%rd3265, %rd3264, %rd3258;
	xor.b64  	%rd3266, %rd3265, %rd3260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd3266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd3266;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 5;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 5;
	mov.b64 	%rd3267, {%r1348, %r1347};
	add.s64 	%rd3268, %rd3261, %rd3267;
	xor.b64  	%rd3269, %rd3263, %rd3268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd3269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd3269;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 18;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 18;
	mov.b64 	%rd3270, {%r1352, %r1351};
	not.b64 	%rd3271, %rd3265;
	not.b64 	%rd3272, %rd3270;
	and.b64  	%rd3273, %rd3271, %rd3272;
	not.b64 	%rd3274, %rd3268;
	and.b64  	%rd3275, %rd3273, %rd3274;
	and.b64  	%rd3276, %rd3270, %rd3271;
	and.b64  	%rd3277, %rd3276, %rd3268;
	or.b64  	%rd3278, %rd3277, %rd3275;
	and.b64  	%rd3279, %rd3268, %rd3272;
	and.b64  	%rd3280, %rd3279, %rd3265;
	or.b64  	%rd3281, %rd3278, %rd3280;
	and.b64  	%rd3282, %rd3270, %rd3265;
	and.b64  	%rd3283, %rd3282, %rd3274;
	or.b64  	%rd3284, %rd3281, %rd3283;
	xor.b64  	%rd3285, %rd3284, %rd3267;
	and.b64  	%rd3286, %rd3273, %rd3268;
	and.b64  	%rd3287, %rd3271, %rd3274;
	and.b64  	%rd3288, %rd3287, %rd3270;
	or.b64  	%rd3289, %rd3288, %rd3286;
	and.b64  	%rd3290, %rd3265, %rd3272;
	and.b64  	%rd3291, %rd3290, %rd3274;
	or.b64  	%rd3292, %rd3289, %rd3291;
	and.b64  	%rd3293, %rd3282, %rd3268;
	or.b64  	%rd3294, %rd3292, %rd3293;
	xor.b64  	%rd3295, %rd3294, %rd3285;
	add.s64 	%rd3296, %rd3192, %rd3148;
	add.s64 	%rd3297, %rd3296, -3341658112243943424;
	xor.b64  	%rd3298, %rd3297, %rd3295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd3298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1354,%dummy}, %rd3298;
	}
	shf.l.wrap.b32 	%r1355, %r1354, %r1353, 4;
	shf.l.wrap.b32 	%r1356, %r1353, %r1354, 4;
	mov.b64 	%rd3299, {%r1356, %r1355};
	add.s64 	%rd3300, %rd3229, %rd3299;
	xor.b64  	%rd3301, %rd3192, %rd3300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1357}, %rd3301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd3301;
	}
	shf.l.wrap.b32 	%r1359, %r1358, %r1357, 21;
	shf.l.wrap.b32 	%r1360, %r1357, %r1358, 21;
	mov.b64 	%rd3302, {%r1360, %r1359};
	add.s64 	%rd3303, %rd3302, %rd3297;
	add.s64 	%rd3304, %rd3303, 5987067145339136795;
	xor.b64  	%rd3305, %rd3304, %rd3299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1361,%dummy}, %rd3305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1362}, %rd3305;
	}
	shf.r.wrap.b32 	%r1363, %r1362, %r1361, 5;
	shf.r.wrap.b32 	%r1364, %r1361, %r1362, 5;
	mov.b64 	%rd3306, {%r1364, %r1363};
	add.s64 	%rd3307, %rd3300, %rd3306;
	xor.b64  	%rd3308, %rd3302, %rd3307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1365,%dummy}, %rd3308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1366}, %rd3308;
	}
	shf.r.wrap.b32 	%r1367, %r1366, %r1365, 18;
	shf.r.wrap.b32 	%r1368, %r1365, %r1366, 18;
	mov.b64 	%rd3309, {%r1368, %r1367};
	not.b64 	%rd3310, %rd3304;
	not.b64 	%rd3311, %rd3309;
	and.b64  	%rd3312, %rd3310, %rd3311;
	not.b64 	%rd3313, %rd3307;
	and.b64  	%rd3314, %rd3312, %rd3313;
	and.b64  	%rd3315, %rd3309, %rd3310;
	and.b64  	%rd3316, %rd3315, %rd3307;
	or.b64  	%rd3317, %rd3316, %rd3314;
	and.b64  	%rd3318, %rd3307, %rd3311;
	and.b64  	%rd3319, %rd3318, %rd3304;
	or.b64  	%rd3320, %rd3317, %rd3319;
	and.b64  	%rd3321, %rd3309, %rd3304;
	and.b64  	%rd3322, %rd3321, %rd3313;
	or.b64  	%rd3323, %rd3320, %rd3322;
	xor.b64  	%rd3324, %rd3323, %rd3306;
	and.b64  	%rd3325, %rd3312, %rd3307;
	and.b64  	%rd3326, %rd3310, %rd3313;
	and.b64  	%rd3327, %rd3326, %rd3309;
	or.b64  	%rd3328, %rd3327, %rd3325;
	and.b64  	%rd3329, %rd3304, %rd3311;
	and.b64  	%rd3330, %rd3329, %rd3313;
	or.b64  	%rd3331, %rd3328, %rd3330;
	and.b64  	%rd3332, %rd3321, %rd3307;
	or.b64  	%rd3333, %rd3331, %rd3332;
	xor.b64  	%rd3334, %rd3333, %rd3324;
	add.s64 	%rd3335, %rd3231, %rd3187;
	add.s64 	%rd3336, %rd3335, -7446784132049864704;
	xor.b64  	%rd3337, %rd3336, %rd3178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1369}, %rd3337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd3337;
	}
	shf.l.wrap.b32 	%r1371, %r1370, %r1369, 4;
	shf.l.wrap.b32 	%r1372, %r1369, %r1370, 4;
	mov.b64 	%rd3338, {%r1372, %r1371};
	add.s64 	%rd3339, %rd3268, %rd3338;
	xor.b64  	%rd3340, %rd3231, %rd3339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1373}, %rd3340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd3340;
	}
	shf.l.wrap.b32 	%r1375, %r1374, %r1373, 21;
	shf.l.wrap.b32 	%r1376, %r1373, %r1374, 21;
	mov.b64 	%rd3341, {%r1376, %r1375};
	add.s64 	%rd3342, %rd3341, %rd3336;
	add.s64 	%rd3343, %rd3342, 3450974313248867902;
	xor.b64  	%rd3344, %rd3343, %rd3338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd3344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1378}, %rd3344;
	}
	shf.r.wrap.b32 	%r1379, %r1378, %r1377, 5;
	shf.r.wrap.b32 	%r1380, %r1377, %r1378, 5;
	mov.b64 	%rd3345, {%r1380, %r1379};
	add.s64 	%rd3346, %rd3339, %rd3345;
	xor.b64  	%rd3347, %rd3341, %rd3346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd3347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd3347;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 18;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 18;
	mov.b64 	%rd3348, {%r1384, %r1383};
	not.b64 	%rd3349, %rd3343;
	not.b64 	%rd3350, %rd3348;
	and.b64  	%rd3351, %rd3349, %rd3350;
	not.b64 	%rd3352, %rd3346;
	and.b64  	%rd3353, %rd3351, %rd3352;
	and.b64  	%rd3354, %rd3348, %rd3349;
	and.b64  	%rd3355, %rd3354, %rd3346;
	or.b64  	%rd3356, %rd3355, %rd3353;
	and.b64  	%rd3357, %rd3346, %rd3350;
	and.b64  	%rd3358, %rd3357, %rd3343;
	or.b64  	%rd3359, %rd3356, %rd3358;
	and.b64  	%rd3360, %rd3348, %rd3343;
	and.b64  	%rd3361, %rd3360, %rd3352;
	or.b64  	%rd3362, %rd3359, %rd3361;
	xor.b64  	%rd3363, %rd3362, %rd3345;
	and.b64  	%rd3364, %rd3351, %rd3346;
	and.b64  	%rd3365, %rd3349, %rd3352;
	and.b64  	%rd3366, %rd3365, %rd3348;
	or.b64  	%rd3367, %rd3366, %rd3364;
	and.b64  	%rd3368, %rd3343, %rd3350;
	and.b64  	%rd3369, %rd3368, %rd3352;
	or.b64  	%rd3370, %rd3367, %rd3369;
	and.b64  	%rd3371, %rd3360, %rd3346;
	or.b64  	%rd3372, %rd3370, %rd3371;
	xor.b64  	%rd3373, %rd3372, %rd3363;
	add.s64 	%rd3374, %rd3270, %rd3226;
	add.s64 	%rd3375, %rd3374, 7251808426145424871;
	xor.b64  	%rd3376, %rd3375, %rd3217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd3376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1386,%dummy}, %rd3376;
	}
	shf.l.wrap.b32 	%r1387, %r1386, %r1385, 4;
	shf.l.wrap.b32 	%r1388, %r1385, %r1386, 4;
	mov.b64 	%rd3377, {%r1388, %r1387};
	add.s64 	%rd3378, %rd3151, %rd3377;
	xor.b64  	%rd3379, %rd3270, %rd3378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd3379;
	}
	shf.l.wrap.b32 	%r1391, %r1390, %r1389, 21;
	shf.l.wrap.b32 	%r1392, %r1389, %r1390, 21;
	mov.b64 	%rd3380, {%r1392, %r1391};
	add.s64 	%rd3381, %rd3380, %rd3375;
	add.s64 	%rd3382, %rd3381, -4972871168744972288;
	xor.b64  	%rd3383, %rd3382, %rd3377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd3383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1394}, %rd3383;
	}
	shf.r.wrap.b32 	%r1395, %r1394, %r1393, 5;
	shf.r.wrap.b32 	%r1396, %r1393, %r1394, 5;
	mov.b64 	%rd3384, {%r1396, %r1395};
	add.s64 	%rd3385, %rd3378, %rd3384;
	xor.b64  	%rd3386, %rd3380, %rd3385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1397,%dummy}, %rd3386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1398}, %rd3386;
	}
	shf.r.wrap.b32 	%r1399, %r1398, %r1397, 18;
	shf.r.wrap.b32 	%r1400, %r1397, %r1398, 18;
	mov.b64 	%rd3387, {%r1400, %r1399};
	not.b64 	%rd3388, %rd3382;
	not.b64 	%rd3389, %rd3387;
	and.b64  	%rd3390, %rd3388, %rd3389;
	not.b64 	%rd3391, %rd3385;
	and.b64  	%rd3392, %rd3390, %rd3391;
	and.b64  	%rd3393, %rd3387, %rd3388;
	and.b64  	%rd3394, %rd3393, %rd3385;
	or.b64  	%rd3395, %rd3394, %rd3392;
	and.b64  	%rd3396, %rd3385, %rd3389;
	and.b64  	%rd3397, %rd3396, %rd3382;
	or.b64  	%rd3398, %rd3395, %rd3397;
	and.b64  	%rd3399, %rd3387, %rd3382;
	and.b64  	%rd3400, %rd3399, %rd3391;
	or.b64  	%rd3401, %rd3398, %rd3400;
	xor.b64  	%rd3402, %rd3401, %rd3384;
	and.b64  	%rd3403, %rd3390, %rd3385;
	and.b64  	%rd3404, %rd3388, %rd3391;
	and.b64  	%rd3405, %rd3404, %rd3387;
	or.b64  	%rd3406, %rd3405, %rd3403;
	and.b64  	%rd3407, %rd3382, %rd3389;
	and.b64  	%rd3408, %rd3407, %rd3391;
	or.b64  	%rd3409, %rd3406, %rd3408;
	and.b64  	%rd3410, %rd3399, %rd3385;
	or.b64  	%rd3411, %rd3409, %rd3410;
	xor.b64  	%rd3412, %rd3411, %rd3402;
	add.s64 	%rd3413, %rd3153, %rd3265;
	add.s64 	%rd3414, %rd3413, 7194923001510760043;
	xor.b64  	%rd3415, %rd3414, %rd3256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1401}, %rd3415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd3415;
	}
	shf.l.wrap.b32 	%r1403, %r1402, %r1401, 4;
	shf.l.wrap.b32 	%r1404, %r1401, %r1402, 4;
	mov.b64 	%rd3416, {%r1404, %r1403};
	add.s64 	%rd3417, %rd3190, %rd3416;
	xor.b64  	%rd3418, %rd3153, %rd3417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1405}, %rd3418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd3418;
	}
	shf.l.wrap.b32 	%r1407, %r1406, %r1405, 21;
	shf.l.wrap.b32 	%r1408, %r1405, %r1406, 21;
	mov.b64 	%rd3419, {%r1408, %r1407};
	add.s64 	%rd3420, %rd3419, %rd3414;
	add.s64 	%rd3421, %rd3420, -2856998567947870208;
	xor.b64  	%rd3422, %rd3421, %rd3416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1409,%dummy}, %rd3422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1410}, %rd3422;
	}
	shf.r.wrap.b32 	%r1411, %r1410, %r1409, 5;
	shf.r.wrap.b32 	%r1412, %r1409, %r1410, 5;
	mov.b64 	%rd3423, {%r1412, %r1411};
	add.s64 	%rd3424, %rd3417, %rd3423;
	xor.b64  	%rd3425, %rd3419, %rd3424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1413,%dummy}, %rd3425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1414}, %rd3425;
	}
	shf.r.wrap.b32 	%r1415, %r1414, %r1413, 18;
	shf.r.wrap.b32 	%r1416, %r1413, %r1414, 18;
	mov.b64 	%rd3426, {%r1416, %r1415};
	not.b64 	%rd3427, %rd3421;
	not.b64 	%rd3428, %rd3426;
	and.b64  	%rd3429, %rd3427, %rd3428;
	not.b64 	%rd3430, %rd3424;
	and.b64  	%rd3431, %rd3429, %rd3430;
	and.b64  	%rd3432, %rd3426, %rd3427;
	and.b64  	%rd3433, %rd3432, %rd3424;
	or.b64  	%rd3434, %rd3433, %rd3431;
	and.b64  	%rd3435, %rd3424, %rd3428;
	and.b64  	%rd3436, %rd3435, %rd3421;
	or.b64  	%rd3437, %rd3434, %rd3436;
	and.b64  	%rd3438, %rd3426, %rd3421;
	and.b64  	%rd3439, %rd3438, %rd3430;
	or.b64  	%rd3440, %rd3437, %rd3439;
	xor.b64  	%rd3441, %rd3440, %rd3423;
	and.b64  	%rd3442, %rd3429, %rd3424;
	and.b64  	%rd3443, %rd3427, %rd3430;
	and.b64  	%rd3444, %rd3443, %rd3426;
	or.b64  	%rd3445, %rd3444, %rd3442;
	and.b64  	%rd3446, %rd3421, %rd3428;
	and.b64  	%rd3447, %rd3446, %rd3430;
	or.b64  	%rd3448, %rd3445, %rd3447;
	and.b64  	%rd3449, %rd3438, %rd3424;
	or.b64  	%rd3450, %rd3448, %rd3449;
	xor.b64  	%rd3451, %rd3450, %rd3441;
	add.s64 	%rd3452, %rd3426, %rd3304;
	add.s64 	%rd3453, %rd3452, 3450974313248867902;
	xor.b64  	%rd3454, %rd3453, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1417}, %rd3454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd3454;
	}
	shf.l.wrap.b32 	%r1419, %r1418, %r1417, 4;
	shf.l.wrap.b32 	%r1420, %r1417, %r1418, 4;
	mov.b64 	%rd3455, {%r1420, %r1419};
	add.s64 	%rd3456, %rd3385, %rd3455;
	xor.b64  	%rd3457, %rd3426, %rd3456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd3457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd3457;
	}
	shf.l.wrap.b32 	%r1423, %r1422, %r1421, 21;
	shf.l.wrap.b32 	%r1424, %r1421, %r1422, 21;
	mov.b64 	%rd3458, {%r1424, %r1423};
	add.s64 	%rd3459, %rd3458, %rd3453;
	add.s64 	%rd3460, %rd3459, -2856998567947870208;
	xor.b64  	%rd3461, %rd3460, %rd3455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd3461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd3461;
	}
	shf.r.wrap.b32 	%r1427, %r1426, %r1425, 5;
	shf.r.wrap.b32 	%r1428, %r1425, %r1426, 5;
	mov.b64 	%rd3462, {%r1428, %r1427};
	add.s64 	%rd3463, %rd3456, %rd3462;
	xor.b64  	%rd3464, %rd3458, %rd3463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd3464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd3464;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 18;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 18;
	mov.b64 	%rd3465, {%r1432, %r1431};
	not.b64 	%rd3466, %rd3460;
	not.b64 	%rd3467, %rd3465;
	and.b64  	%rd3468, %rd3466, %rd3467;
	not.b64 	%rd3469, %rd3463;
	and.b64  	%rd3470, %rd3468, %rd3469;
	and.b64  	%rd3471, %rd3465, %rd3466;
	and.b64  	%rd3472, %rd3471, %rd3463;
	or.b64  	%rd3473, %rd3472, %rd3470;
	and.b64  	%rd3474, %rd3463, %rd3467;
	and.b64  	%rd3475, %rd3474, %rd3460;
	or.b64  	%rd3476, %rd3473, %rd3475;
	and.b64  	%rd3477, %rd3465, %rd3460;
	and.b64  	%rd3478, %rd3477, %rd3469;
	or.b64  	%rd3479, %rd3476, %rd3478;
	xor.b64  	%rd3480, %rd3479, %rd3462;
	and.b64  	%rd3481, %rd3468, %rd3463;
	and.b64  	%rd3482, %rd3466, %rd3469;
	and.b64  	%rd3483, %rd3482, %rd3465;
	or.b64  	%rd3484, %rd3483, %rd3481;
	and.b64  	%rd3485, %rd3460, %rd3467;
	and.b64  	%rd3486, %rd3485, %rd3469;
	or.b64  	%rd3487, %rd3484, %rd3486;
	and.b64  	%rd3488, %rd3477, %rd3463;
	or.b64  	%rd3489, %rd3487, %rd3488;
	xor.b64  	%rd3490, %rd3489, %rd3480;
	add.s64 	%rd3491, %rd3309, %rd3343;
	add.s64 	%rd3492, %rd3491, 5987067145339136795;
	xor.b64  	%rd3493, %rd3492, %rd3412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1433}, %rd3493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1434,%dummy}, %rd3493;
	}
	shf.l.wrap.b32 	%r1435, %r1434, %r1433, 4;
	shf.l.wrap.b32 	%r1436, %r1433, %r1434, 4;
	mov.b64 	%rd3494, {%r1436, %r1435};
	add.s64 	%rd3495, %rd3424, %rd3494;
	xor.b64  	%rd3496, %rd3309, %rd3495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd3496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd3496;
	}
	shf.l.wrap.b32 	%r1439, %r1438, %r1437, 21;
	shf.l.wrap.b32 	%r1440, %r1437, %r1438, 21;
	mov.b64 	%rd3497, {%r1440, %r1439};
	add.s64 	%rd3498, %rd102, %rd3497;
	add.s64 	%rd3499, %rd3498, %rd3492;
	xor.b64  	%rd3500, %rd3499, %rd3494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd3500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd3500;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 5;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 5;
	mov.b64 	%rd3501, {%r1444, %r1443};
	add.s64 	%rd3502, %rd3495, %rd3501;
	xor.b64  	%rd3503, %rd3497, %rd3502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd3503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd3503;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 18;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 18;
	mov.b64 	%rd3504, {%r1448, %r1447};
	not.b64 	%rd3505, %rd3499;
	not.b64 	%rd3506, %rd3504;
	and.b64  	%rd3507, %rd3505, %rd3506;
	not.b64 	%rd3508, %rd3502;
	and.b64  	%rd3509, %rd3507, %rd3508;
	and.b64  	%rd3510, %rd3504, %rd3505;
	and.b64  	%rd3511, %rd3510, %rd3502;
	or.b64  	%rd3512, %rd3511, %rd3509;
	and.b64  	%rd3513, %rd3502, %rd3506;
	and.b64  	%rd3514, %rd3513, %rd3499;
	or.b64  	%rd3515, %rd3512, %rd3514;
	and.b64  	%rd3516, %rd3504, %rd3499;
	and.b64  	%rd3517, %rd3516, %rd3508;
	or.b64  	%rd3518, %rd3515, %rd3517;
	xor.b64  	%rd3519, %rd3518, %rd3501;
	and.b64  	%rd3520, %rd3507, %rd3502;
	and.b64  	%rd3521, %rd3505, %rd3508;
	and.b64  	%rd3522, %rd3521, %rd3504;
	or.b64  	%rd3523, %rd3522, %rd3520;
	and.b64  	%rd3524, %rd3499, %rd3506;
	and.b64  	%rd3525, %rd3524, %rd3508;
	or.b64  	%rd3526, %rd3523, %rd3525;
	and.b64  	%rd3527, %rd3516, %rd3502;
	or.b64  	%rd3528, %rd3526, %rd3527;
	xor.b64  	%rd3529, %rd3528, %rd3519;
	add.s64 	%rd3530, %rd3348, %rd3382;
	add.s64 	%rd3531, %rd3530, 7194923001510760043;
	xor.b64  	%rd3532, %rd3531, %rd3451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd3532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1450,%dummy}, %rd3532;
	}
	shf.l.wrap.b32 	%r1451, %r1450, %r1449, 4;
	shf.l.wrap.b32 	%r1452, %r1449, %r1450, 4;
	mov.b64 	%rd3533, {%r1452, %r1451};
	add.s64 	%rd3534, %rd3307, %rd3533;
	xor.b64  	%rd3535, %rd3348, %rd3534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1453}, %rd3535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd3535;
	}
	shf.l.wrap.b32 	%r1455, %r1454, %r1453, 21;
	shf.l.wrap.b32 	%r1456, %r1453, %r1454, 21;
	mov.b64 	%rd3536, {%r1456, %r1455};
	add.s64 	%rd3537, %rd3536, %rd3531;
	add.s64 	%rd3538, %rd3537, -3341658112243943424;
	xor.b64  	%rd3539, %rd3538, %rd3533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1457,%dummy}, %rd3539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1458}, %rd3539;
	}
	shf.r.wrap.b32 	%r1459, %r1458, %r1457, 5;
	shf.r.wrap.b32 	%r1460, %r1457, %r1458, 5;
	mov.b64 	%rd3540, {%r1460, %r1459};
	add.s64 	%rd3541, %rd3534, %rd3540;
	xor.b64  	%rd3542, %rd3536, %rd3541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1461,%dummy}, %rd3542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1462}, %rd3542;
	}
	shf.r.wrap.b32 	%r1463, %r1462, %r1461, 18;
	shf.r.wrap.b32 	%r1464, %r1461, %r1462, 18;
	mov.b64 	%rd3543, {%r1464, %r1463};
	not.b64 	%rd3544, %rd3538;
	not.b64 	%rd3545, %rd3543;
	and.b64  	%rd3546, %rd3544, %rd3545;
	not.b64 	%rd3547, %rd3541;
	and.b64  	%rd3548, %rd3546, %rd3547;
	and.b64  	%rd3549, %rd3543, %rd3544;
	and.b64  	%rd3550, %rd3549, %rd3541;
	or.b64  	%rd3551, %rd3550, %rd3548;
	and.b64  	%rd3552, %rd3541, %rd3545;
	and.b64  	%rd3553, %rd3552, %rd3538;
	or.b64  	%rd3554, %rd3551, %rd3553;
	and.b64  	%rd3555, %rd3543, %rd3538;
	and.b64  	%rd3556, %rd3555, %rd3547;
	or.b64  	%rd3557, %rd3554, %rd3556;
	xor.b64  	%rd3558, %rd3557, %rd3540;
	and.b64  	%rd3559, %rd3546, %rd3541;
	and.b64  	%rd3560, %rd3544, %rd3547;
	and.b64  	%rd3561, %rd3560, %rd3543;
	or.b64  	%rd3562, %rd3561, %rd3559;
	and.b64  	%rd3563, %rd3538, %rd3545;
	and.b64  	%rd3564, %rd3563, %rd3547;
	or.b64  	%rd3565, %rd3562, %rd3564;
	and.b64  	%rd3566, %rd3555, %rd3541;
	or.b64  	%rd3567, %rd3565, %rd3566;
	xor.b64  	%rd3568, %rd3567, %rd3558;
	add.s64 	%rd3569, %rd143, %rd3387;
	add.s64 	%rd3570, %rd3569, %rd3421;
	xor.b64  	%rd3571, %rd3570, %rd3334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1465}, %rd3571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd3571;
	}
	shf.l.wrap.b32 	%r1467, %r1466, %r1465, 4;
	shf.l.wrap.b32 	%r1468, %r1465, %r1466, 4;
	mov.b64 	%rd3572, {%r1468, %r1467};
	add.s64 	%rd3573, %rd3346, %rd3572;
	xor.b64  	%rd3574, %rd3387, %rd3573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd3574;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd3574;
	}
	shf.l.wrap.b32 	%r1471, %r1470, %r1469, 21;
	shf.l.wrap.b32 	%r1472, %r1469, %r1470, 21;
	mov.b64 	%rd3575, {%r1472, %r1471};
	add.s64 	%rd3576, %rd3575, %rd3570;
	add.s64 	%rd3577, %rd3576, 7251808426145424871;
	xor.b64  	%rd3578, %rd3577, %rd3572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1473,%dummy}, %rd3578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1474}, %rd3578;
	}
	shf.r.wrap.b32 	%r1475, %r1474, %r1473, 5;
	shf.r.wrap.b32 	%r1476, %r1473, %r1474, 5;
	mov.b64 	%rd3579, {%r1476, %r1475};
	add.s64 	%rd3580, %rd3573, %rd3579;
	xor.b64  	%rd3581, %rd3575, %rd3580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd3581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd3581;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 18;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 18;
	mov.b64 	%rd3582, {%r1480, %r1479};
	not.b64 	%rd3583, %rd3577;
	not.b64 	%rd3584, %rd3582;
	and.b64  	%rd3585, %rd3583, %rd3584;
	not.b64 	%rd3586, %rd3580;
	and.b64  	%rd3587, %rd3585, %rd3586;
	and.b64  	%rd3588, %rd3582, %rd3583;
	and.b64  	%rd3589, %rd3588, %rd3580;
	or.b64  	%rd3590, %rd3589, %rd3587;
	and.b64  	%rd3591, %rd3580, %rd3584;
	and.b64  	%rd3592, %rd3591, %rd3577;
	or.b64  	%rd3593, %rd3590, %rd3592;
	and.b64  	%rd3594, %rd3582, %rd3577;
	and.b64  	%rd3595, %rd3594, %rd3586;
	or.b64  	%rd3596, %rd3593, %rd3595;
	xor.b64  	%rd3597, %rd3596, %rd3579;
	and.b64  	%rd3598, %rd3585, %rd3580;
	and.b64  	%rd3599, %rd3583, %rd3586;
	and.b64  	%rd3600, %rd3599, %rd3582;
	or.b64  	%rd3601, %rd3600, %rd3598;
	and.b64  	%rd3602, %rd3577, %rd3584;
	and.b64  	%rd3603, %rd3602, %rd3586;
	or.b64  	%rd3604, %rd3601, %rd3603;
	and.b64  	%rd3605, %rd3594, %rd3580;
	or.b64  	%rd3606, %rd3604, %rd3605;
	xor.b64  	%rd3607, %rd3606, %rd3597;
	add.s64 	%rd3608, %rd3504, %rd3460;
	add.s64 	%rd3609, %rd3608, -4972871168744972288;
	xor.b64  	%rd3610, %rd3609, %rd3607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1481}, %rd3610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1482,%dummy}, %rd3610;
	}
	shf.l.wrap.b32 	%r1483, %r1482, %r1481, 4;
	shf.l.wrap.b32 	%r1484, %r1481, %r1482, 4;
	mov.b64 	%rd3611, {%r1484, %r1483};
	add.s64 	%rd3612, %rd3541, %rd3611;
	xor.b64  	%rd3613, %rd3504, %rd3612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd3613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd3613;
	}
	shf.l.wrap.b32 	%r1487, %r1486, %r1485, 21;
	shf.l.wrap.b32 	%r1488, %r1485, %r1486, 21;
	mov.b64 	%rd3614, {%r1488, %r1487};
	add.s64 	%rd3615, %rd10, %rd3614;
	add.s64 	%rd3616, %rd3615, %rd3609;
	xor.b64  	%rd3617, %rd3616, %rd3611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd3617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd3617;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 5;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 5;
	mov.b64 	%rd3618, {%r1492, %r1491};
	add.s64 	%rd3619, %rd3612, %rd3618;
	xor.b64  	%rd3620, %rd3614, %rd3619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1493,%dummy}, %rd3620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1494}, %rd3620;
	}
	shf.r.wrap.b32 	%r1495, %r1494, %r1493, 18;
	shf.r.wrap.b32 	%r1496, %r1493, %r1494, 18;
	mov.b64 	%rd3621, {%r1496, %r1495};
	not.b64 	%rd3622, %rd3616;
	not.b64 	%rd3623, %rd3621;
	and.b64  	%rd3624, %rd3622, %rd3623;
	not.b64 	%rd3625, %rd3619;
	and.b64  	%rd3626, %rd3624, %rd3625;
	and.b64  	%rd3627, %rd3621, %rd3622;
	and.b64  	%rd3628, %rd3627, %rd3619;
	or.b64  	%rd3629, %rd3628, %rd3626;
	and.b64  	%rd3630, %rd3619, %rd3623;
	and.b64  	%rd3631, %rd3630, %rd3616;
	or.b64  	%rd3632, %rd3629, %rd3631;
	and.b64  	%rd3633, %rd3621, %rd3616;
	and.b64  	%rd3634, %rd3633, %rd3625;
	or.b64  	%rd3635, %rd3632, %rd3634;
	xor.b64  	%rd3636, %rd3635, %rd3618;
	and.b64  	%rd3637, %rd3624, %rd3619;
	and.b64  	%rd3638, %rd3622, %rd3625;
	and.b64  	%rd3639, %rd3638, %rd3621;
	or.b64  	%rd3640, %rd3639, %rd3637;
	and.b64  	%rd3641, %rd3616, %rd3623;
	and.b64  	%rd3642, %rd3641, %rd3625;
	or.b64  	%rd3643, %rd3640, %rd3642;
	and.b64  	%rd3644, %rd3633, %rd3619;
	or.b64  	%rd3645, %rd3643, %rd3644;
	xor.b64  	%rd3646, %rd3645, %rd3636;
	add.s64 	%rd3647, %rd60, %rd3543;
	add.s64 	%rd3648, %rd3647, %rd3499;
	xor.b64  	%rd3649, %rd3648, %rd3490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd3649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd3649;
	}
	shf.l.wrap.b32 	%r1499, %r1498, %r1497, 4;
	shf.l.wrap.b32 	%r1500, %r1497, %r1498, 4;
	mov.b64 	%rd3650, {%r1500, %r1499};
	add.s64 	%rd3651, %rd3580, %rd3650;
	xor.b64  	%rd3652, %rd3543, %rd3651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd3652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd3652;
	}
	shf.l.wrap.b32 	%r1503, %r1502, %r1501, 21;
	shf.l.wrap.b32 	%r1504, %r1501, %r1502, 21;
	mov.b64 	%rd3653, {%r1504, %r1503};
	add.s64 	%rd3654, %rd18, %rd3653;
	add.s64 	%rd3655, %rd3654, %rd3648;
	xor.b64  	%rd3656, %rd3655, %rd3650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1505,%dummy}, %rd3656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1506}, %rd3656;
	}
	shf.r.wrap.b32 	%r1507, %r1506, %r1505, 5;
	shf.r.wrap.b32 	%r1508, %r1505, %r1506, 5;
	mov.b64 	%rd3657, {%r1508, %r1507};
	add.s64 	%rd3658, %rd3651, %rd3657;
	xor.b64  	%rd3659, %rd3653, %rd3658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1509,%dummy}, %rd3659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1510}, %rd3659;
	}
	shf.r.wrap.b32 	%r1511, %r1510, %r1509, 18;
	shf.r.wrap.b32 	%r1512, %r1509, %r1510, 18;
	mov.b64 	%rd3660, {%r1512, %r1511};
	not.b64 	%rd3661, %rd3655;
	not.b64 	%rd3662, %rd3660;
	and.b64  	%rd3663, %rd3661, %rd3662;
	not.b64 	%rd3664, %rd3658;
	and.b64  	%rd3665, %rd3663, %rd3664;
	and.b64  	%rd3666, %rd3660, %rd3661;
	and.b64  	%rd3667, %rd3666, %rd3658;
	or.b64  	%rd3668, %rd3667, %rd3665;
	and.b64  	%rd3669, %rd3658, %rd3662;
	and.b64  	%rd3670, %rd3669, %rd3655;
	or.b64  	%rd3671, %rd3668, %rd3670;
	and.b64  	%rd3672, %rd3660, %rd3655;
	and.b64  	%rd3673, %rd3672, %rd3664;
	or.b64  	%rd3674, %rd3671, %rd3673;
	xor.b64  	%rd3675, %rd3674, %rd3657;
	and.b64  	%rd3676, %rd3663, %rd3658;
	and.b64  	%rd3677, %rd3661, %rd3664;
	and.b64  	%rd3678, %rd3677, %rd3660;
	or.b64  	%rd3679, %rd3678, %rd3676;
	and.b64  	%rd3680, %rd3655, %rd3662;
	and.b64  	%rd3681, %rd3680, %rd3664;
	or.b64  	%rd3682, %rd3679, %rd3681;
	and.b64  	%rd3683, %rd3672, %rd3658;
	or.b64  	%rd3684, %rd3682, %rd3683;
	xor.b64  	%rd3685, %rd3684, %rd3675;
	add.s64 	%rd3686, %rd135, %rd3582;
	add.s64 	%rd3687, %rd3686, %rd3538;
	xor.b64  	%rd3688, %rd3687, %rd3529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1513}, %rd3688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd3688;
	}
	shf.l.wrap.b32 	%r1515, %r1514, %r1513, 4;
	shf.l.wrap.b32 	%r1516, %r1513, %r1514, 4;
	mov.b64 	%rd3689, {%r1516, %r1515};
	add.s64 	%rd3690, %rd3463, %rd3689;
	xor.b64  	%rd3691, %rd3582, %rd3690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd3691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd3691;
	}
	shf.l.wrap.b32 	%r1519, %r1518, %r1517, 21;
	shf.l.wrap.b32 	%r1520, %r1517, %r1518, 21;
	mov.b64 	%rd3692, {%r1520, %r1519};
	add.s64 	%rd3693, %rd3692, %rd3687;
	add.s64 	%rd3694, %rd3693, -7446784132049864704;
	xor.b64  	%rd3695, %rd3694, %rd3689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1521,%dummy}, %rd3695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1522}, %rd3695;
	}
	shf.r.wrap.b32 	%r1523, %r1522, %r1521, 5;
	shf.r.wrap.b32 	%r1524, %r1521, %r1522, 5;
	mov.b64 	%rd3696, {%r1524, %r1523};
	add.s64 	%rd3697, %rd3690, %rd3696;
	xor.b64  	%rd3698, %rd3692, %rd3697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd3698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd3698;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 18;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 18;
	mov.b64 	%rd3699, {%r1528, %r1527};
	not.b64 	%rd3700, %rd3694;
	not.b64 	%rd3701, %rd3699;
	and.b64  	%rd3702, %rd3700, %rd3701;
	not.b64 	%rd3703, %rd3697;
	and.b64  	%rd3704, %rd3702, %rd3703;
	and.b64  	%rd3705, %rd3699, %rd3700;
	and.b64  	%rd3706, %rd3705, %rd3697;
	or.b64  	%rd3707, %rd3706, %rd3704;
	and.b64  	%rd3708, %rd3697, %rd3701;
	and.b64  	%rd3709, %rd3708, %rd3694;
	or.b64  	%rd3710, %rd3707, %rd3709;
	and.b64  	%rd3711, %rd3699, %rd3694;
	and.b64  	%rd3712, %rd3711, %rd3703;
	or.b64  	%rd3713, %rd3710, %rd3712;
	xor.b64  	%rd3714, %rd3713, %rd3696;
	and.b64  	%rd3715, %rd3702, %rd3697;
	and.b64  	%rd3716, %rd3700, %rd3703;
	and.b64  	%rd3717, %rd3716, %rd3699;
	or.b64  	%rd3718, %rd3717, %rd3715;
	and.b64  	%rd3719, %rd3694, %rd3701;
	and.b64  	%rd3720, %rd3719, %rd3703;
	or.b64  	%rd3721, %rd3718, %rd3720;
	and.b64  	%rd3722, %rd3711, %rd3697;
	or.b64  	%rd3723, %rd3721, %rd3722;
	xor.b64  	%rd3724, %rd3723, %rd3714;
	add.s64 	%rd3725, %rd52, %rd3465;
	add.s64 	%rd3726, %rd3725, %rd3577;
	xor.b64  	%rd3727, %rd3726, %rd3568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1529}, %rd3727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1530,%dummy}, %rd3727;
	}
	shf.l.wrap.b32 	%r1531, %r1530, %r1529, 4;
	shf.l.wrap.b32 	%r1532, %r1529, %r1530, 4;
	mov.b64 	%rd3728, {%r1532, %r1531};
	add.s64 	%rd3729, %rd3502, %rd3728;
	xor.b64  	%rd3730, %rd3465, %rd3729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd3730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd3730;
	}
	shf.l.wrap.b32 	%r1535, %r1534, %r1533, 21;
	shf.l.wrap.b32 	%r1536, %r1533, %r1534, 21;
	mov.b64 	%rd3731, {%r1536, %r1535};
	add.s64 	%rd3732, %rd94, %rd3731;
	add.s64 	%rd3733, %rd3732, %rd3726;
	xor.b64  	%rd3734, %rd3733, %rd3728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd3734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd3734;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 5;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 5;
	mov.b64 	%rd3735, {%r1540, %r1539};
	add.s64 	%rd3736, %rd3729, %rd3735;
	xor.b64  	%rd3737, %rd3731, %rd3736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1541,%dummy}, %rd3737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1542}, %rd3737;
	}
	shf.r.wrap.b32 	%r1543, %r1542, %r1541, 18;
	shf.r.wrap.b32 	%r1544, %r1541, %r1542, 18;
	mov.b64 	%rd3738, {%r1544, %r1543};
	not.b64 	%rd3739, %rd3733;
	not.b64 	%rd3740, %rd3738;
	and.b64  	%rd3741, %rd3739, %rd3740;
	not.b64 	%rd3742, %rd3736;
	and.b64  	%rd3743, %rd3741, %rd3742;
	and.b64  	%rd3744, %rd3738, %rd3739;
	and.b64  	%rd3745, %rd3744, %rd3736;
	or.b64  	%rd3746, %rd3745, %rd3743;
	and.b64  	%rd3747, %rd3736, %rd3740;
	and.b64  	%rd3748, %rd3747, %rd3733;
	or.b64  	%rd3749, %rd3746, %rd3748;
	and.b64  	%rd3750, %rd3738, %rd3733;
	and.b64  	%rd3751, %rd3750, %rd3742;
	or.b64  	%rd3752, %rd3749, %rd3751;
	xor.b64  	%rd3753, %rd3752, %rd3735;
	and.b64  	%rd3754, %rd3741, %rd3736;
	and.b64  	%rd3755, %rd3739, %rd3742;
	and.b64  	%rd3756, %rd3755, %rd3738;
	or.b64  	%rd3757, %rd3756, %rd3754;
	and.b64  	%rd3758, %rd3733, %rd3740;
	and.b64  	%rd3759, %rd3758, %rd3742;
	or.b64  	%rd3760, %rd3757, %rd3759;
	and.b64  	%rd3761, %rd3750, %rd3736;
	or.b64  	%rd3762, %rd3760, %rd3761;
	xor.b64  	%rd3763, %rd3762, %rd3753;
	add.s64 	%rd3764, %rd3738, %rd3616;
	add.s64 	%rd3765, %rd3764, 5987067145339136795;
	xor.b64  	%rd3766, %rd3765, %rd3685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd3766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1546,%dummy}, %rd3766;
	}
	shf.l.wrap.b32 	%r1547, %r1546, %r1545, 4;
	shf.l.wrap.b32 	%r1548, %r1545, %r1546, 4;
	mov.b64 	%rd3767, {%r1548, %r1547};
	add.s64 	%rd3768, %rd3697, %rd3767;
	xor.b64  	%rd3769, %rd3738, %rd3768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1549}, %rd3769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1550,%dummy}, %rd3769;
	}
	shf.l.wrap.b32 	%r1551, %r1550, %r1549, 21;
	shf.l.wrap.b32 	%r1552, %r1549, %r1550, 21;
	mov.b64 	%rd3770, {%r1552, %r1551};
	add.s64 	%rd3771, %rd3770, %rd3765;
	add.s64 	%rd3772, %rd3771, -7446784132049864704;
	xor.b64  	%rd3773, %rd3772, %rd3767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1553,%dummy}, %rd3773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1554}, %rd3773;
	}
	shf.r.wrap.b32 	%r1555, %r1554, %r1553, 5;
	shf.r.wrap.b32 	%r1556, %r1553, %r1554, 5;
	mov.b64 	%rd3774, {%r1556, %r1555};
	add.s64 	%rd3775, %rd3768, %rd3774;
	xor.b64  	%rd3776, %rd3770, %rd3775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1557,%dummy}, %rd3776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1558}, %rd3776;
	}
	shf.r.wrap.b32 	%r1559, %r1558, %r1557, 18;
	shf.r.wrap.b32 	%r1560, %r1557, %r1558, 18;
	mov.b64 	%rd3777, {%r1560, %r1559};
	not.b64 	%rd3778, %rd3772;
	not.b64 	%rd3779, %rd3777;
	and.b64  	%rd3780, %rd3778, %rd3779;
	not.b64 	%rd3781, %rd3775;
	and.b64  	%rd3782, %rd3780, %rd3781;
	and.b64  	%rd3783, %rd3777, %rd3778;
	and.b64  	%rd3784, %rd3783, %rd3775;
	or.b64  	%rd3785, %rd3784, %rd3782;
	and.b64  	%rd3786, %rd3775, %rd3779;
	and.b64  	%rd3787, %rd3786, %rd3772;
	or.b64  	%rd3788, %rd3785, %rd3787;
	and.b64  	%rd3789, %rd3777, %rd3772;
	and.b64  	%rd3790, %rd3789, %rd3781;
	or.b64  	%rd3791, %rd3788, %rd3790;
	xor.b64  	%rd3792, %rd3791, %rd3774;
	and.b64  	%rd3793, %rd3780, %rd3775;
	and.b64  	%rd3794, %rd3778, %rd3781;
	and.b64  	%rd3795, %rd3794, %rd3777;
	or.b64  	%rd3796, %rd3795, %rd3793;
	and.b64  	%rd3797, %rd3772, %rd3779;
	and.b64  	%rd3798, %rd3797, %rd3781;
	or.b64  	%rd3799, %rd3796, %rd3798;
	and.b64  	%rd3800, %rd3789, %rd3775;
	or.b64  	%rd3801, %rd3799, %rd3800;
	xor.b64  	%rd3802, %rd3801, %rd3792;
	add.s64 	%rd3803, %rd18, %rd3621;
	add.s64 	%rd3804, %rd3803, %rd3655;
	xor.b64  	%rd3805, %rd3804, %rd3724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1561}, %rd3805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1562,%dummy}, %rd3805;
	}
	shf.l.wrap.b32 	%r1563, %r1562, %r1561, 4;
	shf.l.wrap.b32 	%r1564, %r1561, %r1562, 4;
	mov.b64 	%rd3806, {%r1564, %r1563};
	add.s64 	%rd3807, %rd3736, %rd3806;
	xor.b64  	%rd3808, %rd3621, %rd3807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1565}, %rd3808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd3808;
	}
	shf.l.wrap.b32 	%r1567, %r1566, %r1565, 21;
	shf.l.wrap.b32 	%r1568, %r1565, %r1566, 21;
	mov.b64 	%rd3809, {%r1568, %r1567};
	add.s64 	%rd3810, %rd3809, %rd3804;
	add.s64 	%rd3811, %rd3810, -4972871168744972288;
	xor.b64  	%rd3812, %rd3811, %rd3806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd3812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd3812;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 5;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 5;
	mov.b64 	%rd3813, {%r1572, %r1571};
	add.s64 	%rd3814, %rd3807, %rd3813;
	xor.b64  	%rd3815, %rd3809, %rd3814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd3815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd3815;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 18;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 18;
	mov.b64 	%rd3816, {%r1576, %r1575};
	not.b64 	%rd3817, %rd3811;
	not.b64 	%rd3818, %rd3816;
	and.b64  	%rd3819, %rd3817, %rd3818;
	not.b64 	%rd3820, %rd3814;
	and.b64  	%rd3821, %rd3819, %rd3820;
	and.b64  	%rd3822, %rd3816, %rd3817;
	and.b64  	%rd3823, %rd3822, %rd3814;
	or.b64  	%rd3824, %rd3823, %rd3821;
	and.b64  	%rd3825, %rd3814, %rd3818;
	and.b64  	%rd3826, %rd3825, %rd3811;
	or.b64  	%rd3827, %rd3824, %rd3826;
	and.b64  	%rd3828, %rd3816, %rd3811;
	and.b64  	%rd3829, %rd3828, %rd3820;
	or.b64  	%rd3830, %rd3827, %rd3829;
	xor.b64  	%rd3831, %rd3830, %rd3813;
	and.b64  	%rd3832, %rd3819, %rd3814;
	and.b64  	%rd3833, %rd3817, %rd3820;
	and.b64  	%rd3834, %rd3833, %rd3816;
	or.b64  	%rd3835, %rd3834, %rd3832;
	and.b64  	%rd3836, %rd3811, %rd3818;
	and.b64  	%rd3837, %rd3836, %rd3820;
	or.b64  	%rd3838, %rd3835, %rd3837;
	and.b64  	%rd3839, %rd3828, %rd3814;
	or.b64  	%rd3840, %rd3838, %rd3839;
	xor.b64  	%rd3841, %rd3840, %rd3831;
	add.s64 	%rd3842, %rd60, %rd3660;
	add.s64 	%rd3843, %rd3842, %rd3694;
	xor.b64  	%rd3844, %rd3843, %rd3763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1577}, %rd3844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1578,%dummy}, %rd3844;
	}
	shf.l.wrap.b32 	%r1579, %r1578, %r1577, 4;
	shf.l.wrap.b32 	%r1580, %r1577, %r1578, 4;
	mov.b64 	%rd3845, {%r1580, %r1579};
	add.s64 	%rd3846, %rd3619, %rd3845;
	xor.b64  	%rd3847, %rd3660, %rd3846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1581}, %rd3847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1582,%dummy}, %rd3847;
	}
	shf.l.wrap.b32 	%r1583, %r1582, %r1581, 21;
	shf.l.wrap.b32 	%r1584, %r1581, %r1582, 21;
	mov.b64 	%rd3848, {%r1584, %r1583};
	add.s64 	%rd3849, %rd94, %rd3848;
	add.s64 	%rd3850, %rd3849, %rd3843;
	xor.b64  	%rd3851, %rd3850, %rd3845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1585,%dummy}, %rd3851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1586}, %rd3851;
	}
	shf.r.wrap.b32 	%r1587, %r1586, %r1585, 5;
	shf.r.wrap.b32 	%r1588, %r1585, %r1586, 5;
	mov.b64 	%rd3852, {%r1588, %r1587};
	add.s64 	%rd3853, %rd3846, %rd3852;
	xor.b64  	%rd3854, %rd3848, %rd3853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd3854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd3854;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 18;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 18;
	mov.b64 	%rd3855, {%r1592, %r1591};
	not.b64 	%rd3856, %rd3850;
	not.b64 	%rd3857, %rd3855;
	and.b64  	%rd3858, %rd3856, %rd3857;
	not.b64 	%rd3859, %rd3853;
	and.b64  	%rd3860, %rd3858, %rd3859;
	and.b64  	%rd3861, %rd3855, %rd3856;
	and.b64  	%rd3862, %rd3861, %rd3853;
	or.b64  	%rd3863, %rd3862, %rd3860;
	and.b64  	%rd3864, %rd3853, %rd3857;
	and.b64  	%rd3865, %rd3864, %rd3850;
	or.b64  	%rd3866, %rd3863, %rd3865;
	and.b64  	%rd3867, %rd3855, %rd3850;
	and.b64  	%rd3868, %rd3867, %rd3859;
	or.b64  	%rd3869, %rd3866, %rd3868;
	xor.b64  	%rd3870, %rd3869, %rd3852;
	and.b64  	%rd3871, %rd3858, %rd3853;
	and.b64  	%rd3872, %rd3856, %rd3859;
	and.b64  	%rd3873, %rd3872, %rd3855;
	or.b64  	%rd3874, %rd3873, %rd3871;
	and.b64  	%rd3875, %rd3850, %rd3857;
	and.b64  	%rd3876, %rd3875, %rd3859;
	or.b64  	%rd3877, %rd3874, %rd3876;
	and.b64  	%rd3878, %rd3867, %rd3853;
	or.b64  	%rd3879, %rd3877, %rd3878;
	xor.b64  	%rd3880, %rd3879, %rd3870;
	add.s64 	%rd3881, %rd3699, %rd3733;
	add.s64 	%rd3882, %rd3881, 7251808426145424871;
	xor.b64  	%rd3883, %rd3882, %rd3646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd3883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd3883;
	}
	shf.l.wrap.b32 	%r1595, %r1594, %r1593, 4;
	shf.l.wrap.b32 	%r1596, %r1593, %r1594, 4;
	mov.b64 	%rd3884, {%r1596, %r1595};
	add.s64 	%rd3885, %rd3658, %rd3884;
	xor.b64  	%rd3886, %rd3699, %rd3885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd3886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1598,%dummy}, %rd3886;
	}
	shf.l.wrap.b32 	%r1599, %r1598, %r1597, 21;
	shf.l.wrap.b32 	%r1600, %r1597, %r1598, 21;
	mov.b64 	%rd3887, {%r1600, %r1599};
	add.s64 	%rd3888, %rd3887, %rd3882;
	add.s64 	%rd3889, %rd3888, 7194923001510760043;
	xor.b64  	%rd3890, %rd3889, %rd3884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1601,%dummy}, %rd3890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1602}, %rd3890;
	}
	shf.r.wrap.b32 	%r1603, %r1602, %r1601, 5;
	shf.r.wrap.b32 	%r1604, %r1601, %r1602, 5;
	mov.b64 	%rd3891, {%r1604, %r1603};
	add.s64 	%rd3892, %rd3885, %rd3891;
	xor.b64  	%rd3893, %rd3887, %rd3892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1605,%dummy}, %rd3893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1606}, %rd3893;
	}
	shf.r.wrap.b32 	%r1607, %r1606, %r1605, 18;
	shf.r.wrap.b32 	%r1608, %r1605, %r1606, 18;
	mov.b64 	%rd3894, {%r1608, %r1607};
	not.b64 	%rd3895, %rd3889;
	not.b64 	%rd3896, %rd3894;
	and.b64  	%rd3897, %rd3895, %rd3896;
	not.b64 	%rd3898, %rd3892;
	and.b64  	%rd3899, %rd3897, %rd3898;
	and.b64  	%rd3900, %rd3894, %rd3895;
	and.b64  	%rd3901, %rd3900, %rd3892;
	or.b64  	%rd3902, %rd3901, %rd3899;
	and.b64  	%rd3903, %rd3892, %rd3896;
	and.b64  	%rd3904, %rd3903, %rd3889;
	or.b64  	%rd3905, %rd3902, %rd3904;
	and.b64  	%rd3906, %rd3894, %rd3889;
	and.b64  	%rd3907, %rd3906, %rd3898;
	or.b64  	%rd3908, %rd3905, %rd3907;
	xor.b64  	%rd3909, %rd3908, %rd3891;
	and.b64  	%rd3910, %rd3897, %rd3892;
	and.b64  	%rd3911, %rd3895, %rd3898;
	and.b64  	%rd3912, %rd3911, %rd3894;
	or.b64  	%rd3913, %rd3912, %rd3910;
	and.b64  	%rd3914, %rd3889, %rd3896;
	and.b64  	%rd3915, %rd3914, %rd3898;
	or.b64  	%rd3916, %rd3913, %rd3915;
	and.b64  	%rd3917, %rd3906, %rd3892;
	or.b64  	%rd3918, %rd3916, %rd3917;
	xor.b64  	%rd3919, %rd3918, %rd3909;
	add.s64 	%rd3920, %rd3816, %rd3772;
	add.s64 	%rd3921, %rd3920, -2856998567947870208;
	xor.b64  	%rd3922, %rd3921, %rd3919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1609}, %rd3922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1610,%dummy}, %rd3922;
	}
	shf.l.wrap.b32 	%r1611, %r1610, %r1609, 4;
	shf.l.wrap.b32 	%r1612, %r1609, %r1610, 4;
	mov.b64 	%rd3923, {%r1612, %r1611};
	add.s64 	%rd3924, %rd3853, %rd3923;
	xor.b64  	%rd3925, %rd3816, %rd3924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd3925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd3925;
	}
	shf.l.wrap.b32 	%r1615, %r1614, %r1613, 21;
	shf.l.wrap.b32 	%r1616, %r1613, %r1614, 21;
	mov.b64 	%rd3926, {%r1616, %r1615};
	add.s64 	%rd3927, %rd3926, %rd3921;
	add.s64 	%rd3928, %rd3927, 3450974313248867902;
	xor.b64  	%rd3929, %rd3928, %rd3923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1617,%dummy}, %rd3929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1618}, %rd3929;
	}
	shf.r.wrap.b32 	%r1619, %r1618, %r1617, 5;
	shf.r.wrap.b32 	%r1620, %r1617, %r1618, 5;
	mov.b64 	%rd3930, {%r1620, %r1619};
	add.s64 	%rd3931, %rd3924, %rd3930;
	xor.b64  	%rd3932, %rd3926, %rd3931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1621,%dummy}, %rd3932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1622}, %rd3932;
	}
	shf.r.wrap.b32 	%r1623, %r1622, %r1621, 18;
	shf.r.wrap.b32 	%r1624, %r1621, %r1622, 18;
	mov.b64 	%rd3933, {%r1624, %r1623};
	not.b64 	%rd3934, %rd3928;
	not.b64 	%rd3935, %rd3933;
	and.b64  	%rd3936, %rd3934, %rd3935;
	not.b64 	%rd3937, %rd3931;
	and.b64  	%rd3938, %rd3936, %rd3937;
	and.b64  	%rd3939, %rd3933, %rd3934;
	and.b64  	%rd3940, %rd3939, %rd3931;
	or.b64  	%rd3941, %rd3940, %rd3938;
	and.b64  	%rd3942, %rd3931, %rd3935;
	and.b64  	%rd3943, %rd3942, %rd3928;
	or.b64  	%rd3944, %rd3941, %rd3943;
	and.b64  	%rd3945, %rd3933, %rd3928;
	and.b64  	%rd3946, %rd3945, %rd3937;
	or.b64  	%rd3947, %rd3944, %rd3946;
	xor.b64  	%rd3948, %rd3947, %rd3930;
	and.b64  	%rd3949, %rd3936, %rd3931;
	and.b64  	%rd3950, %rd3934, %rd3937;
	and.b64  	%rd3951, %rd3950, %rd3933;
	or.b64  	%rd3952, %rd3951, %rd3949;
	and.b64  	%rd3953, %rd3928, %rd3935;
	and.b64  	%rd3954, %rd3953, %rd3937;
	or.b64  	%rd3955, %rd3952, %rd3954;
	and.b64  	%rd3956, %rd3945, %rd3931;
	or.b64  	%rd3957, %rd3955, %rd3956;
	xor.b64  	%rd3958, %rd3957, %rd3948;
	add.s64 	%rd3959, %rd143, %rd3855;
	add.s64 	%rd3960, %rd3959, %rd3811;
	xor.b64  	%rd3961, %rd3960, %rd3802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd3961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1626,%dummy}, %rd3961;
	}
	shf.l.wrap.b32 	%r1627, %r1626, %r1625, 4;
	shf.l.wrap.b32 	%r1628, %r1625, %r1626, 4;
	mov.b64 	%rd3962, {%r1628, %r1627};
	add.s64 	%rd3963, %rd3892, %rd3962;
	xor.b64  	%rd3964, %rd3855, %rd3963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd3964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1630,%dummy}, %rd3964;
	}
	shf.l.wrap.b32 	%r1631, %r1630, %r1629, 21;
	shf.l.wrap.b32 	%r1632, %r1629, %r1630, 21;
	mov.b64 	%rd3965, {%r1632, %r1631};
	add.s64 	%rd3966, %rd52, %rd3965;
	add.s64 	%rd3967, %rd3966, %rd3960;
	xor.b64  	%rd3968, %rd3967, %rd3962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1633,%dummy}, %rd3968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1634}, %rd3968;
	}
	shf.r.wrap.b32 	%r1635, %r1634, %r1633, 5;
	shf.r.wrap.b32 	%r1636, %r1633, %r1634, 5;
	mov.b64 	%rd3969, {%r1636, %r1635};
	add.s64 	%rd3970, %rd3963, %rd3969;
	xor.b64  	%rd3971, %rd3965, %rd3970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1637,%dummy}, %rd3971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1638}, %rd3971;
	}
	shf.r.wrap.b32 	%r1639, %r1638, %r1637, 18;
	shf.r.wrap.b32 	%r1640, %r1637, %r1638, 18;
	mov.b64 	%rd3972, {%r1640, %r1639};
	not.b64 	%rd3973, %rd3967;
	not.b64 	%rd3974, %rd3972;
	and.b64  	%rd3975, %rd3973, %rd3974;
	not.b64 	%rd3976, %rd3970;
	and.b64  	%rd3977, %rd3975, %rd3976;
	and.b64  	%rd3978, %rd3972, %rd3973;
	and.b64  	%rd3979, %rd3978, %rd3970;
	or.b64  	%rd3980, %rd3979, %rd3977;
	and.b64  	%rd3981, %rd3970, %rd3974;
	and.b64  	%rd3982, %rd3981, %rd3967;
	or.b64  	%rd3983, %rd3980, %rd3982;
	and.b64  	%rd3984, %rd3972, %rd3967;
	and.b64  	%rd3985, %rd3984, %rd3976;
	or.b64  	%rd3986, %rd3983, %rd3985;
	xor.b64  	%rd3987, %rd3986, %rd3969;
	and.b64  	%rd3988, %rd3975, %rd3970;
	and.b64  	%rd3989, %rd3973, %rd3976;
	and.b64  	%rd3990, %rd3989, %rd3972;
	or.b64  	%rd3991, %rd3990, %rd3988;
	and.b64  	%rd3992, %rd3967, %rd3974;
	and.b64  	%rd3993, %rd3992, %rd3976;
	or.b64  	%rd3994, %rd3991, %rd3993;
	and.b64  	%rd3995, %rd3984, %rd3970;
	or.b64  	%rd3996, %rd3994, %rd3995;
	xor.b64  	%rd3997, %rd3996, %rd3987;
	add.s64 	%rd3998, %rd10, %rd3894;
	add.s64 	%rd3999, %rd3998, %rd3850;
	xor.b64  	%rd4000, %rd3999, %rd3841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1641}, %rd4000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1642,%dummy}, %rd4000;
	}
	shf.l.wrap.b32 	%r1643, %r1642, %r1641, 4;
	shf.l.wrap.b32 	%r1644, %r1641, %r1642, 4;
	mov.b64 	%rd4001, {%r1644, %r1643};
	add.s64 	%rd4002, %rd3775, %rd4001;
	xor.b64  	%rd4003, %rd3894, %rd4002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd4003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1646,%dummy}, %rd4003;
	}
	shf.l.wrap.b32 	%r1647, %r1646, %r1645, 21;
	shf.l.wrap.b32 	%r1648, %r1645, %r1646, 21;
	mov.b64 	%rd4004, {%r1648, %r1647};
	add.s64 	%rd4005, %rd135, %rd4004;
	add.s64 	%rd4006, %rd4005, %rd3999;
	xor.b64  	%rd4007, %rd4006, %rd4001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1649,%dummy}, %rd4007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1650}, %rd4007;
	}
	shf.r.wrap.b32 	%r1651, %r1650, %r1649, 5;
	shf.r.wrap.b32 	%r1652, %r1649, %r1650, 5;
	mov.b64 	%rd4008, {%r1652, %r1651};
	add.s64 	%rd4009, %rd4002, %rd4008;
	xor.b64  	%rd4010, %rd4004, %rd4009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1653,%dummy}, %rd4010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1654}, %rd4010;
	}
	shf.r.wrap.b32 	%r1655, %r1654, %r1653, 18;
	shf.r.wrap.b32 	%r1656, %r1653, %r1654, 18;
	mov.b64 	%rd4011, {%r1656, %r1655};
	not.b64 	%rd4012, %rd4006;
	not.b64 	%rd4013, %rd4011;
	and.b64  	%rd4014, %rd4012, %rd4013;
	not.b64 	%rd4015, %rd4009;
	and.b64  	%rd4016, %rd4014, %rd4015;
	and.b64  	%rd4017, %rd4011, %rd4012;
	and.b64  	%rd4018, %rd4017, %rd4009;
	or.b64  	%rd4019, %rd4018, %rd4016;
	and.b64  	%rd4020, %rd4009, %rd4013;
	and.b64  	%rd4021, %rd4020, %rd4006;
	or.b64  	%rd4022, %rd4019, %rd4021;
	and.b64  	%rd4023, %rd4011, %rd4006;
	and.b64  	%rd4024, %rd4023, %rd4015;
	or.b64  	%rd4025, %rd4022, %rd4024;
	xor.b64  	%rd4026, %rd4025, %rd4008;
	and.b64  	%rd4027, %rd4014, %rd4009;
	and.b64  	%rd4028, %rd4012, %rd4015;
	and.b64  	%rd4029, %rd4028, %rd4011;
	or.b64  	%rd4030, %rd4029, %rd4027;
	and.b64  	%rd4031, %rd4006, %rd4013;
	and.b64  	%rd4032, %rd4031, %rd4015;
	or.b64  	%rd4033, %rd4030, %rd4032;
	and.b64  	%rd4034, %rd4023, %rd4009;
	or.b64  	%rd4035, %rd4033, %rd4034;
	xor.b64  	%rd4036, %rd4035, %rd4026;
	add.s64 	%rd4037, %rd102, %rd3777;
	add.s64 	%rd4038, %rd4037, %rd3889;
	xor.b64  	%rd4039, %rd4038, %rd3880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1657}, %rd4039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1658,%dummy}, %rd4039;
	}
	shf.l.wrap.b32 	%r1659, %r1658, %r1657, 4;
	shf.l.wrap.b32 	%r1660, %r1657, %r1658, 4;
	mov.b64 	%rd4040, {%r1660, %r1659};
	add.s64 	%rd4041, %rd3814, %rd4040;
	xor.b64  	%rd4042, %rd3777, %rd4041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1661}, %rd4042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd4042;
	}
	shf.l.wrap.b32 	%r1663, %r1662, %r1661, 21;
	shf.l.wrap.b32 	%r1664, %r1661, %r1662, 21;
	mov.b64 	%rd4043, {%r1664, %r1663};
	add.s64 	%rd4044, %rd4043, %rd4038;
	add.s64 	%rd4045, %rd4044, -3341658112243943424;
	xor.b64  	%rd4046, %rd4045, %rd4040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1665,%dummy}, %rd4046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1666}, %rd4046;
	}
	shf.r.wrap.b32 	%r1667, %r1666, %r1665, 5;
	shf.r.wrap.b32 	%r1668, %r1665, %r1666, 5;
	mov.b64 	%rd4047, {%r1668, %r1667};
	add.s64 	%rd4048, %rd4041, %rd4047;
	xor.b64  	%rd4049, %rd4043, %rd4048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1669,%dummy}, %rd4049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1670}, %rd4049;
	}
	shf.r.wrap.b32 	%r1671, %r1670, %r1669, 18;
	shf.r.wrap.b32 	%r1672, %r1669, %r1670, 18;
	mov.b64 	%rd4050, {%r1672, %r1671};
	not.b64 	%rd4051, %rd4045;
	not.b64 	%rd4052, %rd4050;
	and.b64  	%rd4053, %rd4051, %rd4052;
	not.b64 	%rd4054, %rd4048;
	and.b64  	%rd4055, %rd4053, %rd4054;
	and.b64  	%rd4056, %rd4050, %rd4051;
	and.b64  	%rd4057, %rd4056, %rd4048;
	or.b64  	%rd4058, %rd4057, %rd4055;
	and.b64  	%rd4059, %rd4048, %rd4052;
	and.b64  	%rd4060, %rd4059, %rd4045;
	or.b64  	%rd4061, %rd4058, %rd4060;
	and.b64  	%rd4062, %rd4050, %rd4045;
	and.b64  	%rd4063, %rd4062, %rd4054;
	or.b64  	%rd4064, %rd4061, %rd4063;
	xor.b64  	%rd4065, %rd4064, %rd4047;
	and.b64  	%rd4066, %rd4053, %rd4048;
	and.b64  	%rd4067, %rd4051, %rd4054;
	and.b64  	%rd4068, %rd4067, %rd4050;
	or.b64  	%rd4069, %rd4068, %rd4066;
	and.b64  	%rd4070, %rd4045, %rd4052;
	and.b64  	%rd4071, %rd4070, %rd4054;
	or.b64  	%rd4072, %rd4069, %rd4071;
	and.b64  	%rd4073, %rd4062, %rd4048;
	or.b64  	%rd4074, %rd4072, %rd4073;
	xor.b64  	%rd4075, %rd4074, %rd4065;
	add.s64 	%rd4076, %rd4050, %rd3928;
	add.s64 	%rd4077, %rd4076, -3341658112243943424;
	xor.b64  	%rd4078, %rd4077, %rd3997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd4078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd4078;
	}
	shf.l.wrap.b32 	%r1675, %r1674, %r1673, 4;
	shf.l.wrap.b32 	%r1676, %r1673, %r1674, 4;
	mov.b64 	%rd4079, {%r1676, %r1675};
	add.s64 	%rd4080, %rd4009, %rd4079;
	xor.b64  	%rd4081, %rd4050, %rd4080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1677}, %rd4081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd4081;
	}
	shf.l.wrap.b32 	%r1679, %r1678, %r1677, 21;
	shf.l.wrap.b32 	%r1680, %r1677, %r1678, 21;
	mov.b64 	%rd4082, {%r1680, %r1679};
	add.s64 	%rd4083, %rd135, %rd4082;
	add.s64 	%rd4084, %rd4083, %rd4077;
	xor.b64  	%rd4085, %rd4084, %rd4079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1681,%dummy}, %rd4085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1682}, %rd4085;
	}
	shf.r.wrap.b32 	%r1683, %r1682, %r1681, 5;
	shf.r.wrap.b32 	%r1684, %r1681, %r1682, 5;
	mov.b64 	%rd4086, {%r1684, %r1683};
	add.s64 	%rd4087, %rd4080, %rd4086;
	xor.b64  	%rd4088, %rd4082, %rd4087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1685,%dummy}, %rd4088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1686}, %rd4088;
	}
	shf.r.wrap.b32 	%r1687, %r1686, %r1685, 18;
	shf.r.wrap.b32 	%r1688, %r1685, %r1686, 18;
	mov.b64 	%rd4089, {%r1688, %r1687};
	not.b64 	%rd4090, %rd4084;
	not.b64 	%rd4091, %rd4089;
	and.b64  	%rd4092, %rd4090, %rd4091;
	not.b64 	%rd4093, %rd4087;
	and.b64  	%rd4094, %rd4092, %rd4093;
	and.b64  	%rd4095, %rd4089, %rd4090;
	and.b64  	%rd4096, %rd4095, %rd4087;
	or.b64  	%rd4097, %rd4096, %rd4094;
	and.b64  	%rd4098, %rd4087, %rd4091;
	and.b64  	%rd4099, %rd4098, %rd4084;
	or.b64  	%rd4100, %rd4097, %rd4099;
	and.b64  	%rd4101, %rd4089, %rd4084;
	and.b64  	%rd4102, %rd4101, %rd4093;
	or.b64  	%rd4103, %rd4100, %rd4102;
	xor.b64  	%rd4104, %rd4103, %rd4086;
	and.b64  	%rd4105, %rd4092, %rd4087;
	and.b64  	%rd4106, %rd4090, %rd4093;
	and.b64  	%rd4107, %rd4106, %rd4089;
	or.b64  	%rd4108, %rd4107, %rd4105;
	and.b64  	%rd4109, %rd4084, %rd4091;
	and.b64  	%rd4110, %rd4109, %rd4093;
	or.b64  	%rd4111, %rd4108, %rd4110;
	and.b64  	%rd4112, %rd4101, %rd4087;
	or.b64  	%rd4113, %rd4111, %rd4112;
	xor.b64  	%rd4114, %rd4113, %rd4104;
	add.s64 	%rd4115, %rd10, %rd3933;
	add.s64 	%rd4116, %rd4115, %rd3967;
	xor.b64  	%rd4117, %rd4116, %rd4036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd4117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1690,%dummy}, %rd4117;
	}
	shf.l.wrap.b32 	%r1691, %r1690, %r1689, 4;
	shf.l.wrap.b32 	%r1692, %r1689, %r1690, 4;
	mov.b64 	%rd4118, {%r1692, %r1691};
	add.s64 	%rd4119, %rd4048, %rd4118;
	xor.b64  	%rd4120, %rd3933, %rd4119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd4120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd4120;
	}
	shf.l.wrap.b32 	%r1695, %r1694, %r1693, 21;
	shf.l.wrap.b32 	%r1696, %r1693, %r1694, 21;
	mov.b64 	%rd4121, {%r1696, %r1695};
	add.s64 	%rd4122, %rd52, %rd4121;
	add.s64 	%rd4123, %rd4122, %rd4116;
	xor.b64  	%rd4124, %rd4123, %rd4118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1697,%dummy}, %rd4124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1698}, %rd4124;
	}
	shf.r.wrap.b32 	%r1699, %r1698, %r1697, 5;
	shf.r.wrap.b32 	%r1700, %r1697, %r1698, 5;
	mov.b64 	%rd4125, {%r1700, %r1699};
	add.s64 	%rd4126, %rd4119, %rd4125;
	xor.b64  	%rd4127, %rd4121, %rd4126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1701,%dummy}, %rd4127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1702}, %rd4127;
	}
	shf.r.wrap.b32 	%r1703, %r1702, %r1701, 18;
	shf.r.wrap.b32 	%r1704, %r1701, %r1702, 18;
	mov.b64 	%rd4128, {%r1704, %r1703};
	not.b64 	%rd4129, %rd4123;
	not.b64 	%rd4130, %rd4128;
	and.b64  	%rd4131, %rd4129, %rd4130;
	not.b64 	%rd4132, %rd4126;
	and.b64  	%rd4133, %rd4131, %rd4132;
	and.b64  	%rd4134, %rd4128, %rd4129;
	and.b64  	%rd4135, %rd4134, %rd4126;
	or.b64  	%rd4136, %rd4135, %rd4133;
	and.b64  	%rd4137, %rd4126, %rd4130;
	and.b64  	%rd4138, %rd4137, %rd4123;
	or.b64  	%rd4139, %rd4136, %rd4138;
	and.b64  	%rd4140, %rd4128, %rd4123;
	and.b64  	%rd4141, %rd4140, %rd4132;
	or.b64  	%rd4142, %rd4139, %rd4141;
	xor.b64  	%rd4143, %rd4142, %rd4125;
	and.b64  	%rd4144, %rd4131, %rd4126;
	and.b64  	%rd4145, %rd4129, %rd4132;
	and.b64  	%rd4146, %rd4145, %rd4128;
	or.b64  	%rd4147, %rd4146, %rd4144;
	and.b64  	%rd4148, %rd4123, %rd4130;
	and.b64  	%rd4149, %rd4148, %rd4132;
	or.b64  	%rd4150, %rd4147, %rd4149;
	and.b64  	%rd4151, %rd4140, %rd4126;
	or.b64  	%rd4152, %rd4150, %rd4151;
	xor.b64  	%rd4153, %rd4152, %rd4143;
	add.s64 	%rd4154, %rd3972, %rd4006;
	add.s64 	%rd4155, %rd4154, -4972871168744972288;
	xor.b64  	%rd4156, %rd4155, %rd4075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd4156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1706,%dummy}, %rd4156;
	}
	shf.l.wrap.b32 	%r1707, %r1706, %r1705, 4;
	shf.l.wrap.b32 	%r1708, %r1705, %r1706, 4;
	mov.b64 	%rd4157, {%r1708, %r1707};
	add.s64 	%rd4158, %rd3931, %rd4157;
	xor.b64  	%rd4159, %rd3972, %rd4158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd4159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd4159;
	}
	shf.l.wrap.b32 	%r1711, %r1710, %r1709, 21;
	shf.l.wrap.b32 	%r1712, %r1709, %r1710, 21;
	mov.b64 	%rd4160, {%r1712, %r1711};
	add.s64 	%rd4161, %rd4160, %rd4155;
	add.s64 	%rd4162, %rd4161, 7251808426145424871;
	xor.b64  	%rd4163, %rd4162, %rd4157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1713,%dummy}, %rd4163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1714}, %rd4163;
	}
	shf.r.wrap.b32 	%r1715, %r1714, %r1713, 5;
	shf.r.wrap.b32 	%r1716, %r1713, %r1714, 5;
	mov.b64 	%rd4164, {%r1716, %r1715};
	add.s64 	%rd4165, %rd4158, %rd4164;
	xor.b64  	%rd4166, %rd4160, %rd4165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1717,%dummy}, %rd4166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1718}, %rd4166;
	}
	shf.r.wrap.b32 	%r1719, %r1718, %r1717, 18;
	shf.r.wrap.b32 	%r1720, %r1717, %r1718, 18;
	mov.b64 	%rd4167, {%r1720, %r1719};
	not.b64 	%rd4168, %rd4162;
	not.b64 	%rd4169, %rd4167;
	and.b64  	%rd4170, %rd4168, %rd4169;
	not.b64 	%rd4171, %rd4165;
	and.b64  	%rd4172, %rd4170, %rd4171;
	and.b64  	%rd4173, %rd4167, %rd4168;
	and.b64  	%rd4174, %rd4173, %rd4165;
	or.b64  	%rd4175, %rd4174, %rd4172;
	and.b64  	%rd4176, %rd4165, %rd4169;
	and.b64  	%rd4177, %rd4176, %rd4162;
	or.b64  	%rd4178, %rd4175, %rd4177;
	and.b64  	%rd4179, %rd4167, %rd4162;
	and.b64  	%rd4180, %rd4179, %rd4171;
	or.b64  	%rd4181, %rd4178, %rd4180;
	xor.b64  	%rd4182, %rd4181, %rd4164;
	and.b64  	%rd4183, %rd4170, %rd4165;
	and.b64  	%rd4184, %rd4168, %rd4171;
	and.b64  	%rd4185, %rd4184, %rd4167;
	or.b64  	%rd4186, %rd4185, %rd4183;
	and.b64  	%rd4187, %rd4162, %rd4169;
	and.b64  	%rd4188, %rd4187, %rd4171;
	or.b64  	%rd4189, %rd4186, %rd4188;
	and.b64  	%rd4190, %rd4179, %rd4165;
	or.b64  	%rd4191, %rd4189, %rd4190;
	xor.b64  	%rd4192, %rd4191, %rd4182;
	add.s64 	%rd4193, %rd4011, %rd4045;
	add.s64 	%rd4194, %rd4193, -2856998567947870208;
	xor.b64  	%rd4195, %rd4194, %rd3958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd4195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1722,%dummy}, %rd4195;
	}
	shf.l.wrap.b32 	%r1723, %r1722, %r1721, 4;
	shf.l.wrap.b32 	%r1724, %r1721, %r1722, 4;
	mov.b64 	%rd4196, {%r1724, %r1723};
	add.s64 	%rd4197, %rd3970, %rd4196;
	xor.b64  	%rd4198, %rd4011, %rd4197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1725}, %rd4198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd4198;
	}
	shf.l.wrap.b32 	%r1727, %r1726, %r1725, 21;
	shf.l.wrap.b32 	%r1728, %r1725, %r1726, 21;
	mov.b64 	%rd4199, {%r1728, %r1727};
	add.s64 	%rd4200, %rd4199, %rd4194;
	add.s64 	%rd4201, %rd4200, -7446784132049864704;
	xor.b64  	%rd4202, %rd4201, %rd4196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1729,%dummy}, %rd4202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1730}, %rd4202;
	}
	shf.r.wrap.b32 	%r1731, %r1730, %r1729, 5;
	shf.r.wrap.b32 	%r1732, %r1729, %r1730, 5;
	mov.b64 	%rd4203, {%r1732, %r1731};
	add.s64 	%rd4204, %rd4197, %rd4203;
	xor.b64  	%rd4205, %rd4199, %rd4204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1733,%dummy}, %rd4205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1734}, %rd4205;
	}
	shf.r.wrap.b32 	%r1735, %r1734, %r1733, 18;
	shf.r.wrap.b32 	%r1736, %r1733, %r1734, 18;
	mov.b64 	%rd4206, {%r1736, %r1735};
	not.b64 	%rd4207, %rd4201;
	not.b64 	%rd4208, %rd4206;
	and.b64  	%rd4209, %rd4207, %rd4208;
	not.b64 	%rd4210, %rd4204;
	and.b64  	%rd4211, %rd4209, %rd4210;
	and.b64  	%rd4212, %rd4206, %rd4207;
	and.b64  	%rd4213, %rd4212, %rd4204;
	or.b64  	%rd4214, %rd4213, %rd4211;
	and.b64  	%rd4215, %rd4204, %rd4208;
	and.b64  	%rd4216, %rd4215, %rd4201;
	or.b64  	%rd4217, %rd4214, %rd4216;
	and.b64  	%rd4218, %rd4206, %rd4201;
	and.b64  	%rd4219, %rd4218, %rd4210;
	or.b64  	%rd4220, %rd4217, %rd4219;
	xor.b64  	%rd4221, %rd4220, %rd4203;
	and.b64  	%rd4222, %rd4209, %rd4204;
	and.b64  	%rd4223, %rd4207, %rd4210;
	and.b64  	%rd4224, %rd4223, %rd4206;
	or.b64  	%rd4225, %rd4224, %rd4222;
	and.b64  	%rd4226, %rd4201, %rd4208;
	and.b64  	%rd4227, %rd4226, %rd4210;
	or.b64  	%rd4228, %rd4225, %rd4227;
	and.b64  	%rd4229, %rd4218, %rd4204;
	or.b64  	%rd4230, %rd4228, %rd4229;
	xor.b64  	%rd4231, %rd4230, %rd4221;
	add.s64 	%rd4232, %rd143, %rd4128;
	add.s64 	%rd4233, %rd4232, %rd4084;
	xor.b64  	%rd4234, %rd4233, %rd4231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd4234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1738,%dummy}, %rd4234;
	}
	shf.l.wrap.b32 	%r1739, %r1738, %r1737, 4;
	shf.l.wrap.b32 	%r1740, %r1737, %r1738, 4;
	mov.b64 	%rd4235, {%r1740, %r1739};
	add.s64 	%rd4236, %rd4165, %rd4235;
	xor.b64  	%rd4237, %rd4128, %rd4236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1741}, %rd4237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd4237;
	}
	shf.l.wrap.b32 	%r1743, %r1742, %r1741, 21;
	shf.l.wrap.b32 	%r1744, %r1741, %r1742, 21;
	mov.b64 	%rd4238, {%r1744, %r1743};
	add.s64 	%rd4239, %rd60, %rd4238;
	add.s64 	%rd4240, %rd4239, %rd4233;
	xor.b64  	%rd4241, %rd4240, %rd4235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1745,%dummy}, %rd4241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1746}, %rd4241;
	}
	shf.r.wrap.b32 	%r1747, %r1746, %r1745, 5;
	shf.r.wrap.b32 	%r1748, %r1745, %r1746, 5;
	mov.b64 	%rd4242, {%r1748, %r1747};
	add.s64 	%rd4243, %rd4236, %rd4242;
	xor.b64  	%rd4244, %rd4238, %rd4243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1749,%dummy}, %rd4244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1750}, %rd4244;
	}
	shf.r.wrap.b32 	%r1751, %r1750, %r1749, 18;
	shf.r.wrap.b32 	%r1752, %r1749, %r1750, 18;
	mov.b64 	%rd4245, {%r1752, %r1751};
	not.b64 	%rd4246, %rd4240;
	not.b64 	%rd4247, %rd4245;
	and.b64  	%rd4248, %rd4246, %rd4247;
	not.b64 	%rd4249, %rd4243;
	and.b64  	%rd4250, %rd4248, %rd4249;
	and.b64  	%rd4251, %rd4245, %rd4246;
	and.b64  	%rd4252, %rd4251, %rd4243;
	or.b64  	%rd4253, %rd4252, %rd4250;
	and.b64  	%rd4254, %rd4243, %rd4247;
	and.b64  	%rd4255, %rd4254, %rd4240;
	or.b64  	%rd4256, %rd4253, %rd4255;
	and.b64  	%rd4257, %rd4245, %rd4240;
	and.b64  	%rd4258, %rd4257, %rd4249;
	or.b64  	%rd4259, %rd4256, %rd4258;
	xor.b64  	%rd4260, %rd4259, %rd4242;
	and.b64  	%rd4261, %rd4248, %rd4243;
	and.b64  	%rd4262, %rd4246, %rd4249;
	and.b64  	%rd4263, %rd4262, %rd4245;
	or.b64  	%rd4264, %rd4263, %rd4261;
	and.b64  	%rd4265, %rd4240, %rd4247;
	and.b64  	%rd4266, %rd4265, %rd4249;
	or.b64  	%rd4267, %rd4264, %rd4266;
	and.b64  	%rd4268, %rd4257, %rd4243;
	or.b64  	%rd4269, %rd4267, %rd4268;
	xor.b64  	%rd4270, %rd4269, %rd4260;
	add.s64 	%rd4271, %rd4167, %rd4123;
	add.s64 	%rd4272, %rd4271, 3450974313248867902;
	xor.b64  	%rd4273, %rd4272, %rd4114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd4273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1754,%dummy}, %rd4273;
	}
	shf.l.wrap.b32 	%r1755, %r1754, %r1753, 4;
	shf.l.wrap.b32 	%r1756, %r1753, %r1754, 4;
	mov.b64 	%rd4274, {%r1756, %r1755};
	add.s64 	%rd4275, %rd4204, %rd4274;
	xor.b64  	%rd4276, %rd4167, %rd4275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1757}, %rd4276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd4276;
	}
	shf.l.wrap.b32 	%r1759, %r1758, %r1757, 21;
	shf.l.wrap.b32 	%r1760, %r1757, %r1758, 21;
	mov.b64 	%rd4277, {%r1760, %r1759};
	add.s64 	%rd4278, %rd94, %rd4277;
	add.s64 	%rd4279, %rd4278, %rd4272;
	xor.b64  	%rd4280, %rd4279, %rd4274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1761,%dummy}, %rd4280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1762}, %rd4280;
	}
	shf.r.wrap.b32 	%r1763, %r1762, %r1761, 5;
	shf.r.wrap.b32 	%r1764, %r1761, %r1762, 5;
	mov.b64 	%rd4281, {%r1764, %r1763};
	add.s64 	%rd4282, %rd4275, %rd4281;
	xor.b64  	%rd4283, %rd4277, %rd4282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1765,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1766}, %rd4283;
	}
	shf.r.wrap.b32 	%r1767, %r1766, %r1765, 18;
	shf.r.wrap.b32 	%r1768, %r1765, %r1766, 18;
	mov.b64 	%rd4284, {%r1768, %r1767};
	not.b64 	%rd4285, %rd4279;
	not.b64 	%rd4286, %rd4284;
	and.b64  	%rd4287, %rd4285, %rd4286;
	not.b64 	%rd4288, %rd4282;
	and.b64  	%rd4289, %rd4287, %rd4288;
	and.b64  	%rd4290, %rd4284, %rd4285;
	and.b64  	%rd4291, %rd4290, %rd4282;
	or.b64  	%rd4292, %rd4291, %rd4289;
	and.b64  	%rd4293, %rd4282, %rd4286;
	and.b64  	%rd4294, %rd4293, %rd4279;
	or.b64  	%rd4295, %rd4292, %rd4294;
	and.b64  	%rd4296, %rd4284, %rd4279;
	and.b64  	%rd4297, %rd4296, %rd4288;
	or.b64  	%rd4298, %rd4295, %rd4297;
	xor.b64  	%rd4299, %rd4298, %rd4281;
	and.b64  	%rd4300, %rd4287, %rd4282;
	and.b64  	%rd4301, %rd4285, %rd4288;
	and.b64  	%rd4302, %rd4301, %rd4284;
	or.b64  	%rd4303, %rd4302, %rd4300;
	and.b64  	%rd4304, %rd4279, %rd4286;
	and.b64  	%rd4305, %rd4304, %rd4288;
	or.b64  	%rd4306, %rd4303, %rd4305;
	and.b64  	%rd4307, %rd4296, %rd4282;
	or.b64  	%rd4308, %rd4306, %rd4307;
	xor.b64  	%rd4309, %rd4308, %rd4299;
	add.s64 	%rd4310, %rd18, %rd4206;
	add.s64 	%rd4311, %rd4310, %rd4162;
	xor.b64  	%rd4312, %rd4311, %rd4153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd4312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1770,%dummy}, %rd4312;
	}
	shf.l.wrap.b32 	%r1771, %r1770, %r1769, 4;
	shf.l.wrap.b32 	%r1772, %r1769, %r1770, 4;
	mov.b64 	%rd4313, {%r1772, %r1771};
	add.s64 	%rd4314, %rd4087, %rd4313;
	xor.b64  	%rd4315, %rd4206, %rd4314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1773}, %rd4315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd4315;
	}
	shf.l.wrap.b32 	%r1775, %r1774, %r1773, 21;
	shf.l.wrap.b32 	%r1776, %r1773, %r1774, 21;
	mov.b64 	%rd4316, {%r1776, %r1775};
	add.s64 	%rd4317, %rd102, %rd4316;
	add.s64 	%rd4318, %rd4317, %rd4311;
	xor.b64  	%rd4319, %rd4318, %rd4313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1777,%dummy}, %rd4319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1778}, %rd4319;
	}
	shf.r.wrap.b32 	%r1779, %r1778, %r1777, 5;
	shf.r.wrap.b32 	%r1780, %r1777, %r1778, 5;
	mov.b64 	%rd4320, {%r1780, %r1779};
	add.s64 	%rd4321, %rd4314, %rd4320;
	xor.b64  	%rd4322, %rd4316, %rd4321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1781,%dummy}, %rd4322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1782}, %rd4322;
	}
	shf.r.wrap.b32 	%r1783, %r1782, %r1781, 18;
	shf.r.wrap.b32 	%r1784, %r1781, %r1782, 18;
	mov.b64 	%rd4323, {%r1784, %r1783};
	not.b64 	%rd4324, %rd4318;
	not.b64 	%rd4325, %rd4323;
	and.b64  	%rd4326, %rd4324, %rd4325;
	not.b64 	%rd4327, %rd4321;
	and.b64  	%rd4328, %rd4326, %rd4327;
	and.b64  	%rd4329, %rd4323, %rd4324;
	and.b64  	%rd4330, %rd4329, %rd4321;
	or.b64  	%rd4331, %rd4330, %rd4328;
	and.b64  	%rd4332, %rd4321, %rd4325;
	and.b64  	%rd4333, %rd4332, %rd4318;
	or.b64  	%rd4334, %rd4331, %rd4333;
	and.b64  	%rd4335, %rd4323, %rd4318;
	and.b64  	%rd4336, %rd4335, %rd4327;
	or.b64  	%rd4337, %rd4334, %rd4336;
	xor.b64  	%rd4338, %rd4337, %rd4320;
	and.b64  	%rd4339, %rd4326, %rd4321;
	and.b64  	%rd4340, %rd4324, %rd4327;
	and.b64  	%rd4341, %rd4340, %rd4323;
	or.b64  	%rd4342, %rd4341, %rd4339;
	and.b64  	%rd4343, %rd4318, %rd4325;
	and.b64  	%rd4344, %rd4343, %rd4327;
	or.b64  	%rd4345, %rd4342, %rd4344;
	and.b64  	%rd4346, %rd4335, %rd4321;
	or.b64  	%rd4347, %rd4345, %rd4346;
	xor.b64  	%rd4348, %rd4347, %rd4338;
	add.s64 	%rd4349, %rd4089, %rd4201;
	add.s64 	%rd4350, %rd4349, 5987067145339136795;
	xor.b64  	%rd4351, %rd4350, %rd4192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd4351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1786,%dummy}, %rd4351;
	}
	shf.l.wrap.b32 	%r1787, %r1786, %r1785, 4;
	shf.l.wrap.b32 	%r1788, %r1785, %r1786, 4;
	mov.b64 	%rd4352, {%r1788, %r1787};
	add.s64 	%rd4353, %rd4126, %rd4352;
	xor.b64  	%rd4354, %rd4089, %rd4353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd4354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd4354;
	}
	shf.l.wrap.b32 	%r1791, %r1790, %r1789, 21;
	shf.l.wrap.b32 	%r1792, %r1789, %r1790, 21;
	mov.b64 	%rd4355, {%r1792, %r1791};
	add.s64 	%rd4356, %rd4355, %rd4350;
	add.s64 	%rd4357, %rd4356, 7194923001510760043;
	xor.b64  	%rd4358, %rd4357, %rd4352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1793,%dummy}, %rd4358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1794}, %rd4358;
	}
	shf.r.wrap.b32 	%r1795, %r1794, %r1793, 5;
	shf.r.wrap.b32 	%r1796, %r1793, %r1794, 5;
	mov.b64 	%rd4359, {%r1796, %r1795};
	add.s64 	%rd4360, %rd4353, %rd4359;
	xor.b64  	%rd4361, %rd4355, %rd4360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd4361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd4361;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 18;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 18;
	mov.b64 	%rd4362, {%r1800, %r1799};
	not.b64 	%rd4363, %rd4357;
	not.b64 	%rd4364, %rd4362;
	and.b64  	%rd4365, %rd4363, %rd4364;
	not.b64 	%rd4366, %rd4360;
	and.b64  	%rd4367, %rd4365, %rd4366;
	and.b64  	%rd4368, %rd4362, %rd4363;
	and.b64  	%rd4369, %rd4368, %rd4360;
	or.b64  	%rd4370, %rd4369, %rd4367;
	and.b64  	%rd4371, %rd4360, %rd4364;
	and.b64  	%rd4372, %rd4371, %rd4357;
	or.b64  	%rd4373, %rd4370, %rd4372;
	and.b64  	%rd4374, %rd4362, %rd4357;
	and.b64  	%rd4375, %rd4374, %rd4366;
	or.b64  	%rd4376, %rd4373, %rd4375;
	xor.b64  	%rd4377, %rd4376, %rd4359;
	and.b64  	%rd4378, %rd4365, %rd4360;
	and.b64  	%rd4379, %rd4363, %rd4366;
	and.b64  	%rd4380, %rd4379, %rd4362;
	or.b64  	%rd4381, %rd4380, %rd4378;
	and.b64  	%rd4382, %rd4357, %rd4364;
	and.b64  	%rd4383, %rd4382, %rd4366;
	or.b64  	%rd4384, %rd4381, %rd4383;
	and.b64  	%rd4385, %rd4374, %rd4360;
	or.b64  	%rd4386, %rd4384, %rd4385;
	xor.b64  	%rd4387, %rd4386, %rd4377;
	add.s64 	%rd4388, %rd18, %rd4362;
	add.s64 	%rd4389, %rd4388, %rd4240;
	xor.b64  	%rd4390, %rd4389, %rd4309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd4390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1802,%dummy}, %rd4390;
	}
	shf.l.wrap.b32 	%r1803, %r1802, %r1801, 4;
	shf.l.wrap.b32 	%r1804, %r1801, %r1802, 4;
	mov.b64 	%rd4391, {%r1804, %r1803};
	add.s64 	%rd4392, %rd4321, %rd4391;
	xor.b64  	%rd4393, %rd4362, %rd4392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd4393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd4393;
	}
	shf.l.wrap.b32 	%r1807, %r1806, %r1805, 21;
	shf.l.wrap.b32 	%r1808, %r1805, %r1806, 21;
	mov.b64 	%rd4394, {%r1808, %r1807};
	add.s64 	%rd4395, %rd4394, %rd4389;
	add.s64 	%rd4396, %rd4395, -3341658112243943424;
	xor.b64  	%rd4397, %rd4396, %rd4391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1809,%dummy}, %rd4397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1810}, %rd4397;
	}
	shf.r.wrap.b32 	%r1811, %r1810, %r1809, 5;
	shf.r.wrap.b32 	%r1812, %r1809, %r1810, 5;
	mov.b64 	%rd4398, {%r1812, %r1811};
	add.s64 	%rd4399, %rd4392, %rd4398;
	xor.b64  	%rd4400, %rd4394, %rd4399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1813,%dummy}, %rd4400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1814}, %rd4400;
	}
	shf.r.wrap.b32 	%r1815, %r1814, %r1813, 18;
	shf.r.wrap.b32 	%r1816, %r1813, %r1814, 18;
	mov.b64 	%rd4401, {%r1816, %r1815};
	not.b64 	%rd4402, %rd4396;
	not.b64 	%rd4403, %rd4401;
	and.b64  	%rd4404, %rd4402, %rd4403;
	not.b64 	%rd4405, %rd4399;
	and.b64  	%rd4406, %rd4404, %rd4405;
	and.b64  	%rd4407, %rd4401, %rd4402;
	and.b64  	%rd4408, %rd4407, %rd4399;
	or.b64  	%rd4409, %rd4408, %rd4406;
	and.b64  	%rd4410, %rd4399, %rd4403;
	and.b64  	%rd4411, %rd4410, %rd4396;
	or.b64  	%rd4412, %rd4409, %rd4411;
	and.b64  	%rd4413, %rd4401, %rd4396;
	and.b64  	%rd4414, %rd4413, %rd4405;
	or.b64  	%rd4415, %rd4412, %rd4414;
	xor.b64  	%rd4416, %rd4415, %rd4398;
	and.b64  	%rd4417, %rd4404, %rd4399;
	and.b64  	%rd4418, %rd4402, %rd4405;
	and.b64  	%rd4419, %rd4418, %rd4401;
	or.b64  	%rd4420, %rd4419, %rd4417;
	and.b64  	%rd4421, %rd4396, %rd4403;
	and.b64  	%rd4422, %rd4421, %rd4405;
	or.b64  	%rd4423, %rd4420, %rd4422;
	and.b64  	%rd4424, %rd4413, %rd4399;
	or.b64  	%rd4425, %rd4423, %rd4424;
	xor.b64  	%rd4426, %rd4425, %rd4416;
	add.s64 	%rd4427, %rd135, %rd4245;
	add.s64 	%rd4428, %rd4427, %rd4279;
	xor.b64  	%rd4429, %rd4428, %rd4348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd4429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1818,%dummy}, %rd4429;
	}
	shf.l.wrap.b32 	%r1819, %r1818, %r1817, 4;
	shf.l.wrap.b32 	%r1820, %r1817, %r1818, 4;
	mov.b64 	%rd4430, {%r1820, %r1819};
	add.s64 	%rd4431, %rd4360, %rd4430;
	xor.b64  	%rd4432, %rd4245, %rd4431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1821}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd4432;
	}
	shf.l.wrap.b32 	%r1823, %r1822, %r1821, 21;
	shf.l.wrap.b32 	%r1824, %r1821, %r1822, 21;
	mov.b64 	%rd4433, {%r1824, %r1823};
	add.s64 	%rd4434, %rd94, %rd4433;
	add.s64 	%rd4435, %rd4434, %rd4428;
	xor.b64  	%rd4436, %rd4435, %rd4430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1825,%dummy}, %rd4436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1826}, %rd4436;
	}
	shf.r.wrap.b32 	%r1827, %r1826, %r1825, 5;
	shf.r.wrap.b32 	%r1828, %r1825, %r1826, 5;
	mov.b64 	%rd4437, {%r1828, %r1827};
	add.s64 	%rd4438, %rd4431, %rd4437;
	xor.b64  	%rd4439, %rd4433, %rd4438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1829,%dummy}, %rd4439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1830}, %rd4439;
	}
	shf.r.wrap.b32 	%r1831, %r1830, %r1829, 18;
	shf.r.wrap.b32 	%r1832, %r1829, %r1830, 18;
	mov.b64 	%rd4440, {%r1832, %r1831};
	not.b64 	%rd4441, %rd4435;
	not.b64 	%rd4442, %rd4440;
	and.b64  	%rd4443, %rd4441, %rd4442;
	not.b64 	%rd4444, %rd4438;
	and.b64  	%rd4445, %rd4443, %rd4444;
	and.b64  	%rd4446, %rd4440, %rd4441;
	and.b64  	%rd4447, %rd4446, %rd4438;
	or.b64  	%rd4448, %rd4447, %rd4445;
	and.b64  	%rd4449, %rd4438, %rd4442;
	and.b64  	%rd4450, %rd4449, %rd4435;
	or.b64  	%rd4451, %rd4448, %rd4450;
	and.b64  	%rd4452, %rd4440, %rd4435;
	and.b64  	%rd4453, %rd4452, %rd4444;
	or.b64  	%rd4454, %rd4451, %rd4453;
	xor.b64  	%rd4455, %rd4454, %rd4437;
	and.b64  	%rd4456, %rd4443, %rd4438;
	and.b64  	%rd4457, %rd4441, %rd4444;
	and.b64  	%rd4458, %rd4457, %rd4440;
	or.b64  	%rd4459, %rd4458, %rd4456;
	and.b64  	%rd4460, %rd4435, %rd4442;
	and.b64  	%rd4461, %rd4460, %rd4444;
	or.b64  	%rd4462, %rd4459, %rd4461;
	and.b64  	%rd4463, %rd4452, %rd4438;
	or.b64  	%rd4464, %rd4462, %rd4463;
	xor.b64  	%rd4465, %rd4464, %rd4455;
	add.s64 	%rd4466, %rd102, %rd4284;
	add.s64 	%rd4467, %rd4466, %rd4318;
	xor.b64  	%rd4468, %rd4467, %rd4387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd4468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd4468;
	}
	shf.l.wrap.b32 	%r1835, %r1834, %r1833, 4;
	shf.l.wrap.b32 	%r1836, %r1833, %r1834, 4;
	mov.b64 	%rd4469, {%r1836, %r1835};
	add.s64 	%rd4470, %rd4243, %rd4469;
	xor.b64  	%rd4471, %rd4284, %rd4470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1837}, %rd4471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd4471;
	}
	shf.l.wrap.b32 	%r1839, %r1838, %r1837, 21;
	shf.l.wrap.b32 	%r1840, %r1837, %r1838, 21;
	mov.b64 	%rd4472, {%r1840, %r1839};
	add.s64 	%rd4473, %rd60, %rd4472;
	add.s64 	%rd4474, %rd4473, %rd4467;
	xor.b64  	%rd4475, %rd4474, %rd4469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd4475;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 5;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 5;
	mov.b64 	%rd4476, {%r1844, %r1843};
	add.s64 	%rd4477, %rd4470, %rd4476;
	xor.b64  	%rd4478, %rd4472, %rd4477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1845,%dummy}, %rd4478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1846}, %rd4478;
	}
	shf.r.wrap.b32 	%r1847, %r1846, %r1845, 18;
	shf.r.wrap.b32 	%r1848, %r1845, %r1846, 18;
	mov.b64 	%rd4479, {%r1848, %r1847};
	not.b64 	%rd4480, %rd4474;
	not.b64 	%rd4481, %rd4479;
	and.b64  	%rd4482, %rd4480, %rd4481;
	not.b64 	%rd4483, %rd4477;
	and.b64  	%rd4484, %rd4482, %rd4483;
	and.b64  	%rd4485, %rd4479, %rd4480;
	and.b64  	%rd4486, %rd4485, %rd4477;
	or.b64  	%rd4487, %rd4486, %rd4484;
	and.b64  	%rd4488, %rd4477, %rd4481;
	and.b64  	%rd4489, %rd4488, %rd4474;
	or.b64  	%rd4490, %rd4487, %rd4489;
	and.b64  	%rd4491, %rd4479, %rd4474;
	and.b64  	%rd4492, %rd4491, %rd4483;
	or.b64  	%rd4493, %rd4490, %rd4492;
	xor.b64  	%rd4494, %rd4493, %rd4476;
	and.b64  	%rd4495, %rd4482, %rd4477;
	and.b64  	%rd4496, %rd4480, %rd4483;
	and.b64  	%rd4497, %rd4496, %rd4479;
	or.b64  	%rd4498, %rd4497, %rd4495;
	and.b64  	%rd4499, %rd4474, %rd4481;
	and.b64  	%rd4500, %rd4499, %rd4483;
	or.b64  	%rd4501, %rd4498, %rd4500;
	and.b64  	%rd4502, %rd4491, %rd4477;
	or.b64  	%rd4503, %rd4501, %rd4502;
	xor.b64  	%rd4504, %rd4503, %rd4494;
	add.s64 	%rd4505, %rd4323, %rd4357;
	add.s64 	%rd4506, %rd4505, 7194923001510760043;
	xor.b64  	%rd4507, %rd4506, %rd4270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1849}, %rd4507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1850,%dummy}, %rd4507;
	}
	shf.l.wrap.b32 	%r1851, %r1850, %r1849, 4;
	shf.l.wrap.b32 	%r1852, %r1849, %r1850, 4;
	mov.b64 	%rd4508, {%r1852, %r1851};
	add.s64 	%rd4509, %rd4282, %rd4508;
	xor.b64  	%rd4510, %rd4323, %rd4509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd4510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd4510;
	}
	shf.l.wrap.b32 	%r1855, %r1854, %r1853, 21;
	shf.l.wrap.b32 	%r1856, %r1853, %r1854, 21;
	mov.b64 	%rd4511, {%r1856, %r1855};
	add.s64 	%rd4512, %rd4511, %rd4506;
	add.s64 	%rd4513, %rd4512, 3450974313248867902;
	xor.b64  	%rd4514, %rd4513, %rd4508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1857,%dummy}, %rd4514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1858}, %rd4514;
	}
	shf.r.wrap.b32 	%r1859, %r1858, %r1857, 5;
	shf.r.wrap.b32 	%r1860, %r1857, %r1858, 5;
	mov.b64 	%rd4515, {%r1860, %r1859};
	add.s64 	%rd4516, %rd4509, %rd4515;
	xor.b64  	%rd4517, %rd4511, %rd4516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1861,%dummy}, %rd4517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1862}, %rd4517;
	}
	shf.r.wrap.b32 	%r1863, %r1862, %r1861, 18;
	shf.r.wrap.b32 	%r1864, %r1861, %r1862, 18;
	mov.b64 	%rd4518, {%r1864, %r1863};
	not.b64 	%rd4519, %rd4513;
	not.b64 	%rd4520, %rd4518;
	and.b64  	%rd4521, %rd4519, %rd4520;
	not.b64 	%rd4522, %rd4516;
	and.b64  	%rd4523, %rd4521, %rd4522;
	and.b64  	%rd4524, %rd4518, %rd4519;
	and.b64  	%rd4525, %rd4524, %rd4516;
	or.b64  	%rd4526, %rd4525, %rd4523;
	and.b64  	%rd4527, %rd4516, %rd4520;
	and.b64  	%rd4528, %rd4527, %rd4513;
	or.b64  	%rd4529, %rd4526, %rd4528;
	and.b64  	%rd4530, %rd4518, %rd4513;
	and.b64  	%rd4531, %rd4530, %rd4522;
	or.b64  	%rd4532, %rd4529, %rd4531;
	xor.b64  	%rd4533, %rd4532, %rd4515;
	and.b64  	%rd4534, %rd4521, %rd4516;
	and.b64  	%rd4535, %rd4519, %rd4522;
	and.b64  	%rd4536, %rd4535, %rd4518;
	or.b64  	%rd4537, %rd4536, %rd4534;
	and.b64  	%rd4538, %rd4513, %rd4520;
	and.b64  	%rd4539, %rd4538, %rd4522;
	or.b64  	%rd4540, %rd4537, %rd4539;
	and.b64  	%rd4541, %rd4530, %rd4516;
	or.b64  	%rd4542, %rd4540, %rd4541;
	xor.b64  	%rd4543, %rd4542, %rd4533;
	add.s64 	%rd4544, %rd10, %rd4440;
	add.s64 	%rd4545, %rd4544, %rd4396;
	xor.b64  	%rd4546, %rd4545, %rd4543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd4546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1866,%dummy}, %rd4546;
	}
	shf.l.wrap.b32 	%r1867, %r1866, %r1865, 4;
	shf.l.wrap.b32 	%r1868, %r1865, %r1866, 4;
	mov.b64 	%rd4547, {%r1868, %r1867};
	add.s64 	%rd4548, %rd4477, %rd4547;
	xor.b64  	%rd4549, %rd4440, %rd4548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1869}, %rd4549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd4549;
	}
	shf.l.wrap.b32 	%r1871, %r1870, %r1869, 21;
	shf.l.wrap.b32 	%r1872, %r1869, %r1870, 21;
	mov.b64 	%rd4550, {%r1872, %r1871};
	add.s64 	%rd4551, %rd4550, %rd4545;
	add.s64 	%rd4552, %rd4551, -2856998567947870208;
	xor.b64  	%rd4553, %rd4552, %rd4547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1873,%dummy}, %rd4553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1874}, %rd4553;
	}
	shf.r.wrap.b32 	%r1875, %r1874, %r1873, 5;
	shf.r.wrap.b32 	%r1876, %r1873, %r1874, 5;
	mov.b64 	%rd4554, {%r1876, %r1875};
	add.s64 	%rd4555, %rd4548, %rd4554;
	xor.b64  	%rd4556, %rd4550, %rd4555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1877,%dummy}, %rd4556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1878}, %rd4556;
	}
	shf.r.wrap.b32 	%r1879, %r1878, %r1877, 18;
	shf.r.wrap.b32 	%r1880, %r1877, %r1878, 18;
	mov.b64 	%rd4557, {%r1880, %r1879};
	not.b64 	%rd4558, %rd4552;
	not.b64 	%rd4559, %rd4557;
	and.b64  	%rd4560, %rd4558, %rd4559;
	not.b64 	%rd4561, %rd4555;
	and.b64  	%rd4562, %rd4560, %rd4561;
	and.b64  	%rd4563, %rd4557, %rd4558;
	and.b64  	%rd4564, %rd4563, %rd4555;
	or.b64  	%rd4565, %rd4564, %rd4562;
	and.b64  	%rd4566, %rd4555, %rd4559;
	and.b64  	%rd4567, %rd4566, %rd4552;
	or.b64  	%rd4568, %rd4565, %rd4567;
	and.b64  	%rd4569, %rd4557, %rd4552;
	and.b64  	%rd4570, %rd4569, %rd4561;
	or.b64  	%rd4571, %rd4568, %rd4570;
	xor.b64  	%rd4572, %rd4571, %rd4554;
	and.b64  	%rd4573, %rd4560, %rd4555;
	and.b64  	%rd4574, %rd4558, %rd4561;
	and.b64  	%rd4575, %rd4574, %rd4557;
	or.b64  	%rd4576, %rd4575, %rd4573;
	and.b64  	%rd4577, %rd4552, %rd4559;
	and.b64  	%rd4578, %rd4577, %rd4561;
	or.b64  	%rd4579, %rd4576, %rd4578;
	and.b64  	%rd4580, %rd4569, %rd4555;
	or.b64  	%rd4581, %rd4579, %rd4580;
	xor.b64  	%rd4582, %rd4581, %rd4572;
	add.s64 	%rd4583, %rd4479, %rd4435;
	add.s64 	%rd4584, %rd4583, -4972871168744972288;
	xor.b64  	%rd4585, %rd4584, %rd4426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1881}, %rd4585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd4585;
	}
	shf.l.wrap.b32 	%r1883, %r1882, %r1881, 4;
	shf.l.wrap.b32 	%r1884, %r1881, %r1882, 4;
	mov.b64 	%rd4586, {%r1884, %r1883};
	add.s64 	%rd4587, %rd4516, %rd4586;
	xor.b64  	%rd4588, %rd4479, %rd4587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd4588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1886,%dummy}, %rd4588;
	}
	shf.l.wrap.b32 	%r1887, %r1886, %r1885, 21;
	shf.l.wrap.b32 	%r1888, %r1885, %r1886, 21;
	mov.b64 	%rd4589, {%r1888, %r1887};
	add.s64 	%rd4590, %rd4589, %rd4584;
	add.s64 	%rd4591, %rd4590, -7446784132049864704;
	xor.b64  	%rd4592, %rd4591, %rd4586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1889,%dummy}, %rd4592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1890}, %rd4592;
	}
	shf.r.wrap.b32 	%r1891, %r1890, %r1889, 5;
	shf.r.wrap.b32 	%r1892, %r1889, %r1890, 5;
	mov.b64 	%rd4593, {%r1892, %r1891};
	add.s64 	%rd4594, %rd4587, %rd4593;
	xor.b64  	%rd4595, %rd4589, %rd4594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1893,%dummy}, %rd4595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1894}, %rd4595;
	}
	shf.r.wrap.b32 	%r1895, %r1894, %r1893, 18;
	shf.r.wrap.b32 	%r1896, %r1893, %r1894, 18;
	mov.b64 	%rd4596, {%r1896, %r1895};
	not.b64 	%rd4597, %rd4591;
	not.b64 	%rd4598, %rd4596;
	and.b64  	%rd4599, %rd4597, %rd4598;
	not.b64 	%rd4600, %rd4594;
	and.b64  	%rd4601, %rd4599, %rd4600;
	and.b64  	%rd4602, %rd4596, %rd4597;
	and.b64  	%rd4603, %rd4602, %rd4594;
	or.b64  	%rd4604, %rd4603, %rd4601;
	and.b64  	%rd4605, %rd4594, %rd4598;
	and.b64  	%rd4606, %rd4605, %rd4591;
	or.b64  	%rd4607, %rd4604, %rd4606;
	and.b64  	%rd4608, %rd4596, %rd4591;
	and.b64  	%rd4609, %rd4608, %rd4600;
	or.b64  	%rd4610, %rd4607, %rd4609;
	xor.b64  	%rd4611, %rd4610, %rd4593;
	and.b64  	%rd4612, %rd4599, %rd4594;
	and.b64  	%rd4613, %rd4597, %rd4600;
	and.b64  	%rd4614, %rd4613, %rd4596;
	or.b64  	%rd4615, %rd4614, %rd4612;
	and.b64  	%rd4616, %rd4591, %rd4598;
	and.b64  	%rd4617, %rd4616, %rd4600;
	or.b64  	%rd4618, %rd4615, %rd4617;
	and.b64  	%rd4619, %rd4608, %rd4594;
	or.b64  	%rd4620, %rd4618, %rd4619;
	xor.b64  	%rd4621, %rd4620, %rd4611;
	add.s64 	%rd4622, %rd4518, %rd4474;
	add.s64 	%rd4623, %rd4622, 5987067145339136795;
	xor.b64  	%rd4624, %rd4623, %rd4465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1897}, %rd4624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1898,%dummy}, %rd4624;
	}
	shf.l.wrap.b32 	%r1899, %r1898, %r1897, 4;
	shf.l.wrap.b32 	%r1900, %r1897, %r1898, 4;
	mov.b64 	%rd4625, {%r1900, %r1899};
	add.s64 	%rd4626, %rd4399, %rd4625;
	xor.b64  	%rd4627, %rd4518, %rd4626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd4627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd4627;
	}
	shf.l.wrap.b32 	%r1903, %r1902, %r1901, 21;
	shf.l.wrap.b32 	%r1904, %r1901, %r1902, 21;
	mov.b64 	%rd4628, {%r1904, %r1903};
	add.s64 	%rd4629, %rd143, %rd4628;
	add.s64 	%rd4630, %rd4629, %rd4623;
	xor.b64  	%rd4631, %rd4630, %rd4625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1905,%dummy}, %rd4631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1906}, %rd4631;
	}
	shf.r.wrap.b32 	%r1907, %r1906, %r1905, 5;
	shf.r.wrap.b32 	%r1908, %r1905, %r1906, 5;
	mov.b64 	%rd4632, {%r1908, %r1907};
	add.s64 	%rd4633, %rd4626, %rd4632;
	xor.b64  	%rd4634, %rd4628, %rd4633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1909,%dummy}, %rd4634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1910}, %rd4634;
	}
	shf.r.wrap.b32 	%r1911, %r1910, %r1909, 18;
	shf.r.wrap.b32 	%r1912, %r1909, %r1910, 18;
	mov.b64 	%rd4635, {%r1912, %r1911};
	not.b64 	%rd4636, %rd4630;
	not.b64 	%rd4637, %rd4635;
	and.b64  	%rd4638, %rd4636, %rd4637;
	not.b64 	%rd4639, %rd4633;
	and.b64  	%rd4640, %rd4638, %rd4639;
	and.b64  	%rd4641, %rd4635, %rd4636;
	and.b64  	%rd4642, %rd4641, %rd4633;
	or.b64  	%rd4643, %rd4642, %rd4640;
	and.b64  	%rd4644, %rd4633, %rd4637;
	and.b64  	%rd4645, %rd4644, %rd4630;
	or.b64  	%rd4646, %rd4643, %rd4645;
	and.b64  	%rd4647, %rd4635, %rd4630;
	and.b64  	%rd4648, %rd4647, %rd4639;
	or.b64  	%rd4649, %rd4646, %rd4648;
	xor.b64  	%rd4650, %rd4649, %rd4632;
	and.b64  	%rd4651, %rd4638, %rd4633;
	and.b64  	%rd4652, %rd4636, %rd4639;
	and.b64  	%rd4653, %rd4652, %rd4635;
	or.b64  	%rd4654, %rd4653, %rd4651;
	and.b64  	%rd4655, %rd4630, %rd4637;
	and.b64  	%rd4656, %rd4655, %rd4639;
	or.b64  	%rd4657, %rd4654, %rd4656;
	and.b64  	%rd4658, %rd4647, %rd4633;
	or.b64  	%rd4659, %rd4657, %rd4658;
	xor.b64  	%rd4660, %rd4659, %rd4650;
	add.s64 	%rd4661, %rd4401, %rd4513;
	add.s64 	%rd4662, %rd4661, 7251808426145424871;
	xor.b64  	%rd4663, %rd4662, %rd4504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1913}, %rd4663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1914,%dummy}, %rd4663;
	}
	shf.l.wrap.b32 	%r1915, %r1914, %r1913, 4;
	shf.l.wrap.b32 	%r1916, %r1913, %r1914, 4;
	mov.b64 	%rd4664, {%r1916, %r1915};
	add.s64 	%rd4665, %rd4438, %rd4664;
	xor.b64  	%rd4666, %rd4401, %rd4665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd4666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1918,%dummy}, %rd4666;
	}
	shf.l.wrap.b32 	%r1919, %r1918, %r1917, 21;
	shf.l.wrap.b32 	%r1920, %r1917, %r1918, 21;
	mov.b64 	%rd4667, {%r1920, %r1919};
	add.s64 	%rd4668, %rd52, %rd4667;
	add.s64 	%rd4669, %rd4668, %rd4662;
	xor.b64  	%rd4670, %rd4669, %rd4664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1921,%dummy}, %rd4670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1922}, %rd4670;
	}
	shf.r.wrap.b32 	%r1923, %r1922, %r1921, 5;
	shf.r.wrap.b32 	%r1924, %r1921, %r1922, 5;
	mov.b64 	%rd4671, {%r1924, %r1923};
	add.s64 	%rd4672, %rd4665, %rd4671;
	xor.b64  	%rd4673, %rd4667, %rd4672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1925,%dummy}, %rd4673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1926}, %rd4673;
	}
	shf.r.wrap.b32 	%r1927, %r1926, %r1925, 18;
	shf.r.wrap.b32 	%r1928, %r1925, %r1926, 18;
	mov.b64 	%rd4674, {%r1928, %r1927};
	not.b64 	%rd4675, %rd4669;
	not.b64 	%rd4676, %rd4674;
	and.b64  	%rd4677, %rd4675, %rd4676;
	not.b64 	%rd4678, %rd4672;
	and.b64  	%rd4679, %rd4677, %rd4678;
	and.b64  	%rd4680, %rd4674, %rd4675;
	and.b64  	%rd4681, %rd4680, %rd4672;
	or.b64  	%rd4682, %rd4681, %rd4679;
	and.b64  	%rd4683, %rd4672, %rd4676;
	and.b64  	%rd4684, %rd4683, %rd4669;
	or.b64  	%rd4685, %rd4682, %rd4684;
	and.b64  	%rd4686, %rd4674, %rd4669;
	and.b64  	%rd4687, %rd4686, %rd4678;
	or.b64  	%rd4688, %rd4685, %rd4687;
	xor.b64  	%rd4689, %rd4688, %rd4671;
	and.b64  	%rd4690, %rd4677, %rd4672;
	and.b64  	%rd4691, %rd4675, %rd4678;
	and.b64  	%rd4692, %rd4691, %rd4674;
	or.b64  	%rd4693, %rd4692, %rd4690;
	and.b64  	%rd4694, %rd4669, %rd4676;
	and.b64  	%rd4695, %rd4694, %rd4678;
	or.b64  	%rd4696, %rd4693, %rd4695;
	and.b64  	%rd4697, %rd4686, %rd4672;
	or.b64  	%rd4698, %rd4696, %rd4697;
	xor.b64  	%rd4699, %rd4698, %rd4689;
	add.s64 	%rd4700, %rd4674, %rd4552;
	add.s64 	%rd4701, %rd4700, -4972871168744972288;
	xor.b64  	%rd4702, %rd4701, %rd4621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1929}, %rd4702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd4702;
	}
	shf.l.wrap.b32 	%r1931, %r1930, %r1929, 4;
	shf.l.wrap.b32 	%r1932, %r1929, %r1930, 4;
	mov.b64 	%rd4703, {%r1932, %r1931};
	add.s64 	%rd4704, %rd4633, %rd4703;
	xor.b64  	%rd4705, %rd4674, %rd4704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd4705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd4705;
	}
	shf.l.wrap.b32 	%r1935, %r1934, %r1933, 21;
	shf.l.wrap.b32 	%r1936, %r1933, %r1934, 21;
	mov.b64 	%rd4706, {%r1936, %r1935};
	add.s64 	%rd4707, %rd60, %rd4706;
	add.s64 	%rd4708, %rd4707, %rd4701;
	xor.b64  	%rd4709, %rd4708, %rd4703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1937,%dummy}, %rd4709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1938}, %rd4709;
	}
	shf.r.wrap.b32 	%r1939, %r1938, %r1937, 5;
	shf.r.wrap.b32 	%r1940, %r1937, %r1938, 5;
	mov.b64 	%rd4710, {%r1940, %r1939};
	add.s64 	%rd4711, %rd4704, %rd4710;
	xor.b64  	%rd4712, %rd4706, %rd4711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd4712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1942}, %rd4712;
	}
	shf.r.wrap.b32 	%r1943, %r1942, %r1941, 18;
	shf.r.wrap.b32 	%r1944, %r1941, %r1942, 18;
	mov.b64 	%rd4713, {%r1944, %r1943};
	not.b64 	%rd4714, %rd4708;
	not.b64 	%rd4715, %rd4713;
	and.b64  	%rd4716, %rd4714, %rd4715;
	not.b64 	%rd4717, %rd4711;
	and.b64  	%rd4718, %rd4716, %rd4717;
	and.b64  	%rd4719, %rd4713, %rd4714;
	and.b64  	%rd4720, %rd4719, %rd4711;
	or.b64  	%rd4721, %rd4720, %rd4718;
	and.b64  	%rd4722, %rd4711, %rd4715;
	and.b64  	%rd4723, %rd4722, %rd4708;
	or.b64  	%rd4724, %rd4721, %rd4723;
	and.b64  	%rd4725, %rd4713, %rd4708;
	and.b64  	%rd4726, %rd4725, %rd4717;
	or.b64  	%rd4727, %rd4724, %rd4726;
	xor.b64  	%rd4728, %rd4727, %rd4710;
	and.b64  	%rd4729, %rd4716, %rd4711;
	and.b64  	%rd4730, %rd4714, %rd4717;
	and.b64  	%rd4731, %rd4730, %rd4713;
	or.b64  	%rd4732, %rd4731, %rd4729;
	and.b64  	%rd4733, %rd4708, %rd4715;
	and.b64  	%rd4734, %rd4733, %rd4717;
	or.b64  	%rd4735, %rd4732, %rd4734;
	and.b64  	%rd4736, %rd4725, %rd4711;
	or.b64  	%rd4737, %rd4735, %rd4736;
	xor.b64  	%rd4738, %rd4737, %rd4728;
	add.s64 	%rd4739, %rd4557, %rd4591;
	add.s64 	%rd4740, %rd4739, 3450974313248867902;
	xor.b64  	%rd4741, %rd4740, %rd4660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1945}, %rd4741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1946,%dummy}, %rd4741;
	}
	shf.l.wrap.b32 	%r1947, %r1946, %r1945, 4;
	shf.l.wrap.b32 	%r1948, %r1945, %r1946, 4;
	mov.b64 	%rd4742, {%r1948, %r1947};
	add.s64 	%rd4743, %rd4672, %rd4742;
	xor.b64  	%rd4744, %rd4557, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd4744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd4744;
	}
	shf.l.wrap.b32 	%r1951, %r1950, %r1949, 21;
	shf.l.wrap.b32 	%r1952, %r1949, %r1950, 21;
	mov.b64 	%rd4745, {%r1952, %r1951};
	add.s64 	%rd4746, %rd143, %rd4745;
	add.s64 	%rd4747, %rd4746, %rd4740;
	xor.b64  	%rd4748, %rd4747, %rd4742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1953,%dummy}, %rd4748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1954}, %rd4748;
	}
	shf.r.wrap.b32 	%r1955, %r1954, %r1953, 5;
	shf.r.wrap.b32 	%r1956, %r1953, %r1954, 5;
	mov.b64 	%rd4749, {%r1956, %r1955};
	add.s64 	%rd4750, %rd4743, %rd4749;
	xor.b64  	%rd4751, %rd4745, %rd4750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1957,%dummy}, %rd4751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1958}, %rd4751;
	}
	shf.r.wrap.b32 	%r1959, %r1958, %r1957, 18;
	shf.r.wrap.b32 	%r1960, %r1957, %r1958, 18;
	mov.b64 	%rd4752, {%r1960, %r1959};
	not.b64 	%rd4753, %rd4747;
	not.b64 	%rd4754, %rd4752;
	and.b64  	%rd4755, %rd4753, %rd4754;
	not.b64 	%rd4756, %rd4750;
	and.b64  	%rd4757, %rd4755, %rd4756;
	and.b64  	%rd4758, %rd4752, %rd4753;
	and.b64  	%rd4759, %rd4758, %rd4750;
	or.b64  	%rd4760, %rd4759, %rd4757;
	and.b64  	%rd4761, %rd4750, %rd4754;
	and.b64  	%rd4762, %rd4761, %rd4747;
	or.b64  	%rd4763, %rd4760, %rd4762;
	and.b64  	%rd4764, %rd4752, %rd4747;
	and.b64  	%rd4765, %rd4764, %rd4756;
	or.b64  	%rd4766, %rd4763, %rd4765;
	xor.b64  	%rd4767, %rd4766, %rd4749;
	and.b64  	%rd4768, %rd4755, %rd4750;
	and.b64  	%rd4769, %rd4753, %rd4756;
	and.b64  	%rd4770, %rd4769, %rd4752;
	or.b64  	%rd4771, %rd4770, %rd4768;
	and.b64  	%rd4772, %rd4747, %rd4754;
	and.b64  	%rd4773, %rd4772, %rd4756;
	or.b64  	%rd4774, %rd4771, %rd4773;
	and.b64  	%rd4775, %rd4764, %rd4750;
	or.b64  	%rd4776, %rd4774, %rd4775;
	xor.b64  	%rd4777, %rd4776, %rd4767;
	add.s64 	%rd4778, %rd4596, %rd4630;
	add.s64 	%rd4779, %rd4778, -7446784132049864704;
	xor.b64  	%rd4780, %rd4779, %rd4699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd4780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1962,%dummy}, %rd4780;
	}
	shf.l.wrap.b32 	%r1963, %r1962, %r1961, 4;
	shf.l.wrap.b32 	%r1964, %r1961, %r1962, 4;
	mov.b64 	%rd4781, {%r1964, %r1963};
	add.s64 	%rd4782, %rd4555, %rd4781;
	xor.b64  	%rd4783, %rd4596, %rd4782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd4783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1966,%dummy}, %rd4783;
	}
	shf.l.wrap.b32 	%r1967, %r1966, %r1965, 21;
	shf.l.wrap.b32 	%r1968, %r1965, %r1966, 21;
	mov.b64 	%rd4784, {%r1968, %r1967};
	add.s64 	%rd4785, %rd18, %rd4784;
	add.s64 	%rd4786, %rd4785, %rd4779;
	xor.b64  	%rd4787, %rd4786, %rd4781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1969,%dummy}, %rd4787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1970}, %rd4787;
	}
	shf.r.wrap.b32 	%r1971, %r1970, %r1969, 5;
	shf.r.wrap.b32 	%r1972, %r1969, %r1970, 5;
	mov.b64 	%rd4788, {%r1972, %r1971};
	add.s64 	%rd4789, %rd4782, %rd4788;
	xor.b64  	%rd4790, %rd4784, %rd4789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1973,%dummy}, %rd4790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1974}, %rd4790;
	}
	shf.r.wrap.b32 	%r1975, %r1974, %r1973, 18;
	shf.r.wrap.b32 	%r1976, %r1973, %r1974, 18;
	mov.b64 	%rd4791, {%r1976, %r1975};
	not.b64 	%rd4792, %rd4786;
	not.b64 	%rd4793, %rd4791;
	and.b64  	%rd4794, %rd4792, %rd4793;
	not.b64 	%rd4795, %rd4789;
	and.b64  	%rd4796, %rd4794, %rd4795;
	and.b64  	%rd4797, %rd4791, %rd4792;
	and.b64  	%rd4798, %rd4797, %rd4789;
	or.b64  	%rd4799, %rd4798, %rd4796;
	and.b64  	%rd4800, %rd4789, %rd4793;
	and.b64  	%rd4801, %rd4800, %rd4786;
	or.b64  	%rd4802, %rd4799, %rd4801;
	and.b64  	%rd4803, %rd4791, %rd4786;
	and.b64  	%rd4804, %rd4803, %rd4795;
	or.b64  	%rd4805, %rd4802, %rd4804;
	xor.b64  	%rd4806, %rd4805, %rd4788;
	and.b64  	%rd4807, %rd4794, %rd4789;
	and.b64  	%rd4808, %rd4792, %rd4795;
	and.b64  	%rd4809, %rd4808, %rd4791;
	or.b64  	%rd4810, %rd4809, %rd4807;
	and.b64  	%rd4811, %rd4786, %rd4793;
	and.b64  	%rd4812, %rd4811, %rd4795;
	or.b64  	%rd4813, %rd4810, %rd4812;
	and.b64  	%rd4814, %rd4803, %rd4789;
	or.b64  	%rd4815, %rd4813, %rd4814;
	xor.b64  	%rd4816, %rd4815, %rd4806;
	add.s64 	%rd4817, %rd52, %rd4635;
	add.s64 	%rd4818, %rd4817, %rd4669;
	xor.b64  	%rd4819, %rd4818, %rd4582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1977}, %rd4819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1978,%dummy}, %rd4819;
	}
	shf.l.wrap.b32 	%r1979, %r1978, %r1977, 4;
	shf.l.wrap.b32 	%r1980, %r1977, %r1978, 4;
	mov.b64 	%rd4820, {%r1980, %r1979};
	add.s64 	%rd4821, %rd4594, %rd4820;
	xor.b64  	%rd4822, %rd4635, %rd4821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd4822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1982,%dummy}, %rd4822;
	}
	shf.l.wrap.b32 	%r1983, %r1982, %r1981, 21;
	shf.l.wrap.b32 	%r1984, %r1981, %r1982, 21;
	mov.b64 	%rd4823, {%r1984, %r1983};
	add.s64 	%rd4824, %rd4823, %rd4818;
	add.s64 	%rd4825, %rd4824, 5987067145339136795;
	xor.b64  	%rd4826, %rd4825, %rd4820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1985,%dummy}, %rd4826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1986}, %rd4826;
	}
	shf.r.wrap.b32 	%r1987, %r1986, %r1985, 5;
	shf.r.wrap.b32 	%r1988, %r1985, %r1986, 5;
	mov.b64 	%rd4827, {%r1988, %r1987};
	add.s64 	%rd4828, %rd4821, %rd4827;
	xor.b64  	%rd4829, %rd4823, %rd4828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1989,%dummy}, %rd4829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1990}, %rd4829;
	}
	shf.r.wrap.b32 	%r1991, %r1990, %r1989, 18;
	shf.r.wrap.b32 	%r1992, %r1989, %r1990, 18;
	mov.b64 	%rd4830, {%r1992, %r1991};
	not.b64 	%rd4831, %rd4825;
	not.b64 	%rd4832, %rd4830;
	and.b64  	%rd4833, %rd4831, %rd4832;
	not.b64 	%rd4834, %rd4828;
	and.b64  	%rd4835, %rd4833, %rd4834;
	and.b64  	%rd4836, %rd4830, %rd4831;
	and.b64  	%rd4837, %rd4836, %rd4828;
	or.b64  	%rd4838, %rd4837, %rd4835;
	and.b64  	%rd4839, %rd4828, %rd4832;
	and.b64  	%rd4840, %rd4839, %rd4825;
	or.b64  	%rd4841, %rd4838, %rd4840;
	and.b64  	%rd4842, %rd4830, %rd4825;
	and.b64  	%rd4843, %rd4842, %rd4834;
	or.b64  	%rd4844, %rd4841, %rd4843;
	xor.b64  	%rd4845, %rd4844, %rd4827;
	and.b64  	%rd4846, %rd4833, %rd4828;
	and.b64  	%rd4847, %rd4831, %rd4834;
	and.b64  	%rd4848, %rd4847, %rd4830;
	or.b64  	%rd4849, %rd4848, %rd4846;
	and.b64  	%rd4850, %rd4825, %rd4832;
	and.b64  	%rd4851, %rd4850, %rd4834;
	or.b64  	%rd4852, %rd4849, %rd4851;
	and.b64  	%rd4853, %rd4842, %rd4828;
	or.b64  	%rd4854, %rd4852, %rd4853;
	xor.b64  	%rd4855, %rd4854, %rd4845;
	add.s64 	%rd4856, %rd4752, %rd4708;
	add.s64 	%rd4857, %rd4856, 7251808426145424871;
	xor.b64  	%rd4858, %rd4857, %rd4855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1993}, %rd4858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1994,%dummy}, %rd4858;
	}
	shf.l.wrap.b32 	%r1995, %r1994, %r1993, 4;
	shf.l.wrap.b32 	%r1996, %r1993, %r1994, 4;
	mov.b64 	%rd4859, {%r1996, %r1995};
	add.s64 	%rd4860, %rd4789, %rd4859;
	xor.b64  	%rd4861, %rd4752, %rd4860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1997}, %rd4861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1998,%dummy}, %rd4861;
	}
	shf.l.wrap.b32 	%r1999, %r1998, %r1997, 21;
	shf.l.wrap.b32 	%r2000, %r1997, %r1998, 21;
	mov.b64 	%rd4862, {%r2000, %r1999};
	add.s64 	%rd4863, %rd102, %rd4862;
	add.s64 	%rd4864, %rd4863, %rd4857;
	add.s64 	%rd4865, %rd94, %rd4791;
	add.s64 	%rd4866, %rd4865, %rd4747;
	xor.b64  	%rd4867, %rd4866, %rd4738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd4867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2002,%dummy}, %rd4867;
	}
	shf.l.wrap.b32 	%r2003, %r2002, %r2001, 4;
	shf.l.wrap.b32 	%r2004, %r2001, %r2002, 4;
	mov.b64 	%rd4868, {%r2004, %r2003};
	add.s64 	%rd4869, %rd4828, %rd4868;
	xor.b64  	%rd4870, %rd4791, %rd4869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd4870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2006,%dummy}, %rd4870;
	}
	shf.l.wrap.b32 	%r2007, %r2006, %r2005, 21;
	shf.l.wrap.b32 	%r2008, %r2005, %r2006, 21;
	mov.b64 	%rd4871, {%r2008, %r2007};
	add.s64 	%rd4872, %rd135, %rd4871;
	add.s64 	%rd4873, %rd4872, %rd4866;
	xor.b64  	%rd4874, %rd4873, %rd4868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2009,%dummy}, %rd4874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2010}, %rd4874;
	}
	shf.r.wrap.b32 	%r2011, %r2010, %r2009, 5;
	shf.r.wrap.b32 	%r2012, %r2009, %r2010, 5;
	mov.b64 	%rd4875, {%r2012, %r2011};
	add.s64 	%rd4876, %rd4869, %rd4875;
	xor.b64  	%rd4877, %rd4871, %rd4876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2013,%dummy}, %rd4877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2014}, %rd4877;
	}
	shf.r.wrap.b32 	%r2015, %r2014, %r2013, 18;
	shf.r.wrap.b32 	%r2016, %r2013, %r2014, 18;
	mov.b64 	%rd4878, {%r2016, %r2015};
	add.s64 	%rd4879, %rd4830, %rd4786;
	add.s64 	%rd4880, %rd4879, -2856998567947870208;
	xor.b64  	%rd4881, %rd4880, %rd4777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2017}, %rd4881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2018,%dummy}, %rd4881;
	}
	shf.l.wrap.b32 	%r2019, %r2018, %r2017, 4;
	shf.l.wrap.b32 	%r2020, %r2017, %r2018, 4;
	mov.b64 	%rd4882, {%r2020, %r2019};
	add.s64 	%rd4883, %rd4711, %rd4882;
	xor.b64  	%rd4884, %rd4830, %rd4883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd4884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2022,%dummy}, %rd4884;
	}
	shf.l.wrap.b32 	%r2023, %r2022, %r2021, 21;
	shf.l.wrap.b32 	%r2024, %r2021, %r2022, 21;
	mov.b64 	%rd4885, {%r2024, %r2023};
	add.s64 	%rd4886, %rd4885, %rd4880;
	add.s64 	%rd4887, %rd4886, 7194923001510760043;
	xor.b64  	%rd4888, %rd4887, %rd4882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2025,%dummy}, %rd4888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2026}, %rd4888;
	}
	shf.r.wrap.b32 	%r2027, %r2026, %r2025, 5;
	shf.r.wrap.b32 	%r2028, %r2025, %r2026, 5;
	mov.b64 	%rd4889, {%r2028, %r2027};
	add.s64 	%rd4890, %rd4883, %rd4889;
	add.s64 	%rd4891, %rd4713, %rd4825;
	add.s64 	%rd4892, %rd4891, -3341658112243943424;
	xor.b64  	%rd4893, %rd4892, %rd4816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd4893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2030,%dummy}, %rd4893;
	}
	shf.l.wrap.b32 	%r2031, %r2030, %r2029, 4;
	shf.l.wrap.b32 	%r2032, %r2029, %r2030, 4;
	mov.b64 	%rd4894, {%r2032, %r2031};
	add.s64 	%rd4895, %rd4750, %rd4894;
	xor.b64  	%rd4896, %rd4713, %rd4895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2033}, %rd4896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2034,%dummy}, %rd4896;
	}
	shf.l.wrap.b32 	%r2035, %r2034, %r2033, 21;
	shf.l.wrap.b32 	%r2036, %r2033, %r2034, 21;
	mov.b64 	%rd4897, {%r2036, %r2035};
	add.s64 	%rd4898, %rd10, %rd4897;
	add.s64 	%rd4899, %rd4898, %rd4892;
	xor.b64  	%rd4900, %rd4899, %rd4894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2037,%dummy}, %rd4900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2038}, %rd4900;
	}
	shf.r.wrap.b32 	%r2039, %r2038, %r2037, 5;
	shf.r.wrap.b32 	%r2040, %r2037, %r2038, 5;
	mov.b64 	%rd4901, {%r2040, %r2039};
	add.s64 	%rd4902, %rd4895, %rd4901;
	xor.b64  	%rd4903, %rd4897, %rd4902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2041,%dummy}, %rd4903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2042}, %rd4903;
	}
	shf.r.wrap.b32 	%r2043, %r2042, %r2041, 18;
	shf.r.wrap.b32 	%r2044, %r2041, %r2042, 18;
	mov.b64 	%rd4904, {%r2044, %r2043};
	not.b64 	%rd4905, %rd4899;
	not.b64 	%rd4906, %rd4904;
	and.b64  	%rd4907, %rd4905, %rd4906;
	not.b64 	%rd4908, %rd4902;
	and.b64  	%rd4909, %rd4907, %rd4908;
	and.b64  	%rd4910, %rd4904, %rd4905;
	and.b64  	%rd4911, %rd4910, %rd4902;
	or.b64  	%rd4912, %rd4911, %rd4909;
	and.b64  	%rd4913, %rd4902, %rd4906;
	and.b64  	%rd4914, %rd4913, %rd4899;
	or.b64  	%rd4915, %rd4912, %rd4914;
	and.b64  	%rd4916, %rd4904, %rd4899;
	and.b64  	%rd4917, %rd4916, %rd4908;
	or.b64  	%rd4918, %rd4915, %rd4917;
	xor.b64  	%rd4919, %rd4918, %rd4901;
	and.b64  	%rd4920, %rd4907, %rd4902;
	and.b64  	%rd4921, %rd4905, %rd4908;
	and.b64  	%rd4922, %rd4921, %rd4904;
	or.b64  	%rd4923, %rd4922, %rd4920;
	and.b64  	%rd4924, %rd4899, %rd4906;
	and.b64  	%rd4925, %rd4924, %rd4908;
	or.b64  	%rd4926, %rd4923, %rd4925;
	and.b64  	%rd4927, %rd4916, %rd4902;
	or.b64  	%rd4928, %rd4926, %rd4927;
	xor.b64  	%rd4929, %rd4928, %rd4919;
	xor.b64  	%rd4930, %rd4890, %rd4864;
	xor.b64  	%rd4931, %rd4876, %rd4899;
	xor.b64  	%rd4932, %rd4929, %rd4878;
	xor.b64  	%rd4933, %rd4931, %rd4932;
	xor.b64  	%rd4934, %rd4933, %rd4930;
	xor.b64  	%rd1, %rd4934, 4328219849969886590;
	cvt.u32.u64	%r2045, %rd4934;
	xor.b32  	%r2046, %r2045, -1958746754;
	setp.ne.s32	%p1, %r2046, 0;
	@%p1 bra 	BB0_3;

	ld.param.u64 	%rd4938, [kernel_vblake_param_2];
	ld.global.u64 	%rd4935, [%rd4938];
	add.s64 	%rd4936, %rd4935, -1;
	setp.lt.u64	%p2, %rd4936, %rd1;
	@%p2 bra 	BB0_3;

	ld.param.u64 	%rd4939, [kernel_vblake_param_2];
	ld.param.u64 	%rd4937, [kernel_vblake_param_1];
	st.global.u32 	[%rd4937], %r1;
	st.global.u64 	[%rd4939], %rd1;

BB0_3:
	ret;
}


  